var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.03,1,0.866]],["body/components/AppComponent.html",[0,0.054,1,1.674,2,1.724,3,0.729,4,0.592,5,1.708,6,1.708,7,0.592,8,2.902,9,0.729,10,0.864,11,1.724,12,0.952,13,0.952,14,4.797,15,1.708,16,1.014,17,1.014,18,4.354,19,0.864,20,0.864,21,0.864,22,3.664,23,1.617,24,2.024,25,4.64,26,0.065,27,3.921,28,0.592,29,0.551,30,0.701,31,0.921,32,1.455,33,0.881,34,3.438,35,3.438,36,1.708,37,3.675,38,3.438,39,0.921,40,0.592,41,2.392,42,3.675,43,0.864,44,0.864,45,1.455,46,1.708,47,2.024,48,2.024,49,1.708,50,2.23,51,1.708,52,0.864,53,1.708,54,1.239,55,1.455,56,2.23,57,1.239,58,1.708,59,1.239,60,0.241,61,1.049,62,1.239,63,1.708,64,1.708,65,1.049,66,1.455,67,1.708,68,1.708,69,0.054,70,0.054]],["title/components/AuditorDashboardComponent.html",[0,0.03,57,0.866]],["body/components/AuditorDashboardComponent.html",[0,0.047,1,0.923,2,1.434,3,0.544,4,0.441,5,1.273,6,1.273,7,0.441,9,0.857,10,0.857,12,1.012,13,0.857,15,1.273,16,0.968,17,0.968,19,0.719,20,0.719,21,0.719,23,0.923,24,1.273,26,0.065,28,0.653,29,0.459,30,0.792,31,0.805,32,1.709,33,1.034,36,2.219,39,0.891,40,0.441,43,0.719,44,0.719,45,1.891,46,1.273,47,1.683,48,1.683,49,1.273,50,2.006,51,1.273,52,0.891,53,1.273,54,0.923,55,1.085,56,2.006,57,1.693,58,2.267,59,0.923,60,0.179,61,0.782,62,0.923,63,1.273,64,1.273,65,0.782,66,1.085,67,1.273,68,1.273,69,0.045,70,0.045,71,1.499,72,3.814,73,3.814,74,1.499,75,1.169,76,1.683,77,1.683,78,0.972,79,1.232,80,1.434,81,0.972,82,1.606,83,0.868,84,1.885,85,0.868,86,1.683,87,1.885,88,2.086,89,1.885,90,1.885,91,1.982,92,1.232,93,3.621,94,3.621,95,0.782,96,2.739,97,1.609,98,3.621,99,2.357,100,0.868,101,2.357,102,2.221,103,2.221,104,0.868,105,1.644,106,2.739,107,1.22,108,1.982,109,1.434,110,2.859,111,0.868,112,2.859,113,1.034,114,1.158,115,1.034,116,1.683,117,2.739,118,2.859,119,1.683,120,2.357,121,2.006,122,1.826,123,2.859,124,1.434,125,1.434,126,1.683,127,1.683,128,1.034,129,2.739,130,1.982,131,1.709,132,1.363,133,2.143,134,1.034,135,0.868,136,1.22,137,1.683,138,1.554,139,1.644,140,2.739,141,1.683,142,2.739,143,2.739,144,1.281,145,0.544,146,0.923,147,0.923,148,0.868,149,0.972,150,0.782,151,1.273,152,1.683,153,1.885,154,1.683,155,1.273,156,2.739,157,1.273,158,1.273,159,1.273,160,1.273,161,2.739,162,0.656,163,1.273,164,0.656,165,1.273,166,1.273,167,2.859,168,1.709,169,3.408,170,3.408,171,2.006,172,3.621,173,2.357,174,3.621,175,3.621,176,1.683,177,3.621,178,3.621,179,2.859,180,3.621,181,2.357,182,3.621,183,1.434,184,3.621,185,1.034,186,3.621,187,2.859,188,3.621,189,1.434,190,3.621,191,2.859,192,3.621,193,3.621,194,2.859,195,3.621,196,3.621,197,2.859,198,2.859,199,1.22,200,2.221,201,1.982,202,2.739,203,2.162,204,2.162,205,2.922,206,2.357,207,1.982,208,1.783,209,1.982,210,1.499,211,1.783,212,2.641,213,2.357,214,2.739,215,1.783,216,1.783,217,2.162,218,2.739,219,1.783,220,2.739,221,2.739,222,2.162,223,1.982,224,1.499,225,1.982,226,1.499,227,0.782,228,1.783,229,1.783,230,1.783,231,3.621,232,1.783,233,2.162,234,2.221,235,2.739,236,2.162,237,2.739,238,1.273]],["title/interfaces/Bodega.html",[60,0.168,239,0.325]],["body/interfaces/Bodega.html",[0,0.029,3,0.318,4,0.258,7,0.258,9,0.842,10,0.49,11,1.587,12,1.02,13,0.962,16,0.318,17,0.318,19,0.318,20,0.318,21,0.318,26,0.065,28,0.697,29,0.312,30,0.811,31,0.958,33,0.873,39,0.763,40,0.258,43,0.49,44,0.49,45,2.042,52,0.917,54,1.741,55,1.19,60,0.334,69,0.03,70,0.03,74,0.878,75,1.152,76,0.745,77,0.745,78,0.591,79,0.858,80,0.635,81,0.591,82,0.977,83,0.384,84,0.745,85,0.384,86,0.745,87,0.745,88,1.972,89,0.745,90,0.745,92,0.458,97,1.228,99,1.044,100,0.922,101,1.044,104,0.591,105,1.527,107,0.54,108,1.35,109,1.336,110,1.266,111,0.591,112,1.266,113,1.152,115,0.809,116,0.745,118,1.266,119,1.788,120,1.044,121,1.146,122,1.19,123,1.266,124,1.336,125,0.977,126,1.146,127,0.745,128,1.175,130,1.646,131,0.635,132,1.448,133,2.013,134,1.072,135,1.108,136,1.228,137,1.972,138,1.507,139,1.708,141,0.745,144,1.395,145,0.318,146,0.54,147,0.54,148,0.591,149,1.147,150,0.458,151,0.745,152,0.745,153,1.693,154,1.146,155,0.745,157,0.745,158,0.745,159,0.745,160,1.397,162,1.2,163,0.745,164,0.991,165,0.745,166,0.745,168,1.638,171,1.788,173,1.044,176,1.397,183,1.443,185,1.04,189,0.977,227,1.098,239,0.312,240,0.635,241,1.266,242,1.266,243,0.977,244,1.258,245,0.977,246,1.013,247,1.862,248,2.448,249,1.04,250,0.458,251,1.266,252,1.35,253,0.878,254,1.693,255,1.646,256,2.106,257,0.878,258,1.543,259,1.646,260,0.878,261,1.972,262,0.878,263,2.323,264,1.523,265,0.878,266,1.646,267,0.878,268,1.146,269,1.35,270,0.878,271,2.013,272,1.994,273,1.693,274,1.443,275,1.32,276,1.994,277,1.693,278,1.994,279,1.922,280,0.878,281,0.878,282,2.194,283,0.878,284,0.878,285,1.994,286,1.646,287,0.878,288,1.19,289,0.878,290,0.878,291,0.878,292,1.35,293,0.878,294,0.878,295,1.569,296,1.044,297,0.878,298,0.878,299,0.878,300,0.878,301,0.635,302,0.963,303,1.994,304,1.994,305,0.963,306,0.878,307,0.704,308,1.972,309,0.878,310,0.878,311,0.878,312,0.878,313,0.878,314,0.878,315,1.569,316,0.458,317,0.54,318,1.646,319,0.878,320,0.878,321,1.847,322,0.878,323,0.878,324,0.878,325,0.878,326,0.831,327,1.35,328,0.878,329,1.646,330,1.35,331,1.646,332,1.646,333,0.878,334,0.878,335,1.35,336,0.878,337,1.35,338,1.646,339,1.35,340,2.194,341,0.878,342,1.771,343,0.878,344,0.878,345,0.878,346,0.704,347,0.635,348,0.635,349,0.635,350,0.54,351,0.878,352,1.35,353,0.878,354,0.878,355,0.878,356,0.878,357,1.146,358,0.878,359,0.878,360,0.878,361,0.878,362,0.878,363,0.878,364,0.878,365,1.35,366,1.35,367,1.19,368,1.35,369,1.957,370,1.646,371,1.397,372,0.878,373,0.745,374,1.603,375,1.603,376,1.606,377,1.603,378,1.044,379,0.878,380,1.847,381,0.878,382,1.646,383,1.35,384,1.847,385,1.35,386,0.878,387,0.878,388,1.847,389,0.878,390,0.878,391,0.878,392,0.878,393,0.878,394,0.635,395,1.35,396,0.878,397,1.947,398,0.878,399,0.878,400,1.646,401,1.847,402,1.35,403,0.878,404,0.878,405,1.013,406,0.878,407,0.878,408,1.35,409,0.878,410,0.977,411,0.878,412,0.878,413,0.878,414,0.878,415,0.878,416,0.878,417,0.878,418,0.878,419,0.878,420,1.603,421,0.878,422,0.878,423,0.878,424,0.878,425,1.044,426,1.044,427,1.044,428,0.878,429,0.878,430,1.994,431,1.397,432,1.693,433,0.878,434,0.745,435,0.745,436,0.878,437,0.878,438,1.35,439,0.878,440,0.878,441,0.878,442,0.878,443,1.35,444,1.35,445,2.106,446,1.35,447,1.646,448,1.35,449,1.646,450,1.847,451,0.635,452,1.397,453,0.745,454,0.878,455,0.878,456,0.878,457,1.646,458,1.35,459,0.878,460,0.878,461,1.603,462,1.603,463,0.878,464,0.878,465,0.878,466,1.35,467,1.35,468,2.106,469,0.878,470,2.264,471,0.878,472,1.646,473,1.397,474,0.878,475,1.35,476,0.878,477,0.878,478,0.878,479,0.878,480,0.878,481,1.847,482,1.646,483,1.35,484,1.646,485,1.646,486,1.994,487,0.878,488,0.878,489,0.878,490,1.35,491,1.35,492,1.35,493,1.35,494,1.19,495,1.646,496,1.646,497,0.878,498,0.878,499,1.35,500,0.878,501,1.35,502,0.878,503,0.878,504,1.646,505,0.878,506,1.646,507,0.878,508,2.664,509,1.266,510,0.878,511,2.373,512,1.266,513,0.878,514,1.35,515,0.878,516,0.878,517,0.878,518,0.878,519,0.878,520,0.878,521,0.878,522,1.266,523,0.878,524,0.878,525,0.878,526,1.266,527,0.878,528,0.878,529,1.35,530,0.878,531,1.35,532,0.878,533,0.878,534,0.878,535,0.635,536,0.878,537,1.646,538,1.35,539,1.35,540,0.878,541,0.878,542,1.35,543,0.878,544,0.878,545,0.878,546,0.878,547,0.878,548,0.878,549,0.878,550,0.878,551,0.878,552,1.646,553,0.878,554,0.878,555,0.878,556,0.878,557,0.878,558,1.266,559,0.878,560,1.646,561,1.646,562,0.878,563,0.878,564,0.878,565,1.35,566,0.878,567,1.35,568,0.878,569,0.878,570,1.646,571,0.878,572,0.878,573,0.878,574,0.878,575,1.35,576,1.35,577,0.878,578,0.878,579,0.878,580,0.878,581,0.878,582,0.878,583,0.878,584,1.35,585,0.878,586,1.35,587,0.878,588,0.878,589,0.878]],["title/interfaces/Bodega-1.html",[60,0.142,239,0.274,258,0.73]],["body/interfaces/Bodega-1.html",[0,0.029,3,0.32,4,0.26,7,0.26,9,0.823,10,0.599,11,1.527,12,1.026,13,0.963,16,0.32,17,0.32,19,0.32,20,0.32,21,0.32,26,0.065,28,0.699,29,0.314,30,0.813,31,0.959,33,0.812,39,0.765,40,0.26,43,0.32,44,0.492,52,0.91,59,0.544,60,0.333,69,0.03,70,0.03,74,0.884,75,1.159,76,0.75,77,0.75,78,0.594,79,0.862,80,0.639,81,0.594,82,0.982,83,0.387,84,0.75,85,0.387,86,0.75,87,0.75,88,1.976,89,0.75,90,0.75,92,0.461,95,0.461,97,1.232,100,0.876,104,0.594,105,1.56,107,0.544,109,1.195,111,0.387,113,1.074,114,1.428,115,1.236,116,0.75,119,1.793,121,0.75,122,1.195,124,1.447,125,0.982,126,1.152,127,0.75,128,1.176,130,0.884,131,0.639,132,1.445,133,1.867,134,1.019,135,1.148,136,0.836,137,1.976,138,1.56,139,1.712,141,0.75,144,1.409,145,0.32,146,0.544,147,0.544,148,0.594,149,1.148,150,0.461,151,0.75,152,0.75,153,1.698,154,1.152,155,0.75,157,0.75,158,0.75,159,0.75,160,1.403,162,1.207,163,0.75,164,1.019,165,0.75,166,0.75,168,1.641,171,1.698,173,1.051,176,1.403,183,1.341,185,0.967,189,0.639,227,0.862,239,0.314,240,0.639,243,0.982,244,1.214,245,0.982,246,1.017,247,1.867,248,2.452,249,1.043,250,0.461,252,1.652,253,0.884,254,1.698,255,1.652,256,2.199,257,0.884,258,1.529,259,1.854,260,0.884,261,1.927,262,0.884,263,2.269,264,1.447,265,0.884,266,1.652,267,0.884,268,1.403,269,1.652,270,0.884,271,1.976,272,1.854,273,1.574,274,1.341,275,1.295,276,1.854,277,1.574,278,1.854,279,1.867,280,0.884,281,0.884,282,2.199,283,0.884,284,0.884,285,2,286,1.652,287,0.884,288,1.195,289,0.884,290,0.884,291,0.884,292,1.357,293,0.884,294,0.884,295,1.574,296,1.051,297,0.884,298,0.884,299,0.884,300,0.884,301,0.639,302,0.862,303,2,304,1.854,305,0.967,306,0.884,307,0.708,308,1.867,309,0.884,310,0.884,311,0.884,312,0.884,313,0.884,314,0.884,315,0.75,316,0.461,317,0.544,318,1.652,319,0.884,320,0.884,321,1.854,322,0.884,323,0.884,324,0.884,325,0.884,326,0.836,327,1.357,328,0.884,329,1.652,330,1.357,331,1.652,332,1.652,333,0.884,334,0.884,335,1.357,336,0.884,337,1.357,338,1.652,339,1.357,340,2.112,341,0.884,342,1.748,343,0.884,344,0.884,345,0.884,346,0.708,347,0.639,348,0.639,349,0.639,350,0.544,351,0.884,352,1.357,353,0.884,354,0.884,355,0.884,356,0.884,357,0.75,358,0.884,359,0.884,360,0.884,361,0.884,362,0.884,363,0.884,364,0.884,365,1.357,366,1.357,367,1.195,368,0.884,370,1.652,371,1.403,372,0.884,373,0.75,379,0.884,380,1.652,381,0.884,382,1.652,383,1.357,384,2,385,1.357,386,0.884,387,0.884,388,1.854,389,0.884,390,0.884,391,0.884,392,0.884,393,0.884,394,0.639,395,0.884,396,0.884,398,0.884,399,0.884,400,1.357,401,1.357,402,1.854,403,0.884,404,0.884,405,1.017,406,0.884,407,0.884,408,1.357,409,0.884,410,0.982,411,0.884,412,0.884,413,0.884,414,0.884,415,0.884,416,0.884,417,0.884,418,0.884,419,0.884,421,0.884,422,0.884,423,0.884,424,0.884,428,1.357,429,0.884,430,2,431,1.403,432,1.698,433,0.884,434,0.75,435,0.75,436,0.884,437,0.884,438,1.357,439,0.884,440,0.884,441,0.884,442,0.884,443,1.357,444,1.357,445,2.112,446,1.357,447,1.652,448,1.357,449,1.652,450,1.854,451,0.639,452,1.403,453,0.75,454,0.884,455,0.884,456,0.884,457,1.652,458,1.357,459,0.884,460,0.884,463,0.884,464,0.884,465,0.884,466,1.357,467,1.357,468,2.112,469,0.884,470,2.269,471,0.884,472,1.652,473,1.403,474,0.884,475,1.357,476,0.884,477,0.884,478,0.884,479,0.884,480,0.884,481,1.854,482,1.652,483,1.357,484,1.652,485,1.652,486,1.854,487,0.884,488,0.884,489,0.884,490,1.357,491,1.357,492,1.357,493,1.357,494,1.195,495,1.854,496,1.854,497,0.884,498,0.884,499,1.357,500,0.884,501,1.357,502,0.884,503,0.884,504,1.854,505,0.884,506,1.854,507,0.884,508,2.674,509,1.275,510,0.884,511,2.383,512,1.275,513,0.884,514,1.357,515,0.884,516,0.884,517,0.884,518,0.884,519,0.884,520,0.884,521,0.884,522,1.275,523,0.884,524,0.884,525,0.884,526,1.275,527,0.884,528,0.884,529,1.357,530,0.884,531,1.357,532,0.884,533,0.884,534,0.884,535,0.982,536,0.884,537,1.652,538,1.357,539,1.357,540,0.884,541,0.884,542,1.357,543,0.884,544,0.884,545,0.884,546,0.884,547,0.884,548,0.884,549,0.884,550,0.884,551,0.884,552,1.652,553,0.884,554,0.884,555,0.884,556,0.884,557,0.884,559,0.884,560,1.652,561,1.652,562,0.884,563,0.884,564,0.884,565,1.357,566,0.884,567,1.357,568,0.884,569,0.884,570,1.652,571,0.884,572,0.884,573,0.884,574,0.884,575,1.357,576,1.357,577,0.884,578,0.884,579,0.884,580,0.884,581,0.884,582,0.884,583,0.884,584,1.357,585,0.884,586,1.357,587,0.884,588,0.884,589,0.884,590,1.275,591,1.275,592,2.479,593,3.386,594,2.479,595,2.479,596,3.018,597,1.614,598,1.614,599,1.614,600,1.051,601,1.614,602,0.75,603,1.051,604,1.051,605,0.884,606,1.614,607,1.051,608,1.051,609,1.614,610,1.614,611,0.75,612,1.614,613,1.614,614,1.614,615,1.614,616,1.614,617,1.614,618,1.051,619,0.884,620,1.051,621,2.511,622,1.614,623,1.614,624,1.614,625,3.018,626,1.965,627,2.479,628,1.614,629,1.614,630,2.479,631,1.614,632,1.614,633,2.479,634,1.614,635,1.614,636,2.479,637,1.614,638,1.614,639,2.479,640,1.614,641,1.614,642,2.479,643,1.614,644,1.614,645,2.479,646,1.614,647,1.614,648,2.479,649,1.614,650,1.614,651,2.479,652,1.614,653,1.614,654,2.479,655,1.614,656,1.614,657,2.479,658,1.614,659,1.614,660,1.614,661,0.544,662,1.614,663,0.884,664,0.884,665,1.051,666,1.275,667,0.884,668,1.051,669,1.614,670,1.275]],["title/interfaces/Bodega-2.html",[60,0.142,239,0.274,326,0.73]],["body/interfaces/Bodega-2.html",[0,0.026,3,0.279,4,0.226,7,0.226,9,0.809,10,0.548,11,1.511,12,1.021,13,0.949,16,0.279,17,0.279,19,0.279,20,0.279,21,0.279,26,0.065,28,0.717,29,0.282,30,0.818,31,0.994,33,0.821,39,0.723,40,0.226,43,0.279,44,0.442,52,0.893,60,0.329,61,0.401,69,0.027,70,0.027,75,1.171,76,0.653,77,0.653,78,0.533,79,0.789,80,0.557,81,0.533,82,0.881,83,0.337,84,0.653,85,0.337,86,0.653,87,0.653,88,1.894,89,0.653,90,0.653,92,0.401,95,0.401,97,1.154,100,0.821,104,0.533,105,1.46,107,0.474,109,1.094,111,0.337,113,1.108,114,1.432,115,1.238,116,0.653,119,1.894,121,1.034,122,1.356,124,1.356,125,0.881,126,1.034,127,0.653,128,1.156,131,0.557,132,1.423,133,1.839,134,1.067,135,1.168,136,0.931,137,1.894,138,1.5,139,1.69,141,1.034,144,1.382,145,0.279,146,0.474,147,0.474,148,0.533,149,1.156,150,0.401,151,0.653,152,0.653,153,1.591,154,1.034,155,0.653,157,0.653,158,0.653,159,0.653,160,1.284,162,1.207,163,0.653,164,1.038,165,0.653,166,0.653,168,1.567,171,1.773,176,1.46,183,1.356,185,0.978,189,0.557,199,0.474,227,1.04,239,0.398,240,0.557,243,1.094,244,1.271,245,1.094,246,1.059,247,2.043,248,2.371,249,0.978,250,0.401,252,1.513,253,0.77,254,1.591,255,1.513,256,2.166,257,0.77,258,1.546,259,1.72,260,0.77,261,1.894,262,0.77,263,2.166,264,1.356,265,0.77,266,1.513,267,0.77,268,1.46,269,1.218,270,0.77,271,1.94,272,1.875,273,1.591,274,1.356,275,1.309,276,1.875,277,1.591,278,1.875,279,1.839,280,0.77,281,0.77,282,2.166,283,0.77,284,0.77,285,1.875,286,1.513,287,1.218,288,1.094,289,1.218,290,0.77,291,0.77,292,1.72,293,0.77,294,0.77,295,1.46,297,0.77,298,0.77,299,0.77,300,0.77,301,0.557,302,0.789,303,2.089,304,1.994,305,0.897,306,0.77,307,0.635,308,1.894,309,0.77,310,0.77,311,0.77,312,0.77,313,0.77,314,0.77,315,1.46,316,0.401,317,0.474,318,1.513,319,0.77,320,0.77,321,1.72,322,0.77,323,0.77,324,0.77,325,0.77,326,0.75,327,1.218,328,0.77,329,1.513,330,1.218,331,1.513,332,1.513,333,1.875,334,0.77,335,1.218,336,1.513,337,1.218,338,1.513,339,1.513,340,2.23,341,0.77,342,1.763,343,0.77,344,0.77,345,0.77,346,0.635,347,0.557,348,0.557,349,0.557,350,0.474,351,0.77,352,1.218,353,0.77,354,0.77,355,0.77,356,0.77,357,0.653,358,0.77,359,0.77,360,0.77,361,1.218,362,0.77,363,0.77,364,0.77,365,1.218,366,1.218,367,1.094,368,1.875,370,1.513,371,1.284,372,0.77,373,0.653,376,1.449,378,0.915,379,0.77,380,1.72,381,0.77,382,1.513,383,1.218,384,1.72,385,1.218,386,0.77,387,0.77,388,1.875,389,1.218,390,0.77,391,0.77,392,0.77,393,0.77,394,0.557,395,0.77,396,0.77,398,1.218,399,0.77,400,1.513,401,1.72,402,1.218,403,0.77,404,0.77,405,1.154,406,0.77,407,0.77,408,1.218,409,0.77,410,1.244,411,0.77,412,0.77,413,0.77,414,0.77,415,0.77,416,0.77,417,0.77,418,0.77,419,0.77,421,0.77,422,0.77,423,1.218,424,0.77,425,0.915,426,0.915,427,0.915,428,0.77,429,0.77,430,1.875,431,1.693,432,1.839,433,0.77,434,1.034,435,1.46,436,0.77,437,0.77,438,1.218,439,0.77,440,0.77,441,0.77,442,0.77,443,1.513,444,1.218,445,2.166,446,1.513,447,1.72,448,1.218,449,1.72,450,1.72,451,1.244,452,1.773,453,0.653,454,0.77,455,1.218,456,0.77,457,1.513,458,1.218,459,0.77,460,0.77,463,0.77,464,0.77,465,0.77,466,1.513,467,1.513,468,1.994,469,0.77,470,2.23,471,0.77,472,1.513,473,1.284,474,0.77,475,1.218,476,0.77,477,0.77,478,0.77,479,0.77,480,1.218,481,1.72,482,1.875,483,1.218,484,1.513,485,1.513,486,1.875,487,0.77,488,1.218,489,0.77,490,0.77,491,0.77,492,0.77,493,0.77,494,1.935,495,1.513,496,1.513,497,0.77,498,0.77,499,1.218,500,0.77,501,1.218,502,0.77,503,0.77,504,1.513,505,0.77,506,1.513,507,0.77,510,0.77,513,0.77,514,1.218,515,0.77,516,0.77,517,0.77,518,0.77,519,0.77,520,0.77,521,0.77,523,0.77,524,0.77,525,0.77,527,0.77,528,0.77,529,1.218,530,0.77,531,1.218,532,0.77,533,0.77,534,0.77,535,1.244,536,0.77,537,1.513,538,1.218,539,1.218,540,0.77,541,0.77,542,1.218,543,0.77,544,0.77,545,0.77,546,0.77,547,0.77,548,0.77,549,0.77,550,0.77,551,0.77,552,1.513,553,0.77,554,0.77,555,0.77,556,0.77,557,0.77,559,0.77,560,1.72,561,1.72,562,0.77,563,0.77,564,0.77,565,1.218,566,0.77,567,1.218,568,0.77,569,0.77,570,1.513,571,0.77,572,0.77,573,0.77,574,0.77,575,1.218,576,1.218,577,0.77,578,0.77,579,0.77,580,1.218,581,1.218,582,0.77,583,0.77,584,1.218,585,0.77,586,1.218,587,0.77,588,0.77,589,0.77,602,0.653,603,0.915,604,1.449,605,0.77,606,1.799,607,1.799,608,0.915,609,1.799,610,1.799,611,1.284,618,0.915,619,0.77,620,0.915,621,2.371,661,1.059,671,0.915,672,2.271,673,0.77,674,0.653,675,2.481,676,1.11,677,2.481,678,1.449,679,0.915,680,2.229,681,0.915,682,1.11,683,0.77,684,1.11,685,2.481,686,1.799,687,2.371,688,1.11,689,1.11,690,1.11,691,1.11,692,0.915,693,1.11,694,0.915,695,1.11,696,1.11,697,1.11,698,1.11,699,1.11,700,1.11,701,1.11,702,1.11,703,1.11,704,1.757,705,2.181,706,3.124,707,1.11,708,1.757,709,2.481,710,1.757,711,1.449,712,1.757,713,1.449,714,1.449,715,1.757,716,2.703,717,1.757,718,2.181,719,2.481,720,2.481,721,1.449,722,1.757,723,1.757,724,1.11,725,1.11,726,2.181,727,1.11,728,1.11,729,1.11,730,1.11,731,1.11,732,1.11,733,1.11,734,1.11,735,1.11,736,1.11,737,1.11,738,1.11,739,1.11,740,1.11,741,1.11,742,1.11,743,2.481,744,1.11,745,1.11,746,1.11,747,1.11,748,1.757,749,1.11,750,1.11,751,1.11,752,1.757,753,1.757,754,1.757,755,1.11,756,1.11,757,1.11,758,1.11,759,1.757,760,1.11,761,1.11,762,1.11,763,1.11,764,1.11,765,1.11,766,0.915,767,0.915,768,1.11,769,1.11,770,1.11,771,2.181,772,1.757,773,1.11,774,1.11,775,1.11,776,1.11,777,1.11,778,1.11,779,1.11]],["title/components/LoginComponent.html",[0,0.03,62,0.866]],["body/components/LoginComponent.html",[0,0.043,1,0.78,2,1.278,3,0.459,4,0.372,5,1.075,6,1.075,7,0.372,9,0.84,10,0.738,12,1.038,13,0.893,15,1.075,16,0.937,17,0.937,19,0.641,20,0.87,21,0.641,23,0.78,24,1.075,26,0.065,28,0.372,29,0.409,30,0.82,31,1.011,32,1.89,33,1.144,36,2.305,39,0.84,40,0.372,43,0.459,44,0.641,46,1.075,47,1.5,48,1.5,49,1.075,50,1.87,51,1.075,52,0.893,53,1.075,54,0.78,55,0.916,56,1.87,57,0.78,58,1.075,59,0.78,60,0.152,61,0.66,62,1.356,63,1.075,64,1.075,65,0.66,66,0.916,67,1.075,68,1.075,69,0.04,70,0.04,71,1.266,75,1.189,81,0.891,82,1.472,83,0.774,85,0.774,91,1.767,95,1.062,100,0.965,102,2.317,103,2.317,104,0.774,109,1.594,111,0.554,113,1.223,114,1.331,115,1.163,124,0.916,125,0.916,128,0.965,130,1.767,131,1.278,134,1.015,135,1.015,145,0.459,146,0.78,148,0.774,149,0.965,150,0.66,162,0.965,181,1.506,185,0.66,199,0.78,200,2.036,201,2.317,206,2.421,207,1.266,209,1.266,210,1.266,219,1.506,223,1.767,224,1.767,225,2.203,226,1.767,227,0.922,234,2.036,238,1.075,244,1.331,246,1.547,247,2.167,249,1.31,250,0.66,251,3.462,258,1.356,268,1.075,274,0.916,275,1.062,288,1.278,295,2.133,302,1.252,305,1.252,307,0.66,315,1.075,316,0.922,326,1.253,346,0.922,371,1.075,373,1.075,431,1.967,432,2.133,434,1.075,435,1.5,451,1.945,452,2.283,453,2.27,494,1.964,605,1.767,619,1.767,661,1.088,663,1.266,664,1.266,667,1.266,670,1.826,672,1.5,674,1.075,678,3.273,679,3.263,680,2.62,686,3.135,687,2.421,692,2.101,694,2.62,711,1.506,713,1.506,714,2.101,721,2.101,780,1.826,781,4.024,782,3.718,783,3.228,784,4.024,785,4.233,786,3.718,787,3.718,788,3.718,789,4.233,790,3.718,791,4.384,792,4.024,793,3.228,794,3.228,795,3.228,796,3.228,797,4.024,798,1.506,799,3.228,800,3.228,801,2.313,802,3.228,803,3.228,804,3.553,805,3.682,806,3.228,807,2.313,808,3.228,809,2.929,810,4.59,811,2.549,812,3.228,813,2.313,814,4.723,815,3.228,816,2.101,817,2.313,818,2.313,819,2.313,820,2.313,821,2.313,822,4.59,823,3.718,824,1.506,825,2.313,826,3.718,827,2.313,828,2.313,829,2.313,830,2.62,831,2.313,832,4.024,833,2.203,834,3.228,835,2.313,836,4.384,837,3.228,838,2.313,839,2.313,840,2.313,841,2.313,842,2.313,843,4.384,844,1.826,845,1.767,846,2.313,847,2.313,848,3.228,849,3.228,850,2.313,851,2.313,852,2.313,853,3.228,854,2.313,855,2.313,856,2.313,857,2.313,858,2.313,859,2.313,860,2.313,861,1.506,862,2.313,863,2.313,864,2.313,865,2.313,866,2.313,867,2.313,868,2.313,869,2.313,870,2.313,871,2.313,872,2.313,873,2.313,874,2.313,875,2.313,876,3.718,877,2.313,878,3.718,879,4.884,880,3.228,881,3.228,882,3.228,883,3.228,884,3.228,885,3.228,886,2.549,887,3.228,888,3.228,889,3.228,890,4.024,891,4.024,892,3.228,893,2.549,894,2.101,895,3.228,896,3.228,897,3.228,898,3.228,899,1.826,900,1.506,901,2.313,902,1.826,903,1.826,904,1.506,905,1.506,906,1.826,907,2.755,908,2.313,909,2.313,910,3.228,911,1.826,912,2.313,913,1.506,914,2.313,915,2.313,916,2.549,917,1.506,918,1.506,919,1.506,920,1.506,921,1.506,922,1.826,923,1.826,924,2.549,925,1.506,926,2.313]],["title/components/NavbarComponent.html",[0,0.03,23,0.866]],["body/components/NavbarComponent.html",[0,0.043,1,0.767,2,1.264,3,0.452,4,0.367,5,1.058,6,1.058,7,0.367,9,0.793,10,0.793,11,0.902,12,1.025,13,0.973,15,1.058,16,0.934,17,0.934,19,0.634,20,0.835,21,0.634,22,2.911,23,1.631,24,1.058,26,0.065,28,0.514,29,0.404,30,0.748,31,0.889,32,1.46,33,0.884,34,2.521,35,2.521,36,2.265,39,0.835,40,0.367,41,1.482,43,0.634,44,0.634,45,1.728,46,1.058,47,1.484,48,1.484,49,1.058,50,1.858,51,1.058,52,0.835,53,1.058,54,0.767,55,0.902,56,1.858,57,0.767,58,1.058,59,0.767,60,0.304,61,0.65,62,0.767,63,1.058,64,1.058,65,0.65,66,1.667,67,1.058,68,1.058,69,0.039,70,0.039,71,1.247,75,1.141,78,0.884,79,1.141,80,1.264,81,0.884,83,0.765,85,0.765,91,1.748,92,1.141,95,0.912,99,2.078,100,0.765,101,2.078,102,2.019,103,2.019,104,1.074,111,0.765,113,1.141,114,1.327,115,1.096,120,1.482,128,0.884,132,0.912,134,0.546,135,0.884,144,1.202,145,0.452,149,0.884,162,0.546,185,1.327,199,1.51,200,2.388,201,2.304,203,2.521,207,2.019,208,1.482,209,2.304,210,1.247,211,2.602,212,1.482,213,1.482,215,2.078,216,2.078,222,2.521,223,2.388,224,2.577,225,2.188,226,1.748,227,0.912,228,2.4,229,3.151,230,3.098,232,2.74,233,1.798,234,2.544,238,1.714,244,0.912,249,1.359,250,0.65,254,1.484,261,1.484,273,1.058,274,0.902,275,1.407,279,1.484,288,1.264,296,2.602,302,1.305,305,1.141,307,1.202,308,1.484,316,1.053,317,1.076,346,1.202,350,1.243,405,1.076,494,1.46,558,1.798,661,1.243,681,2.4,766,2.078,767,1.482,798,1.482,804,3.323,805,3.156,811,2.521,833,2.019,844,3.156,845,1.247,886,2.521,900,2.84,902,1.798,903,1.798,904,2.078,905,2.74,906,1.798,907,2.602,911,3.156,913,2.4,917,2.078,918,2.078,919,1.482,920,2.078,921,2.078,924,1.798,925,2.4,927,1.798,928,2.521,929,3.996,930,4.363,931,3.687,932,3.193,933,3.687,934,3.687,935,3.687,936,2.74,937,3.996,938,3.687,939,3.687,940,3.193,941,3.687,942,3.687,943,3.193,944,3.687,945,4.646,946,3.025,947,3.193,948,2.277,949,3.193,950,3.193,951,3.193,952,5.087,953,3.193,954,4.208,955,2.277,956,3.996,957,3.996,958,2.277,959,2.277,960,2.277,961,2.277,962,3.193,963,3.193,964,2.277,965,2.277,966,2.277,967,2.277,968,1.482,969,3.156,970,2.277,971,2.277,972,2.277,973,2.277,974,3.193,975,3.193,976,3.193,977,3.193,978,2.277,979,2.277,980,4.363,981,2.277,982,2.277,983,2.277,984,2.4,985,2.277,986,2.277,987,3.193,988,3.193,989,2.277,990,3.193,991,2.277,992,2.078,993,1.482,994,2.277,995,1.482,996,1.482,997,2.277,998,2.277,999,2.277,1000,3.193,1001,2.277,1002,2.277,1003,3.193,1004,2.911,1005,3.193,1006,3.193,1007,3.193,1008,3.193,1009,3.193,1010,2.078,1011,3.193,1012,3.193,1013,3.193,1014,3.193,1015,3.193,1016,3.193,1017,3.193,1018,3.193,1019,3.193,1020,3.193,1021,3.193,1022,3.193,1023,3.193,1024,3.193,1025,2.277,1026,2.521,1027,2.521,1028,3.193,1029,2.521,1030,2.911,1031,1.798,1032,1.798,1033,2.277,1034,3.996,1035,4.927,1036,3.193,1037,2.277,1038,3.996,1039,2.277,1040,2.277,1041,2.277,1042,3.445,1043,2.277,1044,3.193,1045,2.277,1046,3.193,1047,3.156,1048,3.669,1049,2.277,1050,4.927,1051,4.927,1052,3.193,1053,2.277,1054,2.277,1055,3.323,1056,2.277,1057,2.277,1058,2.277,1059,2.277,1060,3.996,1061,3.996,1062,3.996,1063,3.156,1064,2.277,1065,2.277,1066,3.193,1067,3.687,1068,3.687,1069,4.759,1070,3.687,1071,2.277,1072,3.193,1073,2.277,1074,3.193,1075,2.521,1076,2.277,1077,2.277,1078,2.277,1079,2.277,1080,2.277,1081,2.277,1082,2.277,1083,2.277,1084,2.277,1085,2.277,1086,3.687,1087,3.687,1088,3.193,1089,3.193,1090,2.277,1091,2.277,1092,2.277,1093,2.277,1094,1.798,1095,1.798,1096,2.521,1097,2.277,1098,1.798,1099,2.277,1100,2.277,1101,2.078,1102,3.193,1103,1.798]],["title/components/NotificacionesComponent.html",[0,0.03,65,0.734]],["body/components/NotificacionesComponent.html",[0,0.038,1,0.622,2,1.087,3,0.366,4,0.297,5,0.858,6,0.858,7,0.297,9,0.769,10,0.769,12,1.012,13,0.999,15,0.858,16,0.891,17,0.891,19,0.545,20,0.545,21,0.545,23,0.622,24,0.858,26,0.065,27,1.458,28,0.297,29,0.348,30,0.778,31,0.972,32,1.608,33,0.869,36,2.22,38,2.167,39,0.857,40,0.297,43,0.366,44,0.545,45,1.436,46,0.858,47,1.276,48,1.276,49,0.858,50,1.685,51,0.858,52,0.834,53,0.858,54,0.622,55,0.731,56,1.685,57,0.622,58,0.858,59,0.622,60,0.215,61,0.527,62,0.622,63,0.858,64,0.858,65,1.233,66,1.914,67,0.858,68,0.858,69,0.034,70,0.034,71,1.011,75,1.058,78,0.785,79,1.035,81,0.785,83,0.658,85,0.658,91,1.502,92,1.035,95,0.935,97,1.488,100,0.443,102,2.121,103,2.121,104,1.035,105,1.222,107,0.925,108,1.011,111,0.869,113,1.152,114,1.404,115,1.187,122,1.087,128,0.929,132,1.233,134,1.106,135,0.658,136,1.658,138,0.925,139,1.104,144,1.106,145,0.366,147,0.622,148,0.658,149,1.008,150,0.527,162,0.973,164,0.443,167,1.458,168,1.087,169,2.863,170,2.863,179,2.863,181,2.36,183,1.436,185,1.372,187,2.863,189,1.436,191,2.863,194,2.863,197,2.863,198,3.206,199,1.417,200,2.459,201,2.121,204,1.458,205,3.19,206,2.36,207,2.302,208,1.202,209,2.671,210,1.985,211,2.873,212,1.787,213,1.202,215,2.522,216,2.643,217,2.863,219,1.202,223,2.526,224,2.121,225,2.646,226,1.793,227,1.159,228,2.36,229,2.873,230,2.522,232,2.36,234,2.302,236,2.863,238,1.522,239,0.348,243,0.731,244,1.2,245,0.731,246,1.306,249,1.233,250,0.527,258,1.104,264,1.71,275,1.317,301,1.087,302,1.159,305,1.159,307,0.935,316,0.784,317,0.925,326,0.622,342,1.827,346,0.784,347,1.087,348,1.087,349,1.087,350,0.925,357,0.858,367,1.087,369,1.787,394,1.087,397,2.167,405,1.306,410,1.087,451,1.436,473,1.522,535,1.087,599,2.132,600,1.202,602,1.276,611,1.522,623,2.522,626,1.202,661,0.622,663,2.416,664,1.793,665,1.202,666,2.167,667,1.011,668,1.202,673,1.011,674,0.858,683,1.011,798,1.202,809,3.249,816,1.787,824,2.643,830,1.202,833,1.502,845,1.502,861,2.132,893,1.458,894,2.36,899,3.32,900,1.202,904,2.812,905,1.202,907,2.967,913,1.787,916,1.458,917,1.787,918,1.787,919,2.132,920,2.132,921,1.787,922,1.458,923,2.167,925,1.202,928,2.167,936,2.132,946,2.873,968,1.787,969,2.586,984,3.087,992,2.36,993,1.202,995,1.202,996,1.787,1004,1.458,1010,1.787,1026,2.167,1027,3.546,1029,1.458,1030,2.167,1031,1.458,1032,1.458,1042,3.485,1047,1.458,1048,2.167,1055,2.863,1075,1.458,1094,2.863,1095,2.863,1096,2.167,1101,2.812,1103,1.458,1104,1.202,1105,2.586,1106,2.167,1107,2.586,1108,2.586,1109,2.863,1110,2.863,1111,2.744,1112,2.744,1113,2.863,1114,2.744,1115,2.863,1116,2.863,1117,2.744,1118,2.863,1119,2.744,1120,1.847,1121,2.167,1122,1.847,1123,2.167,1124,3.41,1125,1.847,1126,2.167,1127,2.863,1128,2.863,1129,2.167,1130,2.167,1131,1.847,1132,2.167,1133,2.863,1134,2.167,1135,2.167,1136,1.847,1137,1.847,1138,2.167,1139,2.576,1140,1.847,1141,1.847,1142,2.167,1143,1.847,1144,2.167,1145,2.167,1146,1.847,1147,2.167,1148,2.167,1149,2.167,1150,1.847,1151,2.863,1152,1.847,1153,1.847,1154,1.847,1155,3.059,1156,3.059,1157,1.458,1158,1.458,1159,1.458,1160,2.863,1161,2.586,1162,1.458,1163,1.458,1164,1.458,1165,1.458,1166,1.458,1167,1.458,1168,2.586,1169,1.458,1170,1.458,1171,1.458,1172,1.458,1173,2.863,1174,2.863,1175,2.167,1176,1.458,1177,1.458,1178,1.458,1179,1.458,1180,1.458,1181,1.458,1182,2.167,1183,2.167,1184,2.167,1185,2.167,1186,1.458,1187,2.167,1188,1.458,1189,1.458,1190,1.458,1191,1.458,1192,2.167,1193,3.206,1194,1.458,1195,1.458,1196,1.458,1197,1.458,1198,3.626,1199,2.744,1200,2.744,1201,2.744,1202,2.744,1203,2.744,1204,2.744,1205,2.744,1206,2.744,1207,2.744,1208,2.744,1209,2.744,1210,2.744,1211,2.744,1212,2.744,1213,2.744,1214,2.744,1215,2.744,1216,2.744,1217,2.744,1218,2.744,1219,2.744,1220,2.744,1221,2.744,1222,2.744,1223,2.744,1224,2.744,1225,2.744,1226,2.744,1227,2.744,1228,2.744,1229,1.847,1230,1.847,1231,1.847,1232,3.875,1233,1.847,1234,2.744,1235,2.744,1236,3.626,1237,1.847,1238,2.744,1239,2.744,1240,1.847,1241,3.626,1242,2.744,1243,2.744,1244,1.847,1245,2.586,1246,3.275,1247,1.847,1248,1.847,1249,1.847,1250,2.744,1251,1.847,1252,3.275,1253,3.275,1254,1.847,1255,2.744,1256,1.847,1257,1.847,1258,2.744,1259,1.847,1260,1.847,1261,3.875,1262,3.275,1263,1.847,1264,1.847,1265,3.275,1266,1.847,1267,2.744,1268,2.744,1269,2.744,1270,1.847,1271,1.847,1272,1.847,1273,1.847,1274,1.847,1275,1.847,1276,1.847,1277,2.744,1278,1.847,1279,1.847,1280,1.847,1281,1.847,1282,1.847,1283,3.875,1284,1.847,1285,1.847,1286,1.847,1287,4.204,1288,1.847,1289,1.847,1290,1.847,1291,1.847,1292,1.847,1293,1.847,1294,1.847]],["title/interfaces/Notification.html",[239,0.325,1139,1.407]],["body/interfaces/Notification.html",[0,0.042,3,0.551,4,0.447,7,0.447,9,0.551,10,0.81,12,1.021,13,1.017,16,0.551,17,0.551,19,0.551,20,0.551,21,0.551,26,0.065,28,0.447,29,0.462,30,0.813,31,1.015,32,1.446,39,0.918,40,0.447,43,0.551,44,0.725,45,1.718,60,0.182,65,1.287,66,1.896,69,0.045,70,0.045,75,1.04,78,0.875,79,1.165,81,0.875,83,0.665,85,0.665,92,0.792,95,0.792,97,1.519,100,0.875,104,1.04,105,1.231,107,0.935,108,1.999,111,0.875,113,1.161,114,1.407,115,1.21,128,1.109,132,1.321,134,1.131,135,0.665,136,1.59,138,0.935,139,1.376,144,1.165,145,0.551,147,0.935,148,0.665,149,1.131,150,0.792,162,1.109,164,0.665,199,1.376,239,0.462,240,1.099,243,1.446,244,1.165,245,1.446,246,1.231,249,1.287,250,0.792,264,1.718,275,0.792,301,1.099,302,1.165,305,1.238,307,1.043,316,0.792,317,1.231,342,1.964,346,0.792,347,1.099,348,1.099,349,1.099,350,0.935,367,1.099,369,1.806,394,1.099,405,1.376,410,1.099,535,1.099,599,2.377,600,2.377,602,1.289,611,1.697,623,2.824,626,2.824,661,1.462,663,2.676,664,2.375,665,2.824,667,2.375,668,2.824,673,1.999,674,1.697,683,1.999,809,3.33,816,1.806,824,2.657,830,2.377,833,1.519,845,1.519,861,1.806,894,2.377,936,1.806,946,2.934,968,1.806,984,3.071,992,2.377,993,1.806,995,1.806,996,2.377,1010,1.806,1104,1.806,1105,2.19,1106,2.19,1107,2.19,1108,2.19,1109,2.19,1110,2.19,1113,2.19,1115,2.19,1116,2.19,1118,2.19,1121,2.19,1123,2.19,1124,3.425,1126,2.19,1127,2.883,1128,2.883,1129,2.19,1130,2.19,1132,2.19,1133,2.883,1134,2.19,1135,2.19,1138,2.19,1139,2.676,1142,2.19,1144,2.19,1145,2.19,1147,2.19,1148,2.19,1149,2.19,1151,2.883,1155,3.654,1156,3.654,1157,2.883,1158,2.883,1159,2.883,1160,3.78,1161,2.883,1162,2.19,1163,2.19,1164,2.19,1165,2.19,1166,2.19,1167,2.19,1168,3.223,1169,2.19,1170,2.19,1171,2.19,1172,2.19,1173,3.425,1174,3.425,1175,2.883,1176,2.19,1177,2.19,1178,2.19,1179,2.19,1180,2.19,1181,2.19,1182,2.883,1183,2.883,1184,2.883,1185,2.883,1186,2.19,1187,2.883,1188,2.19,1189,2.19,1190,2.19,1191,2.19,1192,2.883,1193,3.654,1194,2.19,1195,2.19,1196,2.19,1197,2.19]],["title/interfaces/User.html",[239,0.325,672,1.195]],["body/interfaces/User.html",[0,0.026,3,0.276,4,0.224,7,0.224,9,0.806,10,0.545,11,1.505,12,1.019,13,0.939,16,0.276,17,0.276,19,0.276,20,0.276,21,0.276,26,0.065,28,0.715,29,0.28,30,0.82,31,1.005,33,0.817,39,0.72,40,0.224,43,0.276,44,0.438,52,0.857,60,0.327,61,0.398,69,0.027,70,0.027,75,1.187,76,0.647,77,0.647,78,0.529,79,0.784,80,0.551,81,0.529,82,0.875,83,0.334,84,0.647,85,0.334,86,0.647,87,0.647,88,1.686,89,0.647,90,0.647,92,0.398,95,0.398,97,1.149,100,0.749,104,0.529,105,1.431,107,0.469,109,1.087,111,0.334,113,1.114,114,1.431,115,1.237,116,0.647,119,1.888,121,1.027,122,1.35,124,1.35,125,0.875,126,1.027,127,0.647,128,1.154,131,0.551,132,1.422,133,1.833,134,1.065,135,1.17,136,0.925,137,1.888,138,1.478,139,1.684,141,1.027,144,1.38,145,0.276,146,0.469,147,0.469,148,0.529,149,1.154,150,0.398,151,0.647,152,0.647,153,1.584,154,1.027,155,0.647,157,0.647,158,0.647,159,0.647,160,1.276,162,1.206,163,0.647,164,1.035,165,0.647,166,0.647,168,1.562,171,1.767,176,1.453,183,1.35,185,0.973,189,0.551,199,0.469,227,1.035,239,0.396,240,0.551,243,1.087,244,1.268,245,1.087,246,1.053,247,2.038,248,2.365,249,0.973,250,0.398,252,1.503,253,0.762,254,1.584,255,1.503,256,2.159,257,0.762,258,1.543,259,1.711,260,0.762,261,1.888,262,0.762,263,2.159,264,1.35,265,0.762,266,1.503,267,0.762,268,1.453,269,1.209,270,0.762,271,1.934,272,1.866,273,1.584,274,1.35,275,1.307,276,1.866,277,1.584,278,1.866,279,1.833,280,0.762,281,0.762,282,2.159,283,0.762,284,0.762,285,1.866,286,1.503,287,1.209,288,1.087,289,1.209,290,0.762,291,0.762,292,1.711,293,0.762,294,0.762,295,1.453,297,0.762,298,0.762,299,0.762,300,0.762,301,0.551,302,0.784,303,2.081,304,1.986,305,0.892,306,0.762,307,0.631,308,1.888,309,0.762,310,0.762,311,0.762,312,0.762,313,0.762,314,0.762,315,1.453,316,0.398,317,0.469,318,1.503,319,0.762,320,0.762,321,1.711,322,0.762,323,0.762,324,0.762,325,0.762,326,0.745,327,1.209,328,0.762,329,1.503,330,1.209,331,1.503,332,1.503,333,1.866,334,0.762,335,1.209,336,1.503,337,1.209,338,1.503,339,1.503,340,2.223,341,0.762,342,1.759,343,0.762,344,0.762,345,0.762,346,0.631,347,0.551,348,0.551,349,0.551,350,0.469,351,0.762,352,1.209,353,0.762,354,0.762,355,0.762,356,0.762,357,0.647,358,0.762,359,0.762,360,0.762,361,1.209,362,0.762,363,0.762,364,0.762,365,1.209,366,1.209,367,1.087,368,1.866,370,1.503,371,1.276,372,0.762,373,0.647,376,1.438,378,0.906,379,0.762,380,1.711,381,0.762,382,1.503,383,1.209,384,1.711,385,1.209,386,0.762,387,0.762,388,1.866,389,1.209,390,0.762,391,0.762,392,0.762,393,0.762,394,0.551,395,0.762,396,0.762,398,1.209,399,0.762,400,1.503,401,1.711,402,1.209,403,0.762,404,0.762,405,1.149,406,0.762,407,0.762,408,1.209,409,0.762,410,1.238,411,0.762,412,0.762,413,0.762,414,0.762,415,0.762,416,0.762,417,0.762,418,0.762,419,0.762,421,0.762,422,0.762,423,1.209,424,0.762,425,0.906,426,0.906,427,0.906,428,0.762,429,0.762,430,1.866,431,1.686,432,1.833,433,0.762,434,1.027,435,1.453,436,0.762,437,0.762,438,1.209,439,0.762,440,0.762,441,0.762,442,0.762,443,1.503,444,1.209,445,2.159,446,1.503,447,1.711,448,1.209,449,1.711,450,1.711,451,1.238,452,1.767,453,0.647,454,0.762,455,1.209,456,0.762,457,1.503,458,1.209,459,0.762,460,0.762,463,0.762,464,0.762,465,0.762,466,1.503,467,1.503,468,1.986,469,0.762,470,2.223,471,0.762,472,1.503,473,1.276,474,0.762,475,1.209,476,0.762,477,0.762,478,0.762,479,0.762,480,1.209,481,1.711,482,1.866,483,1.209,484,1.503,485,1.503,486,1.866,487,0.762,488,1.209,489,0.762,490,0.762,491,0.762,492,0.762,493,0.762,494,1.965,495,1.503,496,1.503,497,0.762,498,0.762,499,1.209,500,0.762,501,1.209,502,0.762,503,0.762,504,1.503,505,0.762,506,1.503,507,0.762,510,0.762,513,0.762,514,1.209,515,0.762,516,0.762,517,0.762,518,0.762,519,0.762,520,0.762,521,0.762,523,0.762,524,0.762,525,0.762,527,0.762,528,0.762,529,1.209,530,0.762,531,1.209,532,0.762,533,0.762,534,0.762,535,1.238,536,0.762,537,1.503,538,1.209,539,1.209,540,0.762,541,0.762,542,1.209,543,0.762,544,0.762,545,0.762,546,0.762,547,0.762,548,0.762,549,0.762,550,0.762,551,0.762,552,1.503,553,0.762,554,0.762,555,0.762,556,0.762,557,0.762,559,0.762,560,1.711,561,1.711,562,0.762,563,0.762,564,0.762,565,1.209,566,0.762,567,1.209,568,0.762,569,0.762,570,1.503,571,0.762,572,0.762,573,0.762,574,0.762,575,1.209,576,1.209,577,0.762,578,0.762,579,0.762,580,1.209,581,1.209,582,0.762,583,0.762,584,1.209,585,0.762,586,1.209,587,0.762,588,0.762,589,0.762,602,0.647,603,0.906,604,1.438,605,0.762,606,1.787,607,1.787,608,0.906,609,1.787,610,1.787,611,1.276,618,0.906,619,0.762,620,0.906,621,2.361,661,1.281,671,0.906,672,2.281,673,1.209,674,1.027,675,3.001,676,1.744,677,3.001,678,1.787,679,1.438,680,2.567,681,1.438,682,1.744,683,1.209,684,1.744,685,3.001,686,2.034,687,2.644,688,1.099,689,1.099,690,1.099,691,1.099,692,0.906,693,1.099,694,0.906,695,1.099,696,1.099,697,1.099,698,1.099,699,1.099,700,1.099,701,1.099,702,1.099,703,1.099,704,1.744,705,2.168,706,3.113,707,1.099,708,1.744,709,2.468,710,1.744,711,1.438,712,1.744,713,1.438,714,1.438,715,1.744,716,2.691,717,1.744,718,2.168,719,2.468,720,2.468,721,1.438,722,1.744,723,1.744,724,1.099,725,1.099,726,2.168,727,1.099,728,1.099,729,1.099,730,1.099,731,1.099,732,1.099,733,1.099,734,1.099,735,1.099,736,1.099,737,1.099,738,1.099,739,1.099,740,1.099,741,1.099,742,1.099,743,2.468,744,1.099,745,1.099,746,1.099,747,1.099,748,1.744,749,1.099,750,1.099,751,1.099,752,1.744,753,1.744,754,1.744,755,1.099,756,1.099,757,1.099,758,1.099,759,1.744,760,1.099,761,1.099,762,1.099,763,1.099,764,1.099,765,1.099,766,0.906,767,0.906,768,1.099,769,1.099,770,1.099,771,2.168,772,1.744,773,1.099,774,1.099,775,1.099,776,1.099,777,1.099,778,1.099,779,1.099]],["title/coverage.html",[1295,2.74]],["body/coverage.html",[0,0.059,1,1.299,7,0.621,8,3.044,23,1.299,26,0.064,30,0.621,54,1.299,57,1.299,59,1.299,60,0.31,61,1.101,62,1.299,65,1.101,69,0.055,70,0.055,72,3.044,73,3.044,74,2.715,164,0.924,205,2.51,238,2.369,239,0.628,241,3.536,242,3.536,590,3.536,591,3.536,671,3.081,672,1.792,780,3.044,927,3.044,1104,2.915,1139,2.111,1295,3.044,1296,3.855,1297,3.855,1298,3.855,1299,3.855,1300,4.733,1301,3.855,1302,4.733,1303,3.855,1304,3.855,1305,3.855,1306,4.478,1307,4.478,1308,3.855,1309,3.855,1310,3.855,1311,3.855]],["title/dependencies.html",[1312,1.409,1313,2.432]],["body/dependencies.html",[26,0.064,40,0.637,41,2.576,69,0.056,70,0.056,145,0.785,146,1.334,148,1.09,1313,3.124,1314,3.957,1315,5.141,1316,3.957,1317,4.783,1318,4.546,1319,3.957,1320,3.124,1321,3.957,1322,3.124,1323,3.957,1324,3.957,1325,3.957,1326,3.957,1327,3.957,1328,3.957,1329,3.957,1330,3.957,1331,3.957,1332,3.957,1333,3.957]],["title/index.html",[28,0.348,1334,2.164,1335,2.164]],["body/index.html",[0,0.055,4,0.619,26,0.055,52,0.763,69,0.055,70,0.055,78,0.921,164,0.921,271,1.787,277,2.078,1063,3.035,1098,3.96,1101,2.502,1245,3.035,1312,2.502,1320,3.53,1322,3.035,1336,3.844,1337,4.47,1338,3.844,1339,4.727,1340,4.727,1341,3.035,1342,3.844,1343,4.955,1344,5.059,1345,3.844,1346,3.844,1347,3.844,1348,3.844,1349,3.844,1350,3.844,1351,3.844,1352,3.844,1353,3.844,1354,3.844,1355,4.727,1356,4.727,1357,3.844,1358,4.867,1359,3.844,1360,3.844,1361,3.844,1362,3.844,1363,4.47,1364,4.867,1365,3.844,1366,4.47,1367,4.47,1368,3.844,1369,3.844,1370,3.844,1371,3.844,1372,4.47,1373,3.844,1374,3.844,1375,3.844,1376,3.844,1377,3.844,1378,4.727,1379,3.844,1380,3.844,1381,3.844,1382,2.502,1383,3.844]],["title/modules.html",[1384,2.74]],["body/modules.html",[26,0.057,69,0.057,70,0.057,1384,3.23]],["title/overview.html",[1382,2.259]],["body/overview.html",[2,1.616,26,0.057,69,0.057,70,0.057,240,1.616,1382,2.656,1385,4.08,1386,4.08]],["title/properties.html",[29,0.39,1312,1.409]],["body/properties.html",[26,0.06,29,0.517,69,0.057,70,0.057,1341,3.223,1387,4.082]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":275,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["0.0.0",{"_index":1387,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":1260,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.1",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["0.14.3",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1061,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.5rem",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["0.9rem",{"_index":1092,"title":{},"body":{"components/NavbarComponent.html":{}}}],["000",{"_index":1037,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1",{"_index":258,"title":{"interfaces/Bodega-1.html":{}},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["1.11.3",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":1085,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.2rem",{"_index":1033,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.5rem",{"_index":1040,"title":{},"body":{"components/NavbarComponent.html":{}}}],["100",{"_index":238,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["100vh",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["10px",{"_index":211,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["15/15",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1236,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["16/17",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["17/18",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":878,"title":{},"body":{"components/LoginComponent.html":{}}}],["18.0.0",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":1322,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1em",{"_index":1237,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["1px",{"_index":215,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["1rem",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["2",{"_index":326,"title":{"interfaces/Bodega-2.html":{}},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["2.3.0",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1100,"title":{},"body":{"components/NavbarComponent.html":{}}}],["20px",{"_index":208,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["240px",{"_index":231,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["250px",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["27ae60",{"_index":1293,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["280px",{"_index":1070,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2px",{"_index":1029,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["2rem",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{}}}],["3",{"_index":893,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["3/3",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["343a40",{"_index":1251,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["354a5f",{"_index":1071,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4.18.2",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":1044,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4a4a4a",{"_index":1093,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4px",{"_index":1030,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["5",{"_index":1386,"title":{},"body":{"overview.html":{}}}],["5.3.3",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["500",{"_index":506,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["50px",{"_index":1046,"title":{},"body":{"components/NavbarComponent.html":{}}}],["576px",{"_index":1266,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["5px",{"_index":1096,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["60px",{"_index":1056,"title":{},"body":{"components/NavbarComponent.html":{}}}],["66/67",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["67/68",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":233,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["767px",{"_index":1272,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["768px",{"_index":1270,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["8",{"_index":1385,"title":{},"body":{"overview.html":{}}}],["80px",{"_index":1235,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["83/84",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1240,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["8px",{"_index":1239,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["9/9",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":237,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["90px",{"_index":1102,"title":{},"body":{"components/NavbarComponent.html":{}}}],["94",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["98",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["abierto",{"_index":988,"title":{},"body":{"components/NavbarComponent.html":{}}}],["abre",{"_index":535,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["absolute",{"_index":1004,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["acc.concat(bodega.products",{"_index":418,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["accepted",{"_index":1155,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["acceptmodification",{"_index":1109,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["acciones",{"_index":1199,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["acepta",{"_index":1121,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["aceptado",{"_index":1195,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["aceptar",{"_index":1227,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["action",{"_index":1052,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actual",{"_index":296,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"components/NavbarComponent.html":{}}}],["actual_component",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["actualiza",{"_index":394,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["actualizadas",{"_index":1144,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["actualizados",{"_index":608,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["actualizar",{"_index":395,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["actualmente",{"_index":987,"title":{},"body":{"components/NavbarComponent.html":{}}}],["add",{"_index":1245,"title":{},"body":{"components/NotificacionesComponent.html":{},"index.html":{}}}],["addbodega(form",{"_index":456,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["addbodegamodal",{"_index":458,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["addbodegamodal.show",{"_index":517,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["addbodegamodal?.hide",{"_index":460,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["adicional",{"_index":885,"title":{},"body":{"components/LoginComponent.html":{}}}],["adicionales",{"_index":1276,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["admin",{"_index":684,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["administrador",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{}}}],["adulto",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{}}}],["agrega",{"_index":430,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["agregar",{"_index":269,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ajustes",{"_index":1267,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["al",{"_index":111,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["alert('el",{"_index":450,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["alert('notificación",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('por",{"_index":466,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["alert('seleccione",{"_index":562,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["alert(`la",{"_index":776,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["align",{"_index":200,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["allowedroles",{"_index":964,"title":{},"body":{"components/NavbarComponent.html":{}}}],["allproducts",{"_index":253,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["almacenados",{"_index":592,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["almacenamiento",{"_index":370,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["alterna",{"_index":766,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["alternar",{"_index":982,"title":{},"body":{"components/NavbarComponent.html":{}}}],["angular",{"_index":1339,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":145,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":146,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["antes",{"_index":600,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["apellido",{"_index":676,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["aplicación",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["application",{"_index":1349,"title":{},"body":{"index.html":{}}}],["area",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["areadashboardcomponent",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["arial",{"_index":901,"title":{},"body":{"components/LoginComponent.html":{}}}],["artifacts",{"_index":1359,"title":{},"body":{"index.html":{}}}],["asignar",{"_index":375,"title":{},"body":{"interfaces/Bodega.html":{}}}],["attr(data",{"_index":1274,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["auditor",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["auditordashboardcomponent",{"_index":57,"title":{"components/AuditorDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["autenticación",{"_index":316,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["auth/auth.service",{"_index":250,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["authservice",{"_index":249,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["authservice.getcurrentuser()?.firstname",{"_index":1013,"title":{},"body":{"components/NavbarComponent.html":{}}}],["authservice.getcurrentuser()?.lastname",{"_index":1014,"title":{},"body":{"components/NavbarComponent.html":{}}}],["authservice.getcurrentuser()?.role",{"_index":1015,"title":{},"body":{"components/NavbarComponent.html":{}}}],["auto",{"_index":1047,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["automatically",{"_index":1350,"title":{},"body":{"index.html":{}}}],["añadir",{"_index":594,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["años",{"_index":889,"title":{},"body":{"components/LoginComponent.html":{}}}],["b.name",{"_index":440,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["background",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["badge",{"_index":1006,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bar",{"_index":1243,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["barra",{"_index":928,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["basado",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{}}}],["bell",{"_index":1039,"title":{},"body":{"components/NavbarComponent.html":{}}}],["between",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bg",{"_index":1009,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bi",{"_index":1038,"title":{},"body":{"components/NavbarComponent.html":{}}}],["birthdate",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["block",{"_index":1075,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bodega",{"_index":60,"title":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["bodega.products",{"_index":422,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bodegadashboardcomponent",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["bodegadestino",{"_index":578,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bodegaorigen",{"_index":577,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bodegas",{"_index":263,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["body",{"_index":899,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bold",{"_index":1032,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["boolean",{"_index":305,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":148,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["bootstrap.modal(document.getelementbyid('addbodegamodal",{"_index":516,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('confirmdeletemodal",{"_index":386,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('confirmdeleteusermodal",{"_index":760,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('detallehistorialmodal",{"_index":538,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('detallemovimientomodal",{"_index":543,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('editproductmodal",{"_index":403,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('editusermodal",{"_index":749,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('productinfomodal",{"_index":165,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('userinfomodal",{"_index":745,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('usermodal",{"_index":735,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('addbodegamodal",{"_index":459,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('confirmdeletemodal",{"_index":392,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('confirmdeleteusermodal",{"_index":764,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('detallehistorialmodal",{"_index":545,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('detallemovimientomodal",{"_index":549,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('editproductmodal",{"_index":428,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('editusermodal",{"_index":756,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('usermodal",{"_index":724,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(ingresobodegamodalelement",{"_index":502,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(salidabodegamodalelement",{"_index":532,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(trasladobodegamodalelement",{"_index":587,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap/dist/css/bootstrap.min.css",{"_index":1231,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["border",{"_index":209,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bordered",{"_index":214,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["bordes",{"_index":1083,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":1027,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["box",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["brand",{"_index":273,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["browser",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":1283,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["build",{"_index":1358,"title":{},"body":{"index.html":{}}}],["button",{"_index":1246,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["búsqueda",{"_index":122,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["c0392b",{"_index":1294,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["calc(100",{"_index":235,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["cambiado",{"_index":1133,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["cambio",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{}}}],["cambios",{"_index":611,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["cambiossolicitados",{"_index":626,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["cambiossolicitados.brand",{"_index":638,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.color",{"_index":644,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.currency",{"_index":653,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.description",{"_index":632,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.family",{"_index":647,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.location",{"_index":659,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.material",{"_index":641,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.model",{"_index":635,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.name",{"_index":629,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.unit",{"_index":656,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.value",{"_index":650,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["campo",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["campos",{"_index":741,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["cantidad",{"_index":282,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["cantidadingreso",{"_index":283,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["cantidadsalida",{"_index":284,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["capabilities",{"_index":1376,"title":{},"body":{"index.html":{}}}],["caption",{"_index":1241,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["carga",{"_index":367,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["cargo",{"_index":891,"title":{},"body":{"components/LoginComponent.html":{}}}],["carguen",{"_index":377,"title":{},"body":{"interfaces/Bodega.html":{}}}],["case",{"_index":1193,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["caso",{"_index":349,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["ccc",{"_index":1238,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["center",{"_index":201,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["change",{"_index":1352,"title":{},"body":{"index.html":{}}}],["check",{"_index":1381,"title":{},"body":{"index.html":{}}}],["checkproductcode",{"_index":364,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["checkscreensize",{"_index":937,"title":{},"body":{"components/NavbarComponent.html":{}}}],["chevron",{"_index":1086,"title":{},"body":{"components/NavbarComponent.html":{}}}],["child",{"_index":1255,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["child(odd",{"_index":1279,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["chipax",{"_index":1068,"title":{},"body":{"components/NavbarComponent.html":{}}}],["choice",{"_index":1371,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":968,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["clase",{"_index":1127,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["class",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["class=\"position",{"_index":1003,"title":{},"body":{"components/NavbarComponent.html":{}}}],["claves",{"_index":738,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["cli",{"_index":1340,"title":{},"body":{"index.html":{}}}],["close",{"_index":1288,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["closemodal",{"_index":1110,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["code",{"_index":271,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{},"index.html":{}}}],["code.trim().touppercase",{"_index":345,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["coinciden",{"_index":708,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["colapsado",{"_index":954,"title":{},"body":{"components/NavbarComponent.html":{}}}],["collapse",{"_index":1247,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["color",{"_index":185,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["column",{"_index":1095,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["command",{"_index":1372,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":81,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["company",{"_index":1045,"title":{},"body":{"components/NavbarComponent.html":{}}}],["complete",{"_index":740,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["completo",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["componente",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"overview.html":{}}}],["compra",{"_index":1021,"title":{},"body":{"components/NavbarComponent.html":{}}}],["compras",{"_index":1019,"title":{},"body":{"components/NavbarComponent.html":{}}}],["con",{"_index":714,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["configura",{"_index":975,"title":{},"body":{"components/NavbarComponent.html":{}}}],["confirma",{"_index":388,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmación",{"_index":605,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["confirmdeletemodal",{"_index":385,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeletemodal.show",{"_index":387,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeletemodal?.hide",{"_index":393,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeleteusermodal",{"_index":759,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeleteusermodal.show",{"_index":761,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeleteusermodal?.hide",{"_index":765,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["const",{"_index":162,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["constructor",{"_index":95,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["constructor(authservice",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["constructor(private",{"_index":150,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["constructor(productservice",{"_index":96,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["contactar",{"_index":897,"title":{},"body":{"components/LoginComponent.html":{}}}],["contador",{"_index":1151,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["container",{"_index":206,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["contenedor",{"_index":1234,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["content",{"_index":223,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["contrario",{"_index":350,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["contraseña",{"_index":686,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["contraseñas",{"_index":707,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["control",{"_index":77,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["convierte",{"_index":356,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["correctamente",{"_index":378,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["correo",{"_index":678,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["corresponde",{"_index":959,"title":{},"body":{"components/NavbarComponent.html":{}}}],["correspondiente",{"_index":1129,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["count",{"_index":996,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["cover",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverage",{"_index":1295,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":99,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/NavbarComponent.html":{}}}],["crear",{"_index":1018,"title":{},"body":{"components/NavbarComponent.html":{}}}],["credenciales",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["css",{"_index":1128,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["cuenta",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["cuentamodal",{"_index":1261,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["currency",{"_index":276,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["currentopendropdown",{"_index":934,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cursor",{"_index":1053,"title":{},"body":{"components/NavbarComponent.html":{}}}],["custom",{"_index":1025,"title":{},"body":{"components/NavbarComponent.html":{}}}],["código",{"_index":168,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["d",{"_index":1262,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["d3550c",{"_index":1286,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["danger",{"_index":1010,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["dashboard",{"_index":80,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["dashboard'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["dashboard.component.css",{"_index":84,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dashboard.component.html",{"_index":86,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dashboard.component.ts",{"_index":74,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"coverage.html":{}}}],["dashboard.component.ts:100",{"_index":129,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:29",{"_index":142,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:37",{"_index":140,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:45",{"_index":143,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:53",{"_index":98,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:68",{"_index":106,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:81",{"_index":117,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard/area",{"_index":242,"title":{},"body":{"interfaces/Bodega.html":{},"coverage.html":{}}}],["dashboard/auditor",{"_index":73,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"coverage.html":{}}}],["dashboard/bodega",{"_index":591,"title":{},"body":{"interfaces/Bodega-1.html":{},"coverage.html":{}}}],["dashboardcomponent",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["date().gettime",{"_index":662,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["date().tolocaledatestring('en",{"_index":322,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["date.now",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{}}}],["datos",{"_index":607,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["day",{"_index":328,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dcdcdc",{"_index":1282,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["de",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["debe",{"_index":886,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["dee2e6",{"_index":217,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["del",{"_index":75,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["deleteuser(user",{"_index":758,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dependencies",{"_index":1313,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descripción",{"_index":169,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["description",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["descriptivo",{"_index":1157,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["desde",{"_index":369,"title":{},"body":{"interfaces/Bodega.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["después",{"_index":616,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["destino",{"_index":312,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallehistorialmodal",{"_index":537,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallehistorialmodal.show",{"_index":539,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallehistorialmodal?.hide",{"_index":546,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallemovimientomodal",{"_index":542,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallemovimientomodal.show",{"_index":544,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallemovimientomodal?.hide",{"_index":550,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detalles",{"_index":486,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["determinar",{"_index":951,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dev",{"_index":1346,"title":{},"body":{"index.html":{}}}],["development",{"_index":1342,"title":{},"body":{"index.html":{}}}],["diferente",{"_index":454,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["digit",{"_index":327,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["direction",{"_index":1094,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["directive",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["directives",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1357,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1362,"title":{},"body":{"index.html":{}}}],["display",{"_index":224,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["disponible",{"_index":779,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["disponibles",{"_index":688,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dispositivos",{"_index":1268,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["dist",{"_index":1361,"title":{},"body":{"index.html":{}}}],["divisorias",{"_index":1078,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid('editpassword",{"_index":770,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.getelementbyid('ingresobodegamodal",{"_index":500,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.getelementbyid('notificationmodal",{"_index":1175,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["document.getelementbyid('salidabodegamodal",{"_index":530,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.getelementbyid('trasladobodegamodal",{"_index":585,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.queryselector('form.needs",{"_index":446,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.queryselector(`form.needs",{"_index":464,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["documento",{"_index":286,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["down",{"_index":1087,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdown",{"_index":980,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdownid",{"_index":981,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dynamic",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":683,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["e2e",{"_index":1369,"title":{},"body":{"index.html":{}}}],["e5e5e5",{"_index":1028,"title":{},"body":{"components/NavbarComponent.html":{}}}],["e9ecef",{"_index":1081,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ease",{"_index":1062,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ecf0f1",{"_index":1278,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["edad",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["edita",{"_index":398,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editado",{"_index":423,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editar",{"_index":259,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editproductmodal",{"_index":402,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editproductmodal.dispose",{"_index":613,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["editproductmodal.hide",{"_index":612,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["editproductmodal.show",{"_index":404,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editproductmodal?.hide",{"_index":429,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["edituser(user",{"_index":747,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editusermodal",{"_index":748,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editusermodal.show",{"_index":750,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editusermodal?.hide",{"_index":757,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ee7712",{"_index":1277,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["ejecuta",{"_index":110,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["el",{"_index":113,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["electrónico",{"_index":679,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["element",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["elimina",{"_index":380,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["eliminación",{"_index":389,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["eliminar",{"_index":256,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ellipsis",{"_index":221,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["email",{"_index":680,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["emailerror",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailvalid",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["empresa",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{}}}],["en",{"_index":134,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["encabezado",{"_index":1072,"title":{},"body":{"components/NavbarComponent.html":{}}}],["encuentra",{"_index":472,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["end",{"_index":1098,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["entrada",{"_index":126,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["entre",{"_index":558,"title":{},"body":{"interfaces/Bodega.html":{},"components/NavbarComponent.html":{}}}],["enviada",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{}}}],["enviado",{"_index":895,"title":{},"body":{"components/LoginComponent.html":{}}}],["enviar",{"_index":892,"title":{},"body":{"components/LoginComponent.html":{}}}],["envía",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["envío",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["erp",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["erppraxa",{"_index":1336,"title":{},"body":{"index.html":{}}}],["error",{"_index":694,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["es",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["español",{"_index":1148,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["especificado",{"_index":619,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["específico",{"_index":1132,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["específicos",{"_index":1271,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["est",{"_index":962,"title":{},"body":{"components/NavbarComponent.html":{}}}],["estado",{"_index":984,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["estar",{"_index":953,"title":{},"body":{"components/NavbarComponent.html":{}}}],["este",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["estilos",{"_index":1232,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["event",{"_index":124,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["event.target",{"_index":360,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["event.target.value.tolowercase",{"_index":155,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["evento",{"_index":125,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["execute",{"_index":1366,"title":{},"body":{"index.html":{}}}],["existe",{"_index":304,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["existencia",{"_index":603,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["existente",{"_index":606,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["existingitem",{"_index":468,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["existinguser",{"_index":709,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["exitosamente",{"_index":722,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["expandido",{"_index":985,"title":{},"body":{"components/NavbarComponent.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["express",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["f2f2f2",{"_index":1280,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["f5f7fa",{"_index":1065,"title":{},"body":{"components/NavbarComponent.html":{}}}],["facturas",{"_index":1023,"title":{},"body":{"components/NavbarComponent.html":{}}}],["false",{"_index":307,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["falso",{"_index":348,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["falta",{"_index":374,"title":{},"body":{"interfaces/Bodega.html":{}}}],["familia",{"_index":187,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["family",{"_index":274,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["favor",{"_index":452,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["fecha",{"_index":295,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["ffffff",{"_index":1026,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ffffffec",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{}}}],["field",{"_index":1134,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["files",{"_index":1353,"title":{},"body":{"index.html":{}}}],["filteredproducts",{"_index":87,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["filteredusers",{"_index":698,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["filtra",{"_index":118,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["filtrados",{"_index":141,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["first",{"_index":1374,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":675,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["fixed",{"_index":1057,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flex",{"_index":225,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["fondo",{"_index":1066,"title":{},"body":{"components/NavbarComponent.html":{}}}],["font",{"_index":900,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["footer",{"_index":1292,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["form",{"_index":431,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["form.form.markallastouched",{"_index":434,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["form.resetform",{"_index":443,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["form.valid",{"_index":435,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["formelement",{"_index":445,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["formelement.classlist.add('was",{"_index":455,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["formelement.classlist.remove('was",{"_index":448,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["formsmodule",{"_index":82,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["formulario",{"_index":432,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["fuente",{"_index":1091,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fullname",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{}}}],["further",{"_index":1377,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1244,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["genera",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{}}}],["generales",{"_index":1233,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["generate",{"_index":1355,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1338,"title":{},"body":{"index.html":{}}}],["gestionar",{"_index":1162,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["getstatusclass",{"_index":1111,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["getstatusclass(status",{"_index":1123,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["getting",{"_index":1334,"title":{"index.html":{}},"body":{}}],["go",{"_index":1380,"title":{},"body":{"index.html":{}}}],["group",{"_index":1051,"title":{},"body":{"components/NavbarComponent.html":{}}}],["guarda",{"_index":410,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["guardar",{"_index":670,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{}}}],["h4",{"_index":1049,"title":{},"body":{"components/NavbarComponent.html":{}}}],["h5",{"_index":1264,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["h6",{"_index":1074,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ha",{"_index":894,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["haschanged",{"_index":1112,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["haschanged(field",{"_index":1130,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["header",{"_index":1048,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["height",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["hello",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":1378,"title":{},"body":{"index.html":{}}}],["herramientas",{"_index":172,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["hidden",{"_index":213,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["historial",{"_index":254,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["hoy",{"_index":689,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["html",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["htmlinputelement",{"_index":361,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["http://localhost:4200",{"_index":1348,"title":{},"body":{"index.html":{}}}],["i.cantidad",{"_index":493,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["i.product.code",{"_index":490,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["i.product.description",{"_index":492,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["i.product.name",{"_index":491,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["icons",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["icons.css",{"_index":1230,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["icons/font/bootstrap",{"_index":1229,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["id",{"_index":661,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["identificador",{"_index":673,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{}}}],["img",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["implements",{"_index":78,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"index.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["incorrectas",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["indica",{"_index":301,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["indicador",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["información",{"_index":131,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["ingenieria",{"_index":1016,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ingresado",{"_index":123,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["ingresar",{"_index":597,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["ingrese",{"_index":453,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["ingreso",{"_index":279,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["ingresobodegamodal",{"_index":501,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ingresobodegamodal.dispose",{"_index":505,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ingresobodegamodal.hide",{"_index":503,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ingresobodegamodalelement",{"_index":499,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ingresoitems",{"_index":280,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["inicializa",{"_index":974,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inicialización",{"_index":602,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["inicializar",{"_index":112,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["iniciar",{"_index":880,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicio",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["inline",{"_index":1088,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input",{"_index":357,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["input.value",{"_index":362,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["input.value.touppercase",{"_index":363,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["instancia",{"_index":101,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/NavbarComponent.html":{}}}],["intente",{"_index":713,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["interface",{"_index":239,"title":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":240,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaz",{"_index":243,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["inventario",{"_index":167,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["inventory",{"_index":204,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["inválidas",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["isadult",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{}}}],["isbodega",{"_index":1107,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["isloginpage",{"_index":938,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isondashboard",{"_index":939,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isroleallowed",{"_index":940,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isroleallowed(allowedroles",{"_index":960,"title":{},"body":{"components/NavbarComponent.html":{}}}],["issidebarcollapsed",{"_index":935,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item",{"_index":1035,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item.active",{"_index":1080,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item.cantidad",{"_index":482,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.numerodocumento",{"_index":775,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product",{"_index":572,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product.code",{"_index":470,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product.description",{"_index":581,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product.name",{"_index":580,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product.stock",{"_index":582,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.tipodocumento",{"_index":774,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item:hover",{"_index":1079,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":227,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["jefe",{"_index":890,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.parse(bodegas",{"_index":409,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["json.parse(localstorage.getitem('notifications",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.parse(localstorage.getitem('users",{"_index":373,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["json.stringify(notifications",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(this.bodegas",{"_index":413,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["json.stringify(this.users",{"_index":720,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["justify",{"_index":226,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["karma",{"_index":1368,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":1187,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["la",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["label",{"_index":1275,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["las",{"_index":405,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["lastname",{"_index":677,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["left",{"_index":230,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["legend",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["link",{"_index":1036,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list",{"_index":1050,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lista",{"_index":138,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["lo",{"_index":957,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loadallproducts",{"_index":415,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["loadbodegas",{"_index":406,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["loadnotifications",{"_index":1113,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["loadusers",{"_index":372,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["local",{"_index":371,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["localstorage.getitem('bodegas",{"_index":407,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["localstorage.setitem('bodegas",{"_index":412,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["localstorage.setitem('notifications",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('users",{"_index":719,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["location",{"_index":278,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["login",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["login.component.css",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":62,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["loginerror",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["logout",{"_index":941,"title":{},"body":{"components/NavbarComponent.html":{}}}],["los",{"_index":119,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["líneas",{"_index":1077,"title":{},"body":{"components/NavbarComponent.html":{}}}],["main",{"_index":222,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["maneja",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["marca",{"_index":181,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["margin",{"_index":229,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["matching",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["material",{"_index":183,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["max",{"_index":236,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["mayor",{"_index":888,"title":{},"body":{"components/LoginComponent.html":{}}}],["mayúsculas",{"_index":358,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["mb",{"_index":1263,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["media",{"_index":1265,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["memberof",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["mensaje",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["menu",{"_index":1097,"title":{},"body":{"components/NavbarComponent.html":{}}}],["message",{"_index":665,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["messages",{"_index":1012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["methods",{"_index":91,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["middle",{"_index":203,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["min",{"_index":1099,"title":{},"body":{"components/NavbarComponent.html":{}}}],["modal",{"_index":136,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["modal(modalelement",{"_index":1176,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modal.getinstance(modalelement",{"_index":1190,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modal.hide",{"_index":1191,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modal.show",{"_index":1177,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modalelement",{"_index":1174,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["model",{"_index":272,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["modelo",{"_index":179,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["modificación",{"_index":623,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modificationrequest",{"_index":660,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["modules",{"_index":1384,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moneda",{"_index":191,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["month",{"_index":325,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["more",{"_index":1379,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["motivo",{"_index":290,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["motivosalida",{"_index":291,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["movimiento",{"_index":248,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["movimientos",{"_index":255,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["muestra",{"_index":130,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{}}}],["método",{"_index":107,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["móviles",{"_index":1269,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["nacimiento",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["nav",{"_index":1034,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":930,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["navbar.component.css",{"_index":931,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":932,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":23,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["navega",{"_index":972,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navegación",{"_index":929,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigate",{"_index":1347,"title":{},"body":{"index.html":{}}}],["navigatetohome",{"_index":942,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ndice",{"_index":137,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["necesarias",{"_index":977,"title":{},"body":{"components/NavbarComponent.html":{}}}],["need",{"_index":1373,"title":{},"body":{"index.html":{}}}],["new",{"_index":164,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["newbodeganame",{"_index":267,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["newproduct",{"_index":270,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["newuser",{"_index":690,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ng",{"_index":1344,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":247,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["ngoninit",{"_index":92,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["nico",{"_index":674,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["nombre",{"_index":246,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["none",{"_index":1042,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["normaliza",{"_index":341,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["normalizado",{"_index":343,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["normalizecode(code",{"_index":344,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["normalizedcode",{"_index":352,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["notificaciones",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notificaciones.component.css",{"_index":1105,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notificaciones.component.html",{"_index":1106,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notificacionescomponent",{"_index":65,"title":{"components/NotificacionesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"coverage.html":{}}}],["notificación",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notification",{"_index":1139,"title":{"interfaces/Notification.html":{}},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"coverage.html":{}}}],["notification.solicitadapor",{"_index":1200,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notification.status",{"_index":1170,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notificationmodal",{"_index":1287,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notifications",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notifications.push",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{}}}],["notificationservice",{"_index":946,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["nowrap",{"_index":220,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["nueva",{"_index":266,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["nuevo",{"_index":268,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["null",{"_index":144,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["number",{"_index":128,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["numeric",{"_index":324,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["numero",{"_index":485,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["numerodocumento",{"_index":289,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["número",{"_index":288,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["o",{"_index":990,"title":{},"body":{"components/NavbarComponent.html":{}}}],["obtiene",{"_index":1126,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["olvidaste",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{}}}],["onabrirhistorial",{"_index":536,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onaddproduct(form",{"_index":433,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onaddproductotoingreso",{"_index":465,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onaddproductotosalida",{"_index":507,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onaddproductototraslado",{"_index":551,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmaringreso",{"_index":478,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmarsalida",{"_index":520,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmartraslado",{"_index":559,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmdelete",{"_index":390,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmdeleteuser",{"_index":762,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ondeleteproduct(index",{"_index":381,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oneditproduct(index",{"_index":399,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oneliminaritem(index",{"_index":476,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oneliminaritemsalida(index",{"_index":518,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oneliminaritemtraslado(index",{"_index":556,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oninit",{"_index":79,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["onregister(form",{"_index":703,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onrequestmodification",{"_index":624,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["onsaveeditproduct",{"_index":424,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsaveedituser(form",{"_index":751,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsaveuser(form",{"_index":737,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsearchproduct",{"_index":93,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["onsearchproduct(event",{"_index":116,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsearchuser",{"_index":727,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsubmit",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(form",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["onupdateproduct(index",{"_index":396,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onverdetallesmovimiento(movimiento",{"_index":540,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onviewproductinfo",{"_index":94,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["onviewproductinfo(index",{"_index":127,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onvolverhistorial",{"_index":548,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["openaddbodegamodal",{"_index":515,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["openmodal",{"_index":1114,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["openmodal(notification",{"_index":1138,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["openusermodal",{"_index":734,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["optional",{"_index":103,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["origen",{"_index":310,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["original",{"_index":599,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["originalproduct",{"_index":601,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["otro",{"_index":715,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["out",{"_index":1063,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["overflow",{"_index":212,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["overview",{"_index":1382,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1290,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["p.code",{"_index":481,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["package",{"_index":1312,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":207,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["page",{"_index":1101,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"index.html":{}}}],["panel",{"_index":76,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["pantalla",{"_index":950,"title":{},"body":{"components/NavbarComponent.html":{}}}],["para",{"_index":244,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["param",{"_index":149,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["partial",{"_index":1160,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["partialproduct",{"_index":595,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["partir",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["paso",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["password",{"_index":687,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["passwordfield",{"_index":769,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["passwordfield.type",{"_index":771,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["pendiente",{"_index":1194,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pendientes",{"_index":992,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pending",{"_index":664,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pending').length",{"_index":1171,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pendingnotificationscount",{"_index":936,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["permitido",{"_index":963,"title":{},"body":{"components/NavbarComponent.html":{}}}],["permitidos",{"_index":966,"title":{},"body":{"components/NavbarComponent.html":{}}}],["persona",{"_index":1158,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pertenece",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{}}}],["pill",{"_index":1008,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1370,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1054,"title":{},"body":{"components/NavbarComponent.html":{}}}],["por",{"_index":451,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["position",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["praxa",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["primary",{"_index":1284,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["primary:hover",{"_index":1285,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["principal",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["private",{"_index":317,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["product",{"_index":139,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["product.code",{"_index":173,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["product.code.tolowercase().includes(this.searchproductterm",{"_index":157,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.description",{"_index":174,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["product.description.tolowercase().includes(this.searchproductterm",{"_index":158,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.name",{"_index":488,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.name.tolowercase().includes(this.searchproductterm",{"_index":159,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.stock",{"_index":176,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.unit",{"_index":175,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["productcode",{"_index":1178,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["productcodeexists",{"_index":306,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productexists(code",{"_index":351,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productindestino",{"_index":567,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productindestino.stock",{"_index":569,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productinfomodal",{"_index":163,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productinfomodal.show",{"_index":166,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productinorigen",{"_index":565,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productinorigen.stock",{"_index":570,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["producto",{"_index":132,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["productooriginal",{"_index":668,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["productos",{"_index":105,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["products",{"_index":88,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productservice",{"_index":97,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["producttoadd",{"_index":511,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["producttodelete",{"_index":300,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["project",{"_index":1337,"title":{},"body":{"index.html":{}}}],["properties",{"_index":29,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"properties.html":{}}}],["public",{"_index":933,"title":{},"body":{"components/NavbarComponent.html":{}}}],["página",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["que",{"_index":108,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["quitar",{"_index":1076,"title":{},"body":{"components/NavbarComponent.html":{}}}],["radius",{"_index":210,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["rdenes",{"_index":1020,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rea",{"_index":251,"title":{},"body":{"interfaces/Bodega.html":{},"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":593,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["realiza",{"_index":604,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["realizar",{"_index":896,"title":{},"body":{"components/LoginComponent.html":{}}}],["recargar",{"_index":615,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["recepción",{"_index":1022,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rechaza",{"_index":1142,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["rechazado",{"_index":1196,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["rechazar",{"_index":1228,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["recoveryemail",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{}}}],["recuperación",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{}}}],["recuperar",{"_index":883,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirige",{"_index":970,"title":{},"body":{"components/NavbarComponent.html":{}}}],["redondeados",{"_index":1084,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reference",{"_index":1383,"title":{},"body":{"index.html":{}}}],["registererror",{"_index":695,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["registersuccess",{"_index":697,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["registra",{"_index":702,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["registrado",{"_index":721,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["registro",{"_index":292,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["registronumeroingreso",{"_index":293,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["registronumerosalida",{"_index":294,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["reinicia",{"_index":461,"title":{},"body":{"interfaces/Bodega.html":{}}}],["reiniciar",{"_index":462,"title":{},"body":{"interfaces/Bodega.html":{}}}],["rejected",{"_index":1156,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["rejectmodification",{"_index":1115,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["relative",{"_index":1103,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["reload",{"_index":1351,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{}}}],["repeatpassword",{"_index":693,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["repetida",{"_index":691,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["representar",{"_index":245,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["resetform(form",{"_index":463,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["restablece",{"_index":618,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["restablecer",{"_index":620,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["results",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retirar",{"_index":777,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["return",{"_index":342,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["returns",{"_index":114,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["rgba(0",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["right",{"_index":1055,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["roboto",{"_index":1090,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rol",{"_index":681,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["role",{"_index":685,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["roles",{"_index":965,"title":{},"body":{"components/NavbarComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["rounded",{"_index":1007,"title":{},"body":{"components/NavbarComponent.html":{}}}],["router",{"_index":945,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routermodule",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["run",{"_index":1343,"title":{},"body":{"index.html":{}}}],["running",{"_index":1363,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["sacar",{"_index":598,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["salida",{"_index":261,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["salidabodegamodal",{"_index":531,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salidabodegamodal.dispose",{"_index":534,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salidabodegamodal.hide",{"_index":533,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salidabodegamodalelement",{"_index":529,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salidaitems",{"_index":281,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salir",{"_index":1024,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sans",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["savebodegas",{"_index":411,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["savenotifications",{"_index":1116,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["scaffolding",{"_index":1354,"title":{},"body":{"index.html":{}}}],["screenwidth",{"_index":1000,"title":{},"body":{"components/NavbarComponent.html":{}}}],["se",{"_index":109,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["search",{"_index":1242,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["searchproductterm",{"_index":89,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["searchuserterm",{"_index":699,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["según",{"_index":120,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/NavbarComponent.html":{}}}],["selecciona",{"_index":419,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["seleccionada",{"_index":264,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["seleccionado",{"_index":133,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["seleccionar",{"_index":420,"title":{},"body":{"interfaces/Bodega.html":{}}}],["seleccione",{"_index":467,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectbodega(bodega",{"_index":421,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedbodega",{"_index":265,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedbodegadestino",{"_index":313,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedbodegaorigen",{"_index":311,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedmovimiento",{"_index":298,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectednotification",{"_index":1108,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["selectednotification?.cambiossolicitados?.brand",{"_index":1219,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.color",{"_index":1221,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.currency",{"_index":1224,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.description",{"_index":1217,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.family",{"_index":1222,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.location",{"_index":1226,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.material",{"_index":1220,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.model",{"_index":1218,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.name",{"_index":1216,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.unit",{"_index":1225,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.value",{"_index":1223,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.brand",{"_index":1208,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.code",{"_index":1204,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.color",{"_index":1210,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.currency",{"_index":1213,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.description",{"_index":1206,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.family",{"_index":1211,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.location",{"_index":1215,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.material",{"_index":1209,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.model",{"_index":1207,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.name",{"_index":1205,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.unit",{"_index":1214,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.value",{"_index":1212,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.solicitadapor",{"_index":1202,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectedproduct",{"_index":90,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproduct?.brand",{"_index":182,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.code",{"_index":177,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.color",{"_index":186,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.currency",{"_index":192,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.description",{"_index":178,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.family",{"_index":188,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.location",{"_index":195,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.material",{"_index":184,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.model",{"_index":180,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.stock",{"_index":196,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.unit",{"_index":193,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.value",{"_index":190,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproductcode",{"_index":508,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["selectedproductindextodelete",{"_index":257,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproductindextoedit",{"_index":260,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproductsalida",{"_index":262,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproducttoedit",{"_index":299,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproducttraslado",{"_index":314,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selecteduser",{"_index":700,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["sendnotification",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["sendnotification(form",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["separate",{"_index":1248,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["ser",{"_index":887,"title":{},"body":{"components/LoginComponent.html":{}}}],["serif",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["serve",{"_index":1345,"title":{},"body":{"index.html":{}}}],["server",{"_index":1320,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service/notificacion.service",{"_index":993,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["service/product.service",{"_index":147,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["servicio",{"_index":104,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["sesión",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["settimeout",{"_index":504,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["shadow",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["showstep",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["showstep(step",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{}}}],["si",{"_index":302,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["sidebar",{"_index":952,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sidebar:hover",{"_index":1069,"title":{},"body":{"components/NavbarComponent.html":{}}}],["siguiente",{"_index":884,"title":{},"body":{"components/LoginComponent.html":{}}}],["similar",{"_index":1067,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sistema",{"_index":682,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["size",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["solicit",{"_index":1159,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["solicita",{"_index":622,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["solicitadapor",{"_index":667,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["solicitado",{"_index":1198,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["solicitados",{"_index":1161,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["solicitud",{"_index":666,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{}}}],["solid",{"_index":216,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["sombreado",{"_index":1082,"title":{},"body":{"components/NavbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"index.html":{}}}],["spa",{"_index":1017,"title":{},"body":{"components/NavbarComponent.html":{}}}],["space",{"_index":219,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["spacing",{"_index":1249,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["span",{"_index":1089,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/app.component.ts",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:28",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/area",{"_index":241,"title":{},"body":{"interfaces/Bodega.html":{},"coverage.html":{}}}],["src/app/auditor",{"_index":72,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"coverage.html":{}}}],["src/app/bodega",{"_index":590,"title":{},"body":{"interfaces/Bodega-1.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":671,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:111",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:128",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:155",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:167",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:47",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:53",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:71",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:77",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:83",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:96",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":927,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:104",{"_index":967,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:116",{"_index":961,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:126",{"_index":958,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:140",{"_index":971,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:169",{"_index":955,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:179",{"_index":979,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:28",{"_index":991,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:36",{"_index":989,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:44",{"_index":947,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:55",{"_index":986,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:65",{"_index":973,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:79",{"_index":948,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:89",{"_index":983,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts",{"_index":1104,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"coverage.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:103",{"_index":1137,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:112",{"_index":1136,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:121",{"_index":1150,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:132",{"_index":1140,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:145",{"_index":1120,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:161",{"_index":1141,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:175",{"_index":1143,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:184",{"_index":1131,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:193",{"_index":1122,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:208",{"_index":1146,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:227",{"_index":1125,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:68",{"_index":1153,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:75",{"_index":1154,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:82",{"_index":1152,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:89",{"_index":1119,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["standalone",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["start",{"_index":228,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["started",{"_index":1335,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":663,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["step",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["stock",{"_index":171,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["storage",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{}}}],["stored",{"_index":1360,"title":{},"body":{"index.html":{}}}],["string",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["striped",{"_index":1257,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["styles",{"_index":71,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["styleurls",{"_index":83,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["su",{"_index":879,"title":{},"body":{"components/LoginComponent.html":{}}}],["success",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["supera",{"_index":778,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["supervisor",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["suscripciones",{"_index":976,"title":{},"body":{"components/NavbarComponent.html":{}}}],["switch",{"_index":1192,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["tabla",{"_index":473,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["table",{"_index":205,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":949,"title":{},"body":{"components/NavbarComponent.html":{}}}],["targetbodega",{"_index":438,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["targetbodega.products.push(this.newproduct",{"_index":442,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["tbody",{"_index":1252,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["td",{"_index":198,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["td::before",{"_index":1273,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["td:last",{"_index":1254,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tem",{"_index":621,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["template",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["templateurl",{"_index":85,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["tems",{"_index":596,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["test",{"_index":1365,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1375,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1364,"title":{},"body":{"index.html":{}}}],["text",{"_index":199,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["texto",{"_index":1073,"title":{},"body":{"components/NavbarComponent.html":{}}}],["th",{"_index":197,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["thead",{"_index":1250,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.allproducts",{"_index":416,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.authservice.getcurrentuser().firstname",{"_index":495,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.authservice.getcurrentuser().lastname",{"_index":496,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.authservice.isbodega",{"_index":1165,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.authservice.login(this.email",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.birthdate",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.bodegas",{"_index":408,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas.find(b",{"_index":439,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas.length",{"_index":336,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas.push",{"_index":337,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas.reduce((acc",{"_index":417,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas[0",{"_index":339,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas[1",{"_index":701,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.cantidadingreso",{"_index":475,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.cantidadsalida",{"_index":514,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.checkscreensize",{"_index":997,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.checkscreensize.bind(this",{"_index":999,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.closemodal",{"_index":1185,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.emailerror",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.emailvalid",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filteredproducts",{"_index":153,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.filteredusers",{"_index":726,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.fullname",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.historial",{"_index":320,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems",{"_index":497,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.find(item",{"_index":469,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.foreach(item",{"_index":479,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.map(i",{"_index":489,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.push",{"_index":474,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.splice(index",{"_index":477,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.isadult",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isbodega",{"_index":1164,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.issidebarcollapsed",{"_index":1002,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loadallproducts",{"_index":335,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.loadbodegas",{"_index":334,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.loadnotifications",{"_index":1163,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.loadusers",{"_index":333,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.loginerror",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.motivosalida",{"_index":525,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newbodeganame",{"_index":457,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newproduct",{"_index":444,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newproduct.bodega",{"_index":441,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newproduct.code",{"_index":436,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newuser",{"_index":718,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newuser.email",{"_index":712,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newuser.password",{"_index":704,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.normalizecode(code",{"_index":353,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.normalizecode(product.code",{"_index":355,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.normalizecode(this.newproduct.code",{"_index":437,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.notifications",{"_index":1166,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.notifications.filter(notification",{"_index":1169,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.notificationservice.pendingcount$.subscribe(count",{"_index":994,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.notificationservice.setpendingcount(count",{"_index":1172,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.numerodocumento",{"_index":524,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.onrequestmodification",{"_index":614,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct",{"_index":625,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.brand",{"_index":637,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.color",{"_index":643,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.currency",{"_index":652,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.description",{"_index":631,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.family",{"_index":646,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.location",{"_index":658,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.material",{"_index":640,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.model",{"_index":634,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.name",{"_index":628,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.unit",{"_index":655,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.value",{"_index":649,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.password",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.pendingnotificationscount",{"_index":995,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.productcodeexists",{"_index":365,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productexists(this.newproduct.code",{"_index":366,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.products",{"_index":152,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.products.filter(product",{"_index":156,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["this.products.find(p",{"_index":522,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.products.find(product",{"_index":512,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.products[index",{"_index":161,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["this.productservice.addmovimiento",{"_index":484,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.addnotification(modificationrequest",{"_index":669,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.productservice.getnextingresonumber",{"_index":330,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.getnextsalidanumber",{"_index":332,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.getnotifications",{"_index":1167,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.productservice.historial$.subscribe(historial",{"_index":319,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.incrementnextingresonumber",{"_index":498,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.incrementnextsalidanumber",{"_index":528,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.products$.subscribe(products",{"_index":151,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.updatenotifications(this.notifications",{"_index":1186,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.productservice.updatenotificationstatus(this.selectednotification.id",{"_index":1182,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.productservice.updateproduct(product.code",{"_index":483,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.updateproduct(productcode",{"_index":1180,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.producttodelete",{"_index":383,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.recoveryemail",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.registererror",{"_index":706,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.registersuccess",{"_index":716,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.registronumeroingreso",{"_index":329,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.registronumerosalida",{"_index":331,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.repeatpassword",{"_index":705,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.resetform(form",{"_index":739,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.salidaitems",{"_index":527,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.salidaitems.find(item",{"_index":510,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.salidaitems.foreach(item",{"_index":521,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.salidaitems.map(i",{"_index":526,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.salidaitems.push",{"_index":513,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.salidaitems.splice(index",{"_index":519,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.savebodegas",{"_index":340,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.savenotifications",{"_index":1184,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.searchproductterm",{"_index":154,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.searchuserterm",{"_index":728,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega",{"_index":338,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.name",{"_index":426,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products",{"_index":318,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products.filter(product",{"_index":379,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products.find(p",{"_index":480,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products.some(product",{"_index":354,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products.splice(this.selectedproductindextodelete",{"_index":391,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products[index",{"_index":384,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products[this.selectedproductindextoedit",{"_index":427,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegadestino",{"_index":561,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegadestino!.products.find(p",{"_index":568,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegadestino!.products.push",{"_index":571,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegadestino.name",{"_index":576,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen",{"_index":560,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen!.products",{"_index":573,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen!.products.filter(product",{"_index":574,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen!.products.find(p",{"_index":566,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen.name",{"_index":575,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedmovimiento",{"_index":541,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectednotification",{"_index":1173,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.cambiossolicitados",{"_index":1181,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.cambiossolicitados[field",{"_index":1189,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.productooriginal.code",{"_index":1179,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.productooriginal[field",{"_index":1188,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.status",{"_index":1183,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectedproduct",{"_index":160,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproduct!.code",{"_index":471,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductindextodelete",{"_index":382,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductindextoedit",{"_index":400,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductsalida",{"_index":772,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductsalida!.code",{"_index":773,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductsalida?.code",{"_index":509,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit",{"_index":401,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproducttoedit.bodega",{"_index":425,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproducttoedit.brand",{"_index":636,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.color",{"_index":642,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.currency",{"_index":651,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.description",{"_index":630,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.family",{"_index":645,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.location",{"_index":657,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.material",{"_index":639,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.model",{"_index":633,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.name",{"_index":627,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.unit",{"_index":654,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.value",{"_index":648,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttraslado",{"_index":552,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproducttraslado!.code",{"_index":554,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selecteduser",{"_index":743,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selecteduser.id",{"_index":754,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.showstep(2",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showstep(3",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.supervisor",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tipodocumento",{"_index":523,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.today",{"_index":321,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems",{"_index":583,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.find(item",{"_index":553,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.foreach(item",{"_index":564,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.map(item",{"_index":579,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.push",{"_index":555,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.splice(index",{"_index":557,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.updatependingnotificationscount",{"_index":1168,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.users",{"_index":376,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users.filter(user",{"_index":729,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users.find(user",{"_index":710,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users.findindex(u",{"_index":752,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users.push",{"_index":717,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users.splice(index",{"_index":763,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users[index",{"_index":755,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.workarea",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{}}}],["tiempo",{"_index":867,"title":{},"body":{"components/LoginComponent.html":{}}}],["tipo",{"_index":285,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["tipodocumento",{"_index":287,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["title",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/NotificacionesComponent.html":{}}}],["todas",{"_index":414,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["today",{"_index":297,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["todos",{"_index":252,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["toggle::after",{"_index":1041,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggledropdown",{"_index":943,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggledropdown(dropdownid",{"_index":978,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglepasswordvisibility",{"_index":768,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["togglesidebar",{"_index":944,"title":{},"body":{"components/NavbarComponent.html":{}}}],["top",{"_index":232,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["touppercase(event",{"_index":359,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["tr",{"_index":1253,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tr:hover",{"_index":1281,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tr:last",{"_index":1256,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tr:nth",{"_index":1258,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["trabajo",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["traduce",{"_index":1147,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["traducido",{"_index":1149,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["transition",{"_index":1060,"title":{},"body":{"components/NavbarComponent.html":{}}}],["translate",{"_index":1005,"title":{},"body":{"components/NavbarComponent.html":{}}}],["translatestatus",{"_index":1117,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["translatestatus(notification.status",{"_index":1201,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["translatestatus(selectednotification?.status",{"_index":1203,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["translatestatus(status",{"_index":1145,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["transparent",{"_index":1289,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["traslado",{"_index":308,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["trasladobodegamodal",{"_index":586,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["trasladobodegamodal.dispose",{"_index":589,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["trasladobodegamodal.hide",{"_index":588,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["trasladobodegamodalelement",{"_index":584,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["trasladoitems",{"_index":309,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["true",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["tslib",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{}}}],["type",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["type(odd",{"_index":1259,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["término",{"_index":121,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["título",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/NotificacionesComponent.html":{}}}],["u.id",{"_index":753,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ubicación",{"_index":194,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ul",{"_index":1291,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["un",{"_index":135,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["una",{"_index":100,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["undefined",{"_index":1124,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["unidad",{"_index":170,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["unidades",{"_index":487,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["unit",{"_index":277,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{},"index.html":{}}}],["uno",{"_index":617,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["unread",{"_index":1011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["updatependingnotificationscount",{"_index":1118,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["url",{"_index":956,"title":{},"body":{"components/NavbarComponent.html":{}}}],["url(../../assets/img/fondos/inicio.png",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{}}}],["use",{"_index":1356,"title":{},"body":{"index.html":{}}}],["user",{"_index":672,"title":{"interfaces/User.html":{}},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user.email",{"_index":711,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["user.email.tolowercase().includes(this.searchuserterm.tolowercase",{"_index":732,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["user.firstname.tolowercase().includes(this.searchuserterm.tolowercase",{"_index":730,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["user.lastname.tolowercase().includes(this.searchuserterm.tolowercase",{"_index":731,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["user.role.tolowercase().includes(this.searchuserterm.tolowercase",{"_index":733,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["userinfomodal",{"_index":744,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["userinfomodal.show",{"_index":746,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["usermodal",{"_index":723,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["usermodal.show",{"_index":736,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["usermodal?.hide",{"_index":725,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["users",{"_index":315,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["users.find((user",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["usted",{"_index":898,"title":{},"body":{"components/LoginComponent.html":{}}}],["usuario",{"_index":494,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["usuarios",{"_index":368,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["valida",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["validateage",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["validateage(event",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["validated",{"_index":449,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["validation",{"_index":447,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["valor",{"_index":189,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["value",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["var",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ver",{"_index":397,"title":{},"body":{"interfaces/Bodega.html":{},"components/NotificacionesComponent.html":{}}}],["verdadero",{"_index":347,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["verifica",{"_index":346,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["verificación",{"_index":692,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["verificar",{"_index":1135,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["verifyemail",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["version",{"_index":1341,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":202,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["via",{"_index":1367,"title":{},"body":{"index.html":{}}}],["viewuser(user",{"_index":742,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["visibilidad",{"_index":767,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["visualiza",{"_index":609,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["visualizar",{"_index":610,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["void",{"_index":115,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["vr",{"_index":1043,"title":{},"body":{"components/NavbarComponent.html":{}}}],["vuelve",{"_index":547,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["válidas",{"_index":563,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["válido",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["warning",{"_index":1197,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["weight",{"_index":1031,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["white",{"_index":218,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["width",{"_index":234,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["window.addeventlistener('resize",{"_index":998,"title":{},"body":{"components/NavbarComponent.html":{}}}],["window.innerwidth",{"_index":1001,"title":{},"body":{"components/NavbarComponent.html":{}}}],["workarea",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["wrapper",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["x",{"_index":1064,"title":{},"body":{"components/NavbarComponent.html":{}}}],["xito",{"_index":696,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["y",{"_index":969,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ya",{"_index":303,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["year",{"_index":323,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["z",{"_index":1058,"title":{},"body":{"components/NavbarComponent.html":{}}}],["zone.js",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                NavbarComponent\n                \n            \n\n\n\n            \n                template\n                \nHello, {{ title }}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'erp-praxa'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    Título de la aplicación.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/**\n * Componente principal de la aplicación.\n * \n * @export\n * @class AppComponent\n */\n@Component({\n  selector: 'app-root',\n  template: `\n    \n    Hello, {{ title }}\n    \n  `,\n  standalone: true,\n  imports: [RouterModule, NavbarComponent]\n})\nexport class AppComponent {\n  /**\n   * Título de la aplicación.\n   * \n   * @type {string}\n   * @memberof AppComponent\n   */\n  title: string = 'erp-praxa';\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Hello, {{ title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuditorDashboardComponent.html":{"url":"components/AuditorDashboardComponent.html","title":"component - AuditorDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuditorDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auditor-dashboard/auditor-dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente del panel de control del auditor.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auditor-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./auditor-dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auditor-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredProducts\n                            \n                            \n                                products\n                            \n                            \n                                searchProductTerm\n                            \n                            \n                                selectedProduct\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSearchProduct\n                            \n                            \n                                onViewProductInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:53\n                            \n                        \n\n                \n                    \n                            Crea una instancia de AuditorDashboardComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                    ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de productos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Método que se ejecuta al inicializar el componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchProduct\n                        \n                    \n                \n            \n            \n                \nonSearchProduct(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Filtra los productos según el término de búsqueda ingresado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de entrada de búsqueda\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onViewProductInfo\n                        \n                    \n                \n            \n            \n                \nonViewProductInfo(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Muestra la información del producto seleccionado en un modal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Índice del producto seleccionado en la lista\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredProducts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:37\n                        \n                    \n\n            \n                \n                    Lista de productos filtrados.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:29\n                        \n                    \n\n            \n                \n                    Lista de productos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchProductTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:45\n                        \n                    \n\n            \n                \n                    Término de búsqueda de productos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:53\n                        \n                    \n\n            \n                \n                    Producto seleccionado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ProductService, Product } from '../service/product.service';\nimport * as bootstrap from 'bootstrap';\n\n/**\n * Componente del panel de control del auditor.\n * \n * @export\n * @class AuditorDashboardComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-auditor-dashboard',\n  templateUrl: './auditor-dashboard.component.html',\n  styleUrls: ['./auditor-dashboard.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\nexport class AuditorDashboardComponent implements OnInit {\n\n  /**\n   * Lista de productos.\n   * \n   * @type {Product[]}\n   * @memberof AuditorDashboardComponent\n   */\n  products: Product[] = [];\n\n  /**\n   * Lista de productos filtrados.\n   * \n   * @type {Product[]}\n   * @memberof AuditorDashboardComponent\n   */\n  filteredProducts: Product[] = [];\n\n  /**\n   * Término de búsqueda de productos.\n   * \n   * @type {string}\n   * @memberof AuditorDashboardComponent\n   */\n  searchProductTerm: string = '';\n\n  /**\n   * Producto seleccionado.\n   * \n   * @type {(Product | null)}\n   * @memberof AuditorDashboardComponent\n   */\n  selectedProduct: Product | null = null;\n\n  /**\n   * Crea una instancia de AuditorDashboardComponent.\n   * \n   * @param {ProductService} productService Servicio de productos\n   * @memberof AuditorDashboardComponent\n   */\n  constructor(private productService: ProductService) {}\n\n  /**\n   * Método que se ejecuta al inicializar el componente.\n   * \n   * @memberof AuditorDashboardComponent\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = products;\n    });\n  }\n\n  /**\n   * Filtra los productos según el término de búsqueda ingresado.\n   * \n   * @param {any} event Evento de entrada de búsqueda\n   * @memberof AuditorDashboardComponent\n   */\n  onSearchProduct(event: any) {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.products;\n    }\n  }\n\n  /**\n   * Muestra la información del producto seleccionado en un modal.\n   * \n   * @param {number} index Índice del producto seleccionado en la lista\n   * @memberof AuditorDashboardComponent\n   */\n  onViewProductInfo(index: number) {\n    this.selectedProduct = this.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n}\n\n    \n\n    \n        \n\n    \n    Inventario\n    \n    \n    \n    \n        \n        CÓDIGO\n        DESCRIPCIÓN\n        UNIDAD\n        STOCK\n        HERRAMIENTAS\n        \n    \n    \n        \n        {{ product.code }}\n        {{ product.description }}\n        {{ product.unit }}\n        {{ product.stock }}\n        \n            \n            \n                \n            \n            \n        \n        \n    \n    \n\n  \n  \n\n\n    \n    \n        Información del Producto\n        \n    \n    \n        Código: {{ selectedProduct?.code }}\n        Descripción: {{ selectedProduct?.description }}\n        Modelo: {{ selectedProduct?.model }}\n        Marca: {{ selectedProduct?.brand }}\n        Material: {{ selectedProduct?.material }}\n        Color: {{ selectedProduct?.color }}\n        Familia: {{ selectedProduct?.family }}\n        Valor: {{ selectedProduct?.value }}\n        Moneda: {{ selectedProduct?.currency }}\n        Unidad: {{ selectedProduct?.unit }}\n        Ubicación: {{ selectedProduct?.location }}\n        Stock: {{ selectedProduct?.stock }}\n    \n    \n\n\n\n    \n\n    \n                \n                    ./auditor-dashboard.component.css\n                \n                th, td \n{\n  text-align: center;\n  vertical-align: middle;\n}\n\n.inventory-table-container {\n  padding: 20px;\n}\n\n.table {\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.table-bordered {\n  border: 1px solid #dee2e6;\n}\n\n.table th, .table td {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.main-content {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-left: 240px;\n  padding-top: 70px;\n  width: calc(100% - 240px);\n  }\n  \n  .container {\n  max-width: 90%;\n  width: 100%;\n  }\n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Inventario                                CÓDIGO        DESCRIPCIÓN        UNIDAD        STOCK        HERRAMIENTAS                                {{ product.code }}        {{ product.description }}        {{ product.unit }}        {{ product.stock }}                                                                                                                    Información del Producto                        Código: {{ selectedProduct?.code }}        Descripción: {{ selectedProduct?.description }}        Modelo: {{ selectedProduct?.model }}        Marca: {{ selectedProduct?.brand }}        Material: {{ selectedProduct?.material }}        Color: {{ selectedProduct?.color }}        Familia: {{ selectedProduct?.family }}        Valor: {{ selectedProduct?.value }}        Moneda: {{ selectedProduct?.currency }}        Unidad: {{ selectedProduct?.unit }}        Ubicación: {{ selectedProduct?.location }}        Stock: {{ selectedProduct?.stock }}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuditorDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bodega.html":{"url":"interfaces/Bodega.html","title":"interface - Bodega","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bodega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/area-dashboard/area-dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para representar una bodega.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la bodega.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:     Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lista de productos en la bodega.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as bootstrap from 'bootstrap';\nimport { ProductService, Product, Movimiento } from '../service/product.service';\nimport { AuthService } from '../auth/auth.service';\n\n/**\n * Interfaz para representar una bodega.\n * @interface\n */\ninterface Bodega {\n  /**\n   * Nombre de la bodega.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Lista de productos en la bodega.\n   * @type {Product[]}\n   */\n  products: Product[];\n}\n\n/**\n * Componente del panel de control del área.\n * \n * @export\n * @class AreaDashboardComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-area-dashboard',\n  templateUrl: './area-dashboard.component.html',\n  styleUrls: ['./area-dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, CommonModule]\n})\nexport class AreaDashboardComponent implements OnInit {\n  /**\n   * Lista de productos.\n   * \n   * @type {Product[]}\n   * @memberof AreaDashboardComponent\n   */\n  products: Product[] = [];\n\n  /**\n   * Lista de todos los productos.\n   * \n   * @type {Product[]}\n   * @memberof AreaDashboardComponent\n   */\n  allProducts: Product[] = [];\n\n  /**\n   * Lista de productos filtrados.\n   * \n   * @type {Product[]}\n   * @memberof AreaDashboardComponent\n   */\n  filteredProducts: Product[] = [];\n\n  /**\n   * Historial de movimientos.\n   * \n   * @type {Movimiento[]}\n   * @memberof AreaDashboardComponent\n   */\n  historial: Movimiento[] = [];\n\n  /**\n   * Índice del producto seleccionado para eliminar.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductIndexToDelete: number = -1;\n\n  /**\n   * Índice del producto seleccionado para editar.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductIndexToEdit: number = -1;\n\n  /**\n   * Producto seleccionado.\n   * \n   * @type {(Product | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProduct: Product | null = null;\n\n  /**\n   * Producto seleccionado para salida.\n   * \n   * @type {(Product | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductSalida: Product | null = null;\n\n  /**\n   * Lista de bodegas.\n   * \n   * @type {Bodega[]}\n   * @memberof AreaDashboardComponent\n   */\n  bodegas: Bodega[] = [];\n\n  /**\n   * Bodega seleccionada.\n   * \n   * @type {Bodega}\n   * @memberof AreaDashboardComponent\n   */\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n\n  /**\n   * Nombre de la nueva bodega.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  newBodegaName: string = '';\n\n  /**\n   * Término de búsqueda de productos.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  searchProductTerm: string = '';\n\n  /**\n   * Nuevo producto a agregar.\n   * \n   * @type {Product}\n   * @memberof AreaDashboardComponent\n   */\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Items de ingreso.\n   * \n   * @type {any[]}\n   * @memberof AreaDashboardComponent\n   */\n  ingresoItems: any[] = [];\n\n  /**\n   * Items de salida.\n   * \n   * @type {any[]}\n   * @memberof AreaDashboardComponent\n   */\n  salidaItems: any[] = [];\n\n  /**\n   * Cantidad de ingreso.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  cantidadIngreso: number = 1;\n\n  /**\n   * Cantidad de salida.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  cantidadSalida: number = 1;\n\n  /**\n   * Tipo de documento.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  tipoDocumento: string = '';\n\n  /**\n   * Número de documento.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  numeroDocumento: string = '';\n\n  /**\n   * Motivo de salida.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  motivoSalida: string = '';\n\n  /**\n   * Número de registro de ingreso.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  registroNumeroIngreso: number = 0;\n\n  /**\n   * Número de registro de salida.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  registroNumeroSalida: number = 0;\n\n  /**\n   * Fecha actual.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  today: string = '';\n\n  /**\n   * Movimiento seleccionado.\n   * \n   * @type {(Movimiento | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedMovimiento: Movimiento | null = null;\n\n  /**\n   * Producto seleccionado para editar.\n   * \n   * @type {Product}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Producto a eliminar.\n   * \n   * @type {(Product | null)}\n   * @memberof AreaDashboardComponent\n   */\n  productToDelete: Product | null = null;\n\n  /**\n   * Indica si el código del producto ya existe.\n   * \n   * @type {boolean}\n   * @memberof AreaDashboardComponent\n   */\n  productCodeExists: boolean = false;\n\n  /**\n   * Items de traslado.\n   * \n   * @type {any[]}\n   * @memberof AreaDashboardComponent\n   */\n  trasladoItems: any[] = [];\n\n  /**\n   * Bodega de origen seleccionada para traslado.\n   * \n   * @type {(Bodega | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedBodegaOrigen: Bodega | null = null;\n\n  /**\n   * Bodega de destino seleccionada para traslado.\n   * \n   * @type {(Bodega | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedBodegaDestino: Bodega | null = null;\n\n  /**\n   * Producto seleccionado para traslado.\n   * \n   * @type {(Product | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductTraslado: Product | null = null;\n  users: any;\n\n  /**\n   * Crea una instancia de AreaDashboardComponent.\n   * \n   * @param {ProductService} productService Servicio de productos\n   * @param {AuthService} authService Servicio de autenticación\n   * @memberof AreaDashboardComponent\n   */\n  constructor(private productService: ProductService, private authService: AuthService) {}\n\n  /**\n   * Método que se ejecuta al inicializar el componente.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = this.selectedBodega.products;\n    });\n    this.productService.historial$.subscribe(historial => this.historial = historial);\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadUsers();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'Bodega Principal', products: [] });\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n  }\n\n  /**\n   * Normaliza el código del producto.\n   * \n   * @param {string} code Código del producto\n   * @return {string} Código normalizado\n   * @memberof AreaDashboardComponent\n   */\n  normalizeCode(code: string): string {\n    return code.trim().toUpperCase();\n  }\n\n  /**\n   * Verifica si un producto existe en la bodega seleccionada.\n   * \n   * @param {string} code Código del producto\n   * @return {boolean} Verdadero si el producto existe, falso en caso contrario\n   * @memberof AreaDashboardComponent\n   */\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  /**\n   * Convierte el valor del input a mayúsculas.\n   * \n   * @param {Event} event Evento de entrada\n   * @memberof AreaDashboardComponent\n   */\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  /**\n   * Verifica si el código del producto existe.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  checkProductCode() {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  /**\n   * Carga los usuarios desde el almacenamiento local.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  loadUsers() {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    // Falta asignar el valor de `users` a `this.users` para que los usuarios carguen correctamente.\n    this.users = users;\n  }\n\n  /**\n   * Filtra los productos según el término de búsqueda ingresado.\n   * \n   * @param {any} event Evento de entrada de búsqueda\n   * @memberof AreaDashboardComponent\n   */\n  onSearchProduct(event: any) {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  /**\n   * Elimina el producto seleccionado.\n   * \n   * @param {number} index Índice del producto a eliminar\n   * @memberof AreaDashboardComponent\n   */\n  onDeleteProduct(index: number) {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  /**\n   * Confirma la eliminación del producto.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onConfirmDelete() {\n    if (this.selectedProductIndexToDelete !== -1) {\n      this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n      this.saveBodegas();\n      this.selectedProductIndexToDelete = -1;\n      this.productToDelete = null;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  /**\n   * Actualiza el producto en la bodega seleccionada.\n   * \n   * @param {number} index Índice del producto a actualizar\n   * @param {Product} product Producto a actualizar\n   * @memberof AreaDashboardComponent\n   */\n  onUpdateProduct(index: number, product: Product) {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  /**\n   * Muestra la información del producto seleccionado en un modal.\n   * \n   * @param {number} index Índice del producto a ver\n   * @memberof AreaDashboardComponent\n   */\n  onViewProductInfo(index: number) {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  /**\n   * Edita el producto seleccionado.\n   * \n   * @param {number} index Índice del producto a editar\n   * @memberof AreaDashboardComponent\n   */\n  onEditProduct(index: number) {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n\n  /**\n   * Carga las bodegas desde el almacenamiento local.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  loadBodegas() {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas);\n    } else {\n      this.bodegas = [];\n    }\n  } \n\n  /**\n   * Guarda las bodegas en el almacenamiento local.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  saveBodegas() {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  /**\n   * Carga todos los productos de todas las bodegas.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  loadAllProducts() {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  /**\n   * Selecciona una bodega.\n   * \n   * @param {Bodega} bodega Bodega a seleccionar\n   * @memberof AreaDashboardComponent\n   */\n  selectBodega(bodega: Bodega) {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  /**\n   * Guarda el producto editado.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onSaveEditProduct() {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      this.selectedProductToEdit.bodega = this.selectedBodega.name;\n      this.selectedBodega.products[this.selectedProductIndexToEdit] = this.selectedProductToEdit;\n      this.saveBodegas();\n      this.selectedProductToEdit = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.selectedProductIndexToEdit = -1;\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      editProductModal?.hide();\n    }\n  }\n\n  /**\n   * Agrega un nuevo producto a la bodega seleccionada.\n   * \n   * @param {NgForm} form Formulario del producto\n   * @memberof AreaDashboardComponent\n   */\n  onAddProduct(form: NgForm) {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts();\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Agrega una nueva bodega.\n   * \n   * @param {NgForm} form Formulario de la bodega\n   * @memberof AreaDashboardComponent\n   */\n  addBodega(form: NgForm) {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  /**\n   * Reinicia el formulario.\n   * \n   * @param {NgForm} form Formulario a reiniciar\n   * @param {'product'} type Tipo de formulario (producto)\n   * @memberof AreaDashboardComponent\n   */\n  resetForm(form: NgForm, type: 'product') {\n    form.resetForm();\n    if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de ingreso.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onAddProductoToIngreso() {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  /**\n   * Elimina un producto de la lista de ingreso.\n   * \n   * @param {number} index Índice del producto a eliminar\n   * @memberof AreaDashboardComponent\n   */\n  onEliminarItem(index: number) {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el ingreso de productos a la bodega.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onConfirmarIngreso() {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n        const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n        if (ingresoBodegaModal) {\n            ingresoBodegaModal.hide();\n            setTimeout(() => ingresoBodegaModal.dispose(), 500);\n        }\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de salida.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onAddProductoToSalida() {\n    const selectedProductCode = this.selectedProductSalida?.code;\n    if (!selectedProductCode) return;\n\n    const existingItem = this.salidaItems.find(item => item.product.code === selectedProductCode);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    const productToAdd = this.products.find(product => product.code === selectedProductCode);\n    if (productToAdd) {\n      this.salidaItems.push({\n        product: productToAdd,\n        cantidad: this.cantidadSalida\n      });\n      this.cantidadSalida = 1;\n    }\n  }\n\n  /**\n   * Muestra el modal para agregar una nueva bodega.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  openAddBodegaModal() {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  /**\n   * Elimina un producto de la lista de salida.\n   * \n   * @param {number} index Índice del producto a eliminar\n   * @memberof AreaDashboardComponent\n   */\n  onEliminarItemSalida(index: number) {\n    this.salidaItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma la salida de productos de la bodega.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onConfirmarSalida() {\n    this.salidaItems.forEach(item => {\n      const product = this.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock -= item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Salida',\n          numero: this.registroNumeroSalida,\n          fecha: this.today,\n          documento: `${this.tipoDocumento} ${this.numeroDocumento}`,\n          detalles: this.motivoSalida,\n          items: this.salidaItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n        const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n        if (salidaBodegaModal) {\n            salidaBodegaModal.hide();\n            setTimeout(() => salidaBodegaModal.dispose(), 500);\n        }\n    }\n  }\n\n  /**\n   * Abre el historial de movimientos en un modal.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Muestra los detalles de un movimiento en un modal.\n   * \n   * @param {Movimiento} movimiento Movimiento a ver\n   * @memberof AreaDashboardComponent\n   */\n  onVerDetallesMovimiento(movimiento: Movimiento) {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  /**\n   * Vuelve al historial de movimientos desde el modal de detalles.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Agrega un producto a la lista de traslado.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onAddProductoToTraslado() {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n  \n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n  \n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n\n  /**\n   * Elimina un producto de la lista de traslado.\n   * \n   * @param {number} index Índice del producto a eliminar\n   * @memberof AreaDashboardComponent\n   */\n  onEliminarItemTraslado(index: number) {\n    this.trasladoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el traslado de productos entre bodegas.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onConfirmarTraslado() {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n  \n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n  \n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n  \n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n  \n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n  \n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bodega-1.html":{"url":"interfaces/Bodega-1.html","title":"interface - Bodega-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bodega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/bodega-dashboard/bodega-dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para representar una bodega.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la bodega.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:     Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lista de productos almacenados en la bodega.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule, ReactiveFormsModule } from '@angular/forms'; // Añadir ReactiveFormsModule\nimport { CommonModule } from '@angular/common';\nimport * as bootstrap from 'bootstrap';\nimport { ProductService, Product, Movimiento, PartialProduct } from '../service/product.service';\nimport { AuthService } from '../auth/auth.service';\n\n/**\n * Interfaz para representar una bodega.\n * @interface\n */\ninterface Bodega {\n  /**\n   * Nombre de la bodega.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Lista de productos almacenados en la bodega.\n   * @type {Product[]}\n   */\n  products: Product[];\n}\n\n\n@Component({\n  selector: 'app-bodega-dashboard',\n  templateUrl: './bodega-dashboard.component.html',\n  styleUrls: ['./bodega-dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, CommonModule] // Añadir ReactiveFormsModule\n})\n/**\n * Componente del panel de control de la bodega.\n * @class\n * @implements {OnInit}\n */\nexport class BodegaDashboardComponent implements OnInit {\n  /**\n   * Lista de productos.\n   * @type {Product[]}\n   */\n  products: Product[] = [];\n\n  /**\n   * Lista de todos los productos.\n   * @type {Product[]}\n   */\n  allProducts: Product[] = [];\n\n  /**\n   * Lista de productos filtrados.\n   * @type {Product[]}\n   */\n  filteredProducts: Product[] = [];\n\n  /**\n   * Historial de movimientos.\n   * @type {Movimiento[]}\n   */\n  historial: Movimiento[] = [];\n\n  /**\n   * Índice del producto seleccionado para eliminar.\n   * @type {number}\n   */\n  selectedProductIndexToDelete: number = -1;\n\n  /**\n   * Índice del producto seleccionado para editar.\n   * @type {number}\n   */\n  selectedProductIndexToEdit: number = -1;\n\n  /**\n   * Producto seleccionado.\n   * @type {Product | null}\n   */\n  selectedProduct: Product | null = null;\n\n  /**\n   * Producto seleccionado para salida.\n   * @type {Product | null}\n   */\n  selectedProductSalida: Product | null = null;\n\n  /**\n   * Lista de bodegas.\n   * @type {Bodega[]}\n   */\n  bodegas: Bodega[] = [];\n\n  /**\n   * Bodega seleccionada.\n   * @type {Bodega}\n   */\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n\n  /**\n   * Nombre de la nueva bodega.\n   * @type {string}\n   */\n  newBodegaName: string = '';\n\n  /**\n   * Término de búsqueda de productos.\n   * @type {string}\n   */\n  searchProductTerm: string = '';\n\n  /**\n   * Nuevo producto a agregar.\n   * @type {Product}\n   */\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Lista de ítems de ingreso.\n   * @type {any[]}\n   */\n  ingresoItems: any[] = [];\n\n  /**\n   * Lista de ítems de salida.\n   * @type {any[]}\n   */\n  salidaItems: any[] = [];\n\n  /**\n   * Cantidad de productos a ingresar.\n   * @type {number}\n   */\n  cantidadIngreso: number = 1;\n\n  /**\n   * Cantidad de productos a sacar.\n   * @type {number}\n   */\n  cantidadSalida: number = 1;\n\n  /**\n   * Tipo de documento.\n   * @type {string}\n   */\n  tipoDocumento: string = '';\n\n  /**\n   * Número de documento.\n   * @type {string}\n   */\n  numeroDocumento: string = '';\n\n  /**\n   * Motivo de la salida.\n   * @type {string}\n   */\n  motivoSalida: string = '';\n\n  /**\n   * Número de registro de ingreso.\n   * @type {number}\n   */\n  registroNumeroIngreso: number = 0;\n\n  /**\n   * Número de registro de salida.\n   * @type {number}\n   */\n  registroNumeroSalida: number = 0;\n\n  /**\n   * Fecha actual.\n   * @type {string}\n   */\n  today: string = '';\n\n  /**\n   * Movimiento seleccionado.\n   * @type {Movimiento | null}\n   */\n  selectedMovimiento: Movimiento | null = null;\n\n  /**\n   * Producto seleccionado para editar.\n   * @type {Product}\n   */\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Producto a eliminar.\n   * @type {Product | null}\n   */\n  productToDelete: Product | null = null;\n\n  /**\n   * Indica si el código del producto ya existe.\n   * @type {boolean}\n   */\n  productCodeExists: boolean = false;\n\n  /**\n   * Lista de ítems de traslado.\n   * @type {any[]}\n   */\n  trasladoItems: any[] = [];\n\n  /**\n   * Bodega de origen seleccionada.\n   * @type {Bodega | null}\n   */\n  selectedBodegaOrigen: Bodega | null = null;\n\n  /**\n   * Bodega de destino seleccionada.\n   * @type {Bodega | null}\n   */\n  selectedBodegaDestino: Bodega | null = null;\n\n  /**\n   * Producto seleccionado para traslado.\n   * @type {Product | null}\n   */\n  selectedProductTraslado: Product | null = null;\n\n  /**\n   * Producto original antes de editar.\n   * @type {Product | null}\n   */\n  originalProduct: Product | null = null;\n\n  /**\n   * Constructor del componente.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {AuthService} authService - Servicio de autenticación.\n   */\n  constructor(private productService: ProductService, private authService: AuthService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = this.selectedBodega.products;\n    });\n    this.productService.historial$.subscribe(historial => this.historial = historial);\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadUsers();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'Bodega Principal', products: [] });\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n  }\n\n  /**\n   * Normaliza el código del producto.\n   * @param {string} code - Código del producto.\n   * @returns {string} - Código normalizado.\n   */\n  normalizeCode(code: string): string {\n    return code.trim().toUpperCase();\n  }\n\n  /**\n   * Verifica si un producto existe en la bodega seleccionada.\n   * @param {string} code - Código del producto.\n   * @returns {boolean} - Verdadero si el producto existe, falso en caso contrario.\n   */\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  /**\n   * Convierte el valor de entrada a mayúsculas.\n   * @param {Event} event - Evento de entrada.\n   * @returns {void}\n   */\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  /**\n   * Verifica la existencia del código del producto.\n   * @returns {void}\n   */\n  checkProductCode(): void {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  /**\n   * Carga los usuarios del almacenamiento local.\n   * @returns {void}\n   */\n  loadUsers(): void {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n  }\n\n  /**\n   * Realiza la búsqueda de un producto.\n   * @param {Event} event - Evento de búsqueda.\n   * @returns {void}\n   */\n  onSearchProduct(event: any): void {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  /**\n   * Abre el modal de confirmación para eliminar un producto.\n   * @param {number} index - Índice del producto a eliminar.\n   * @returns {void}\n   */\n  onDeleteProduct(index: number): void {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  /**\n   * Confirma la eliminación de un producto.\n   * @returns {void}\n   */\n  onConfirmDelete(): void {\n    if (this.selectedProductIndexToDelete !== -1) {\n      this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n      this.saveBodegas();\n      this.selectedProductIndexToDelete = -1;\n      this.productToDelete = null;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  /**\n   * Actualiza un producto existente.\n   * @param {number} index - Índice del producto a actualizar.\n   * @param {Product} product - Datos del producto actualizados.\n   * @returns {void}\n   */\n  onUpdateProduct(index: number, product: Product): void {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  /**\n   * Visualiza la información de un producto.\n   * @param {number} index - Índice del producto a visualizar.\n   * @returns {void}\n   */\n  onViewProductInfo(index: number): void {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  /**\n   * Carga las bodegas del almacenamiento local.\n   * @returns {void}\n   */\n  loadBodegas(): void {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas);\n    } else {\n      this.bodegas = [];\n    }\n  }\n\n  /**\n   * Guarda las bodegas en el almacenamiento local.\n   * @returns {void}\n   */\n  saveBodegas(): void {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  /**\n   * Carga todos los productos de todas las bodegas.\n   * @returns {void}\n   */\n  loadAllProducts(): void {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  /**\n   * Selecciona una bodega.\n   * @param {Bodega} bodega - Bodega seleccionada.\n   * @returns {void}\n   */\n  selectBodega(bodega: Bodega): void {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  /**\n   * Guarda los cambios en un producto editado.\n   * @returns {void}\n   */\n  onSaveEditProduct(): void {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      if (editProductModal) {\n        editProductModal.hide();\n        setTimeout(() => editProductModal.dispose(), 500);\n      }\n      this.onRequestModification();\n    }\n  }\n\n  /**\n   * Agrega un nuevo producto.\n   * @param {NgForm} form - Formulario de producto.\n   * @returns {void}\n   */\n  onAddProduct(form: NgForm): void {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts(); // Recargar todos los productos después de agregar uno nuevo\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Agrega una nueva bodega.\n   * @param {NgForm} form - Formulario de bodega.\n   * @returns {void}\n   */\n  addBodega(form: NgForm): void {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  /**\n   * Restablece el formulario especificado.\n   * @param {NgForm} form - Formulario a restablecer.\n   * @param {'product'} type - Tipo de formulario.\n   * @returns {void}\n   */\n  resetForm(form: NgForm, type: 'product'): void {\n    form.resetForm();\n    if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de ingreso.\n   * @returns {void}\n   */\n  onAddProductoToIngreso(): void {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  /**\n   * Elimina un ítem de la lista de ingreso.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItem(index: number): void {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el ingreso de productos.\n   * @returns {void}\n   */\n  onConfirmarIngreso(): void {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n      const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n      if (ingresoBodegaModal) {\n        ingresoBodegaModal.hide();\n        setTimeout(() => ingresoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de salida.\n   * @returns {void}\n   */\n  onAddProductoToSalida(): void {\n    const selectedProductCode = this.selectedProductSalida?.code;\n    if (!selectedProductCode) return;\n\n    const existingItem = this.salidaItems.find(item => item.product.code === selectedProductCode);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    const productToAdd = this.products.find(product => product.code === selectedProductCode);\n    if (productToAdd) {\n      this.salidaItems.push({\n        product: productToAdd,\n        cantidad: this.cantidadSalida\n      });\n      this.cantidadSalida = 1;\n    }\n  }\n\n  /**\n   * Muestra el modal para agregar una nueva bodega.\n   * @returns {void}\n   */\n  openAddBodegaModal(): void {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  /**\n   * Elimina un ítem de la lista de salida.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemSalida(index: number): void {\n    this.salidaItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma la salida de productos.\n   * @returns {void}\n   */\n  onConfirmarSalida(): void {\n    this.salidaItems.forEach(item => {\n      const product = this.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock -= item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Salida',\n          numero: this.registroNumeroSalida,\n          fecha: this.today,\n          documento: `${this.tipoDocumento} ${this.numeroDocumento}`,\n          detalles: this.motivoSalida,\n          items: this.salidaItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n      const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n      if (salidaBodegaModal) {\n        salidaBodegaModal.hide();\n        setTimeout(() => salidaBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Abre el historial de movimientos.\n   * @returns {void}\n   */\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Visualiza los detalles de un movimiento.\n   * @param {Movimiento} movimiento - Movimiento a visualizar.\n   * @returns {void}\n   */\n  onVerDetallesMovimiento(movimiento: Movimiento): void {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  /**\n   * Vuelve al historial de movimientos.\n   * @returns {void}\n   */\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Agrega un producto a la lista de traslado.\n   * @returns {void}\n   */\n  onAddProductoToTraslado(): void {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n\n  /**\n   * Elimina un ítem de la lista de traslado.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemTraslado(index: number): void {\n    this.trasladoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el traslado de productos.\n   * @returns {void}\n   */\n  onConfirmarTraslado(): void {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n\n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n\n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n\n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n\n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n\n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Solicita la modificación de un producto.\n   * @returns {void}\n   */\n  onRequestModification(): void {\n    if (!this.originalProduct) {\n      return;\n    }\n\n    const cambiosSolicitados: any = {};\n\n    if (this.selectedProductToEdit.name !== this.originalProduct.name) {\n      cambiosSolicitados.name = this.selectedProductToEdit.name;\n    }\n    if (this.selectedProductToEdit.description !== this.originalProduct.description) {\n      cambiosSolicitados.description = this.selectedProductToEdit.description;\n    }\n    if (this.selectedProductToEdit.model !== this.originalProduct.model) {\n      cambiosSolicitados.model = this.selectedProductToEdit.model;\n    }\n    if (this.selectedProductToEdit.brand !== this.originalProduct.brand) {\n      cambiosSolicitados.brand = this.selectedProductToEdit.brand;\n    }\n    if (this.selectedProductToEdit.material !== this.originalProduct.material) {\n      cambiosSolicitados.material = this.selectedProductToEdit.material;\n    }\n    if (this.selectedProductToEdit.color !== this.originalProduct.color) {\n      cambiosSolicitados.color = this.selectedProductToEdit.color;\n    }\n    if (this.selectedProductToEdit.family !== this.originalProduct.family) {\n      cambiosSolicitados.family = this.selectedProductToEdit.family;\n    }\n    if (this.selectedProductToEdit.value !== this.originalProduct.value) {\n      cambiosSolicitados.value = this.selectedProductToEdit.value;\n    }\n    if (this.selectedProductToEdit.currency !== this.originalProduct.currency) {\n      cambiosSolicitados.currency = this.selectedProductToEdit.currency;\n    }\n    if (this.selectedProductToEdit.unit !== this.originalProduct.unit) {\n      cambiosSolicitados.unit = this.selectedProductToEdit.unit;\n    }\n    if (this.selectedProductToEdit.location !== this.originalProduct.location) {\n      cambiosSolicitados.location = this.selectedProductToEdit.location;\n    }\n\n    const modificationRequest = {\n      id: new Date().getTime(),\n      status: 'pending',\n      message: 'Solicitud de modificación de producto',\n      solicitadaPor: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`,\n      productoOriginal: this.originalProduct as PartialProduct,\n      cambiosSolicitados: cambiosSolicitados\n    };\n\n    this.productService.addNotification(modificationRequest);\n\n    const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n    editProductModal?.hide();\n  }\n\n  /**\n   * Edita un producto existente.\n   * @param {number} index - Índice del producto a editar.\n   * @returns {void}\n   */\n  onEditProduct(index: number): void {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    this.originalProduct = { ...this.selectedBodega.products[index] }; // Guardar el producto original\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bodega-2.html":{"url":"interfaces/Bodega-2.html","title":"interface - Bodega-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bodega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para representar una bodega.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la bodega.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:     Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lista de productos en la bodega.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product, Movimiento } from '../service/product.service';\nimport * as bootstrap from 'bootstrap';\n\n/**\n * Interfaz para representar a un usuario.\n * @interface\n */\ninterface User {\n  /**\n   * Identificador único del usuario.\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Nombre del usuario.\n   * @type {string}\n   */\n  firstName: string;\n\n  /**\n   * Apellido del usuario.\n   * @type {string}\n   */\n  lastName: string;\n\n  /**\n   * Correo electrónico del usuario.\n   * @type {string}\n   */\n  email: string;\n\n  /**\n   * Rol del usuario en el sistema (e.g., Admin, User).\n   * @type {string}\n   */\n  role: string;\n\n  /**\n   * Contraseña del usuario.\n   * @type {string}\n   */\n  password: string;\n}\n\n\n/**\n * Interfaz para representar una bodega.\n * @interface\n */\ninterface Bodega {\n  /**\n   * Nombre de la bodega.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Lista de productos en la bodega.\n   * @type {Product[]}\n   */\n  products: Product[];\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, CommonModule]\n})\n/**\n * Componente del panel de control.\n * @class\n * @implements {OnInit}\n */\nexport class DashboardComponent implements OnInit {\n  /**\n   * Lista de productos disponibles.\n   * @type {Product[]}\n   */\n  products: Product[] = [];\n\n  /**\n   * Lista de todos los productos.\n   * @type {Product[]}\n   */\n  allProducts: Product[] = [];\n\n  /**\n   * Lista de productos filtrados.\n   * @type {Product[]}\n   */\n  filteredProducts: Product[] = [];\n\n  /**\n   * Historial de movimientos.\n   * @type {Movimiento[]}\n   */\n  historial: Movimiento[] = [];\n\n  /**\n   * Índice del producto seleccionado para eliminar.\n   * @type {number}\n   */\n  selectedProductIndexToDelete: number = -1;\n\n  /**\n   * Índice del producto seleccionado para editar.\n   * @type {number}\n   */\n  selectedProductIndexToEdit: number = -1;\n\n  /**\n   * Producto seleccionado.\n   * @type {Product | null}\n   */\n  selectedProduct: Product | null = null;\n\n  /**\n   * Producto seleccionado para salida.\n   * @type {Product | null}\n   */\n  selectedProductSalida: Product | null = null;\n\n  /**\n   * Lista de bodegas.\n   * @type {Bodega[]}\n   */\n  bodegas: Bodega[] = [];\n\n  /**\n   * Bodega seleccionada.\n   * @type {Bodega}\n   */\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n\n  /**\n   * Nombre de la nueva bodega.\n   * @type {string}\n   */\n  newBodegaName: string = '';\n\n  /**\n   * Término de búsqueda de productos.\n   * @type {string}\n   */\n  searchProductTerm: string = '';\n\n  /**\n   * Datos del nuevo producto.\n   * @type {Product}\n   */\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Items de ingreso.\n   * @type {any[]}\n   */\n  ingresoItems: any[] = [];\n\n  /**\n   * Items de salida.\n   * @type {any[]}\n   */\n  salidaItems: any[] = [];\n\n  /**\n   * Cantidad de ingreso.\n   * @type {number}\n   */\n  cantidadIngreso: number = 1;\n\n  /**\n   * Cantidad de salida.\n   * @type {number}\n   */\n  cantidadSalida: number = 1;\n\n  /**\n   * Tipo de documento.\n   * @type {string}\n   */\n  tipoDocumento: string = '';\n\n  /**\n   * Número de documento.\n   * @type {string}\n   */\n  numeroDocumento: string = '';\n\n  /**\n   * Motivo de salida.\n   * @type {string}\n   */\n  motivoSalida: string = '';\n\n  /**\n   * Número de registro de ingreso.\n   * @type {number}\n   */\n  registroNumeroIngreso: number = 0;\n\n  /**\n   * Número de registro de salida.\n   * @type {number}\n   */\n  registroNumeroSalida: number = 0;\n\n  /**\n   * Fecha de hoy.\n   * @type {string}\n   */\n  today: string = '';\n\n  /**\n   * Movimiento seleccionado.\n   * @type {Movimiento | null}\n   */\n  selectedMovimiento: Movimiento | null = null;\n\n  /**\n   * Producto seleccionado para editar.\n   * @type {Product}\n   */\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Producto a eliminar.\n   * @type {Product | null}\n   */\n  productToDelete: Product | null = null;\n\n  /**\n   * Indica si el código del producto ya existe.\n   * @type {boolean}\n   */\n  productCodeExists: boolean = false;\n\n  /**\n   * Datos del nuevo usuario.\n   * @type {User}\n   */\n  newUser: User = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n\n  /**\n   * Contraseña repetida para verificación.\n   * @type {string}\n   */\n  repeatPassword: string = '';\n\n  /**\n   * Error en el registro.\n   * @type {string}\n   */\n  registerError: string = '';\n\n  /**\n   * Éxito en el registro.\n   * @type {string}\n   */\n  registerSuccess: string = '';\n\n  /**\n   * Lista de usuarios.\n   * @type {User[]}\n   */\n  users: User[] = [];\n\n  /**\n   * Lista de usuarios filtrados.\n   * @type {User[]}\n   */\n  filteredUsers: User[] = [];\n\n  /**\n   * Término de búsqueda de usuarios.\n   * @type {string}\n   */\n  searchUserTerm: string = '';\n\n  /**\n   * Usuario seleccionado.\n   * @type {User}\n   */\n  selectedUser: User = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n\n  /**\n   * Items de traslado.\n   * @type {any[]}\n   */\n  trasladoItems: any[] = [];\n\n  /**\n   * Bodega de origen seleccionada para traslado.\n   * @type {Bodega | null}\n   */\n  selectedBodegaOrigen: Bodega | null = null;\n\n  /**\n   * Bodega de destino seleccionada para traslado.\n   * @type {Bodega | null}\n   */\n  selectedBodegaDestino: Bodega | null = null;\n\n  /**\n   * Producto seleccionado para traslado.\n   * @type {Product | null}\n   */\n  selectedProductTraslado: Product | null = null;\n\n  /**\n   * Constructor del componente.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {AuthService} authService - Servicio de autenticación.\n   */\n  constructor(private productService: ProductService, private authService: AuthService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = this.selectedBodega.products;\n    });\n    this.productService.historial$.subscribe(historial => this.historial = historial);\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadUsers();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'Bodega Principal', products: [] });\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n    this.selectedBodegaOrigen = this.bodegas.length > 0 ? this.bodegas[0] : null;\n    this.selectedBodegaDestino = this.bodegas.length > 0 ? this.bodegas[1] : null;\n  }\n\n  /**\n   * Normaliza el código del producto.\n   * @param {string} code - Código del producto.\n   * @returns {string} - Código normalizado.\n   */\n  normalizeCode(code: string): string {\n    return code.trim().toUpperCase();\n  }\n\n  /**\n   * Verifica si un producto existe en la bodega seleccionada.\n   * @param {string} code - Código del producto.\n   * @returns {boolean} - Verdadero si el producto existe, falso en caso contrario.\n   */\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  /**\n   * Convierte el valor de entrada a mayúsculas.\n   * @param {Event} event - Evento de entrada.\n   * @returns {void}\n   */\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  /**\n   * Verifica la existencia del código del producto.\n   * @returns {void}\n   */\n  checkProductCode(): void {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  /**\n   * Registra un nuevo usuario.\n   * @param {NgForm} form - Formulario de usuario.\n   * @returns {void}\n   */\n  onRegister(form: NgForm): void {\n    if (form.valid) {\n      if (this.newUser.password !== this.repeatPassword) {\n        this.registerError = 'Las contraseñas no coinciden.';\n        return;\n      }\n\n      const existingUser = this.users.find(user => user.email === this.newUser.email);\n      if (existingUser) {\n        this.registerError = 'El usuario ya existe. Por favor, intente con otro email.';\n        this.registerSuccess = '';\n        return;\n      }\n\n      this.users.push({ ...this.newUser });\n      localStorage.setItem('users', JSON.stringify(this.users));\n      this.registerSuccess = 'Usuario registrado exitosamente.';\n      this.registerError = '';\n      this.loadUsers();\n      form.resetForm();\n      const userModal = bootstrap.Modal.getInstance(document.getElementById('userModal')!);\n      userModal?.hide();\n    }\n  }\n\n  /**\n   * Carga los usuarios del almacenamiento local.\n   * @returns {void}\n   */\n  loadUsers(): void {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    this.users = users;\n    this.filteredUsers = users;\n  }\n\n  /**\n   * Realiza la búsqueda de un usuario.\n   * @returns {void}\n   */\n  onSearchUser(): void {\n    if (this.searchUserTerm) {\n      this.filteredUsers = this.users.filter(user =>\n        user.firstName.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n        user.lastName.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n        user.email.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n        user.role.toLowerCase().includes(this.searchUserTerm.toLowerCase())\n      );\n    } else {\n      this.filteredUsers = this.users;\n    }\n  }\n\n  /**\n   * Realiza la búsqueda de un producto.\n   * @param {Event} event - Evento de búsqueda.\n   * @returns {void}\n   */\n  onSearchProduct(event: any): void {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  /**\n   * Abre el modal para agregar usuarios.\n   * @returns {void}\n   */\n  openUserModal(): void {\n    const userModal = new bootstrap.Modal(document.getElementById('userModal')!);\n    userModal.show();\n  }\n\n  /**\n   * Guarda los cambios en un usuario.\n   * @param {NgForm} form - Formulario de usuario.\n   * @returns {void}\n   */\n  onSaveUser(form: NgForm): void {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (this.newUser.password !== this.repeatPassword) {\n        this.registerError = 'Las claves no coinciden.';\n        return;\n      }\n\n      const existingUser = this.users.find(user => user.email === this.newUser.email);\n      if (existingUser) {\n        this.registerError = 'El usuario ya existe. Por favor, intente con otro correo.';\n        this.registerSuccess = '';\n        return;\n      }\n\n      this.users.push({ ...this.newUser });\n      localStorage.setItem('users', JSON.stringify(this.users));\n      this.registerSuccess = 'Usuario registrado exitosamente.';\n      this.registerError = '';\n      this.loadUsers();\n      this.resetForm(form, 'user');\n    } else {\n      this.registerError = 'Por favor complete todos los campos correctamente.';\n      const formElement = document.querySelector('form.needs-validation-user');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Visualiza los detalles de un usuario.\n   * @param {User} user - Usuario a visualizar.\n   * @returns {void}\n   */\n  viewUser(user: User): void {\n    this.selectedUser = user;\n    const userInfoModal = new bootstrap.Modal(document.getElementById('userInfoModal')!);\n    userInfoModal.show();\n  }\n\n  /**\n   * Edita un usuario existente.\n   * @param {User} user - Usuario a editar.\n   * @returns {void}\n   */\n  editUser(user: User): void {\n    this.selectedUser = { ...user };\n    const editUserModal = new bootstrap.Modal(document.getElementById('editUserModal')!);\n    editUserModal.show();\n  }\n\n  /**\n   * Guarda los cambios en un usuario editado.\n   * @param {NgForm} form - Formulario de usuario.\n   * @returns {void}\n   */\n  onSaveEditUser(form: NgForm): void {\n    if (form.valid) {\n      const index = this.users.findIndex(u => u.id === this.selectedUser.id);\n      if (index !== -1) {\n        this.users[index] = { ...this.selectedUser };\n        localStorage.setItem('users', JSON.stringify(this.users));\n        this.loadUsers();\n        const editUserModal = bootstrap.Modal.getInstance(document.getElementById('editUserModal')!);\n        editUserModal?.hide();\n      }\n    }\n  }\n\n  /**\n   * Elimina un usuario.\n   * @param {User} user - Usuario a eliminar.\n   * @returns {void}\n   */\n  deleteUser(user: User): void {\n    this.selectedUser = user;\n    const confirmDeleteUserModal = new bootstrap.Modal(document.getElementById('confirmDeleteUserModal')!);\n    confirmDeleteUserModal.show();\n  }\n\n  /**\n   * Confirma la eliminación de un usuario.\n   * @returns {void}\n   */\n  onConfirmDeleteUser(): void {\n    const index = this.users.findIndex(u => u.id === this.selectedUser.id);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      localStorage.setItem('users', JSON.stringify(this.users));\n      this.loadUsers();\n      const confirmDeleteUserModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteUserModal')!);\n      confirmDeleteUserModal?.hide();\n    }\n  }\n\n  /**\n   * Alterna la visibilidad de la contraseña.\n   * @returns {void}\n   */\n  togglePasswordVisibility(): void {\n    const passwordField = document.getElementById('editPassword') as HTMLInputElement;\n    if (passwordField.type === 'password') {\n      passwordField.type = 'text';\n    } else {\n      passwordField.type = 'password';\n    }\n  }\n\n  /**\n   * Abre el modal de confirmación para eliminar un producto.\n   * @param {number} index - Índice del producto a eliminar.\n   * @returns {void}\n   */\n  onDeleteProduct(index: number): void {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  /**\n   * Confirma la eliminación de un producto.\n   * @returns {void}\n   */\n  onConfirmDelete(): void {\n    if (this.selectedProductIndexToDelete !== -1) {\n      this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n      this.saveBodegas();\n      this.selectedProductIndexToDelete = -1;\n      this.productToDelete = null;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  /**\n   * Actualiza un producto existente.\n   * @param {number} index - Índice del producto a actualizar.\n   * @param {Product} product - Datos del producto actualizados.\n   * @returns {void}\n   */\n  onUpdateProduct(index: number, product: Product): void {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  /**\n   * Visualiza la información de un producto.\n   * @param {number} index - Índice del producto a visualizar.\n   * @returns {void}\n   */\n  onViewProductInfo(index: number): void {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  /**\n   * Edita un producto existente.\n   * @param {number} index - Índice del producto a editar.\n   * @returns {void}\n   */\n  onEditProduct(index: number): void {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n\n  /**\n   * Carga las bodegas del almacenamiento local.\n   * @returns {void}\n   */\n  loadBodegas(): void {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas);\n    } else {\n      this.bodegas = [];\n    }\n  }\n\n  /**\n   * Guarda las bodegas en el almacenamiento local.\n   * @returns {void}\n   */\n  saveBodegas(): void {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  /**\n   * Carga todos los productos de todas las bodegas.\n   * @returns {void}\n   */\n  loadAllProducts(): void {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  /**\n   * Selecciona una bodega.\n   * @param {Bodega} bodega - Bodega seleccionada.\n   * @returns {void}\n   */\n  selectBodega(bodega: Bodega): void {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  /**\n   * Guarda los cambios en un producto editado.\n   * @returns {void}\n   */\n  onSaveEditProduct(): void {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      this.selectedProductToEdit.bodega = this.selectedBodega.name;\n      this.selectedBodega.products[this.selectedProductIndexToEdit] = this.selectedProductToEdit;\n      this.saveBodegas();\n      this.selectedProductToEdit = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.selectedProductIndexToEdit = -1;\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      editProductModal?.hide();\n    }\n  }\n\n  /**\n   * Agrega un nuevo producto.\n   * @param {NgForm} form - Formulario de producto.\n   * @returns {void}\n   */\n  onAddProduct(form: NgForm): void {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts();\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Agrega una nueva bodega.\n   * @param {NgForm} form - Formulario de bodega.\n   * @returns {void}\n   */\n  addBodega(form: NgForm): void {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  /**\n   * Restablece el formulario especificado.\n   * @param {NgForm} form - Formulario a restablecer.\n   * @param {'user' | 'product'} type - Tipo de formulario.\n   * @returns {void}\n   */\n  resetForm(form: NgForm, type: 'user' | 'product'): void {\n    form.resetForm();\n    if (type === 'user') {\n      this.newUser = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n      this.repeatPassword = '';\n      this.registerError = '';\n      this.registerSuccess = '';\n    } else if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de ingreso.\n   * @returns {void}\n   */\n  onAddProductoToIngreso(): void {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  /**\n   * Elimina un ítem de la lista de ingreso.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItem(index: number): void {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el ingreso de productos.\n   * @returns {void}\n   */\n  onConfirmarIngreso(): void {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.saveBodegas();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n      const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n      if (ingresoBodegaModal) {\n        ingresoBodegaModal.hide();\n        setTimeout(() => ingresoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Abre el modal para agregar una nueva bodega.\n   * @returns {void}\n   */\n  openAddBodegaModal(): void {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  /**\n   * Agrega un producto a la lista de salida.\n   * @returns {void}\n   */\n  onAddProductoToSalida(): void {\n    if (!this.selectedProductSalida) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.salidaItems.find(item => item.product.code === this.selectedProductSalida!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.salidaItems.push({\n      product: this.selectedProductSalida,\n      cantidad: this.cantidadSalida,\n      tipoDocumento: this.tipoDocumento,\n      numeroDocumento: this.numeroDocumento\n    });\n    this.cantidadSalida = 1;\n  }\n\n  /**\n   * Confirma la salida de productos.\n   * @returns {void}\n   */\n  onConfirmarSalida(): void {\n    this.salidaItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        if (product.stock >= item.cantidad) {\n          product.stock -= item.cantidad;\n          this.productService.updateProduct(product.code, product);\n          this.productService.addMovimiento({\n            tipo: 'Salida',\n            numero: this.registroNumeroSalida,\n            fecha: this.today,\n            documento: `${item.tipoDocumento} ${item.numeroDocumento}`,\n            detalles: this.motivoSalida,\n            items: [{\n              code: item.product.code,\n              name: item.product.name,\n              description: item.product.description,\n              cantidad: item.cantidad\n            }],\n            usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n          });\n        } else {\n          alert(`La cantidad a retirar supera el stock disponible de ${product.name}.`);\n        }\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.saveBodegas();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n      const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n      if (salidaBodegaModal) {\n        salidaBodegaModal.hide();\n        setTimeout(() => salidaBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Elimina un ítem de la lista de salida.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemSalida(index: number): void {\n    this.salidaItems.splice(index, 1);\n  }\n\n  /**\n   * Abre el historial de movimientos.\n   * @returns {void}\n   */\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Visualiza los detalles de un movimiento.\n   * @param {Movimiento} movimiento - Movimiento a visualizar.\n   * @returns {void}\n   */\n  onVerDetallesMovimiento(movimiento: Movimiento): void {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  /**\n   * Vuelve al historial de movimientos.\n   * @returns {void}\n   */\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Agrega un producto a la lista de traslado.\n   * @returns {void}\n   */\n  onAddProductoToTraslado(): void {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n\n  /**\n   * Elimina un ítem de la lista de traslado.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemTraslado(index: number): void {\n    this.trasladoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el traslado de productos.\n   * @returns {void}\n   */\n  onConfirmarTraslado(): void {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n\n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n\n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n\n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n\n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n\n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                email\n                            \n                            \n                                emailError\n                            \n                            \n                                emailValid\n                            \n                            \n                                fullName\n                            \n                            \n                                isAdult\n                            \n                            \n                                loginError\n                            \n                            \n                                password\n                            \n                            \n                                recoveryEmail\n                            \n                            \n                                supervisor\n                            \n                            \n                                workArea\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                sendNotification\n                            \n                            \n                                showStep\n                            \n                            \n                                validateAge\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:83\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de autenticación.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de inicio de sesión.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl formulario de inicio de sesión.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendNotification\n                        \n                    \n                \n            \n            \n                \nsendNotification(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:128\n                        \n                    \n\n\n            \n                \n                        Envía una notificación para la recuperación de cuenta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl formulario de notificación.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showStep\n                        \n                    \n                \n            \n            \n                \nshowStep(step: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:155\n                        \n                    \n\n\n            \n                \n                        Muestra el paso especificado en el formulario de recuperación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                step\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl número de paso a mostrar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAge\n                        \n                    \n                \n            \n            \n                \nvalidateAge(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Valida la edad del usuario a partir de la fecha de nacimiento.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEvento de cambio en el campo de fecha de nacimiento.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \nverifyEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Verifica si el correo electrónico de recuperación pertenece a un usuario registrado.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:47\n                        \n                    \n\n            \n                \n                    Fecha de nacimiento del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:23\n                        \n                    \n\n            \n                \n                    Correo electrónico del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:65\n                        \n                    \n\n            \n                \n                    Mensaje de error para el correo electrónico.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:77\n                        \n                    \n\n            \n                \n                    Indicador de si el correo electrónico es válido.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:41\n                        \n                    \n\n            \n                \n                    Nombre completo del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:83\n                        \n                    \n\n            \n                \n                    Indicador de si el usuario es adulto.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:71\n                        \n                    \n\n            \n                \n                    Mensaje de error para el inicio de sesión.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:29\n                        \n                    \n\n            \n                \n                    Contraseña del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:35\n                        \n                    \n\n            \n                \n                    Correo electrónico de recuperación.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supervisor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:59\n                        \n                    \n\n            \n                \n                    Supervisor del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:53\n                        \n                    \n\n            \n                \n                    Área de trabajo del usuario.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport * as bootstrap from 'bootstrap';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\n/**\n * Componente para la página de inicio de sesión.\n * @class\n */\nexport class LoginComponent {\n  /**\n   * Correo electrónico del usuario.\n   * @type {string}\n   */\n  email: string = '';\n\n  /**\n   * Contraseña del usuario.\n   * @type {string}\n   */\n  password: string = '';\n\n  /**\n   * Correo electrónico de recuperación.\n   * @type {string}\n   */\n  recoveryEmail: string = '';\n\n  /**\n   * Nombre completo del usuario.\n   * @type {string}\n   */\n  fullName: string = '';\n\n  /**\n   * Fecha de nacimiento del usuario.\n   * @type {string}\n   */\n  birthDate: string = '';\n\n  /**\n   * Área de trabajo del usuario.\n   * @type {string}\n   */\n  workArea: string = '';\n\n  /**\n   * Supervisor del usuario.\n   * @type {string}\n   */\n  supervisor: string = '';\n\n  /**\n   * Mensaje de error para el correo electrónico.\n   * @type {string}\n   */\n  emailError: string = '';\n\n  /**\n   * Mensaje de error para el inicio de sesión.\n   * @type {string}\n   */\n  loginError: string = '';\n\n  /**\n   * Indicador de si el correo electrónico es válido.\n   * @type {boolean}\n   */\n  emailValid: boolean = true;\n\n  /**\n   * Indicador de si el usuario es adulto.\n   * @type {boolean}\n   */\n  isAdult: boolean = true;\n\n  /**\n   * Constructor del componente.\n   * @param {AuthService} authService - Servicio de autenticación.\n   */\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Maneja el envío del formulario de inicio de sesión.\n   * @param {NgForm} form - El formulario de inicio de sesión.\n   * @returns {void}\n   */\n  onSubmit(form: NgForm): void {\n    if (form.valid) {\n      const success = this.authService.login(this.email, this.password);\n      if (!success) {\n        this.loginError = 'Credenciales incorrectas';\n      } else {\n        this.loginError = 'Credenciales inválidas. Por favor, intente de nuevo.';\n      }\n    }\n  }\n\n  /**\n   * Verifica si el correo electrónico de recuperación pertenece a un usuario registrado.\n   * @returns {void}\n   */\n  verifyEmail(): void {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const user = users.find((user: any) => user.email === this.recoveryEmail);\n\n    if (user) {\n      this.showStep(2);\n    } else {\n      this.emailError = 'Este correo no pertenece a la empresa.';\n      this.emailValid = false;\n    }\n  }\n\n  /**\n   * Envía una notificación para la recuperación de cuenta.\n   * @param {NgForm} form - El formulario de notificación.\n   * @returns {void}\n   */\n  sendNotification(form: NgForm): void {\n    if (form.valid && this.isAdult) {\n      // Guardar notificación en el local storage\n      const notifications = JSON.parse(localStorage.getItem('notifications') || '[]');\n      notifications.push({\n        id: Date.now(), // Genera un ID único basado en la marca de tiempo\n        status: 'pending',\n        solicitadaPor: this.fullName,\n        email: this.recoveryEmail,\n        birthDate: this.birthDate,\n        workArea: this.workArea,\n        supervisor: this.supervisor\n      });\n      localStorage.setItem('notifications', JSON.stringify(notifications));\n\n      alert('Notificación enviada al administrador.');\n      this.showStep(3);\n    } else {\n      form.form.markAllAsTouched();\n    }\n  }\n\n  /**\n   * Muestra el paso especificado en el formulario de recuperación.\n   * @param {number} step - El número de paso a mostrar.\n   * @returns {void}\n   */\n  showStep(step: number): void {\n    for (let i = 1; i = 18;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          Correo electrónico\n          \n          \n            Por favor, ingrese su correo electrónico.\n          \n        \n        \n          Contraseña\n          \n          \n            Por favor, ingrese su contraseña.\n          \n        \n        Iniciar sesión\n        ¿Olvidaste tu contraseña?\n        {{ loginError }}\n      \n    \n  \n\n\n\n  \n    \n      \n        Recuperar Contraseña\n        \n      \n      \n        \n        \n          Paso 1: Verificación de Correo Electrónico\n          \n            \n              Correo electrónico\n              \n              \n                Por favor, ingrese su correo electrónico.\n              \n              {{ emailError }}\n            \n            Siguiente\n          \n        \n        \n        \n          Paso 2: Información Adicional\n          \n            \n              Nombre Completo\n              \n              \n                Por favor, ingrese su nombre completo.\n              \n            \n            \n              Fecha de Nacimiento\n              \n              \n                Por favor, ingrese su fecha de nacimiento.\n              \n              Debe ser mayor de 18 años.\n            \n            \n              Área de Trabajo\n              \n              \n                Por favor, ingrese su área de trabajo.\n              \n            \n            \n              Jefe a Cargo\n              \n              \n                Por favor, ingrese el nombre de su jefe a cargo.\n              \n            \n            Enviar\n          \n        \n        \n        \n          Paso 3: Confirmación\n          Se ha enviado una notificación para realizar el cambio de contraseña. Un administrador se contactará con usted.\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                body {\n  font-family: Arial, sans-serif;\n}\n\n.login-container-wrapper {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(../../assets/img/fondos/Inicio.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n}\n\n.login-container {\n  background-color: #ffffffec;\n  padding: 2rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 50%;\n}\n\n.logo {\n  flex: 1;\n  text-align: center;\n}\n\n.logo img {\n  width: 250px;\n}\n\n.form-container {\n  flex: 2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Correo electrónico                                Por favor, ingrese su correo electrónico.                                    Contraseña                                Por favor, ingrese su contraseña.                          Iniciar sesión        ¿Olvidaste tu contraseña?        {{ loginError }}                                Recuperar Contraseña                                              Paso 1: Verificación de Correo Electrónico                                    Correo electrónico                                            Por favor, ingrese su correo electrónico.                            {{ emailError }}                        Siguiente                                            Paso 2: Información Adicional                                    Nombre Completo                                            Por favor, ingrese su nombre completo.                                                    Fecha de Nacimiento                                            Por favor, ingrese su fecha de nacimiento.                            Debe ser mayor de 18 años.                                      Área de Trabajo                                            Por favor, ingrese su área de trabajo.                                                    Jefe a Cargo                                            Por favor, ingrese el nombre de su jefe a cargo.                                      Enviar                                            Paso 3: Confirmación          Se ha enviado una notificación para realizar el cambio de contraseña. Un administrador se contactará con usted.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de la barra de navegación.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                currentOpenDropdown\n                            \n                            \n                                isSidebarCollapsed\n                            \n                            \n                                pendingNotificationsCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkScreenSize\n                            \n                            \n                                isLoginPage\n                            \n                            \n                                isOnDashboard\n                            \n                            \n                                isRoleAllowed\n                            \n                            \n                                logout\n                            \n                            \n                                navigateToHome\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleDropdown\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:44\n                            \n                        \n\n                \n                    \n                            Crea una instancia de NavbarComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de navegación.\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de notificaciones.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \ncheckScreenSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Verifica el tamaño de la pantalla para determinar si el sidebar debe estar colapsado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoginPage\n                        \n                    \n                \n            \n            \n                \nisLoginPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Verifica si la URL actual es la página de inicio de sesión.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True si la URL actual es la página de inicio de sesión, de lo contrario false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOnDashboard\n                        \n                    \n                \n            \n            \n                \nisOnDashboard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Verifica si la URL actual corresponde a un dashboard.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True si la URL actual es de un dashboard, de lo contrario false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRoleAllowed\n                        \n                    \n                \n            \n            \n                \nisRoleAllowed(allowedRoles: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Verifica si el rol del usuario está permitido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                allowedRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Roles permitidos.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True si el rol está permitido, de lo contrario false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario y lo redirige a la página de inicio de sesión.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToHome\n                        \n                    \n                \n            \n            \n                \nnavigateToHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Navega a la página principal según el rol del usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura las suscripciones necesarias.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown(dropdownId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:179\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad de un dropdown.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dropdownId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del dropdown a alternar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSidebar\n                        \n                    \n                \n            \n            \n                \ntoggleSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Alterna el estado del sidebar entre colapsado y expandido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:55\n                        \n                    \n\n            \n                \n                    Servicio de autenticación.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentOpenDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:44\n                        \n                    \n\n            \n                \n                    ID del dropdown actualmente abierto.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSidebarCollapsed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:36\n                        \n                    \n\n            \n                \n                    Estado del sidebar (colapsado o no).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingNotificationsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:28\n                        \n                    \n\n            \n                \n                    Número de notificaciones pendientes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Router } from '@angular/router';\nimport { NotificationService } from '../service/notificacion.service';\n\n/**\n * Componente de la barra de navegación.\n *\n * @export\n * @class NavbarComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  standalone: true,\n  imports: [CommonModule, RouterModule]\n})\nexport class NavbarComponent implements OnInit {\n  /**\n   * Número de notificaciones pendientes.\n   *\n   * @type {number}\n   * @memberof NavbarComponent\n   */\n  pendingNotificationsCount: number = 0;\n\n  /**\n   * Estado del sidebar (colapsado o no).\n   *\n   * @type {boolean}\n   * @memberof NavbarComponent\n   */\n  isSidebarCollapsed = false;\n\n  /**\n   * ID del dropdown actualmente abierto.\n   *\n   * @type {(string | null)}\n   * @memberof NavbarComponent\n   */\n  currentOpenDropdown: string | null = null;\n\n  /**\n   * Crea una instancia de NavbarComponent.\n   * \n   * @param {AuthService} authService Servicio de autenticación.\n   * @param {Router} router Servicio de navegación.\n   * @param {NotificationService} notificationService Servicio de notificaciones.\n   * @memberof NavbarComponent\n   */\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private notificationService: NotificationService \n  ) {}\n\n  /**\n   * Inicializa el componente y configura las suscripciones necesarias.\n   *\n   * @memberof NavbarComponent\n   */\n  ngOnInit(): void {\n    this.notificationService.pendingCount$.subscribe(count => {\n      this.pendingNotificationsCount = count;\n    });\n\n    this.checkScreenSize();\n    window.addEventListener('resize', this.checkScreenSize.bind(this));\n  }\n\n  /**\n   * Verifica el tamaño de la pantalla para determinar si el sidebar debe estar colapsado.\n   *\n   * @memberof NavbarComponent\n   */\n  checkScreenSize(): void {\n    const screenWidth = window.innerWidth;\n    this.isSidebarCollapsed = screenWidth \n    \n\n    \n        \n  \n    \n      \n    \n    ERP\n    \n      \n        \n         0\" class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\n          {{ pendingNotificationsCount }}\n          unread messages\n        \n      \n    \n    \n    \n      \n        \n        \n          {{ authService.getCurrentUser()?.firstName }} {{ authService.getCurrentUser()?.lastName }}\n          {{ authService.getCurrentUser()?.role }}\n        \n      \n    \n  \n\n\n\n  \n    \n    PRAXA INGENIERIA SPA\n  \n  \n    \n      \n         Inicio\n      \n    \n    \n      \n         Bodega\n      \n      \n    \n    \n      \n         Crear Producto\n      \n      \n         Ingreso a Bodega\n      \n      \n         Salida de Bodega\n      \n      \n         Traslado de Bodega\n      \n      \n         Historial\n      \n    \n    \n      \n         Compras\n      \n      \n    \n    \n      \n         Órdenes de Compra\n      \n      \n         Recepción de Facturas\n      \n    \n    \n      \n         Cuenta\n      \n    \n    \n      \n         Salir\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .custom-navbar {\n  background-color: #ffffff;\n  border-bottom: 1px solid #e5e5e5;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.navbar-brand {\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.nav-item .nav-link {\n  color: #000;\n}\n\n.nav-item .nav-link .bi-bell {\n  font-size: 1.5rem;\n}\n\n.dropdown-toggle::after {\n  display: none;\n}\n\n.vr {\n  border-left: 1px solid #e5e5e5;\n  height: 40px;\n}\n\n.company-logo {\n  width: 50px;\n  height: auto;\n}\n\n.sidebar-header h4 {\n  margin: 0;\n}\n\n.list-group-item-action {\n  cursor: pointer;\n}\n\n.list-group-item-action i {\n  margin-right: 10px;\n}\n\n#sidebar {\n  width: 60px;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  padding-top: 70px;\n  transition: width 0.3s ease-in-out;\n  overflow-x: hidden;\n  background-color: #f5f7fa; /* Fondo similar al de Chipax */\n}\n\n#sidebar:hover {\n  width: 280px;\n}\n\n#sidebar .sidebar-header {\n  background-color: #354a5f; /* Color del encabezado */\n  color: #ffffff; /* Color del texto en el encabezado */\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#sidebar .sidebar-header img {\n  margin-right: 10px;\n}\n\n#sidebar .sidebar-header h6 {\n  display: none;\n}\n\n#sidebar:hover .sidebar-header h6 {\n  display: block;\n}\n\n#sidebar .list-group-item {\n  text-align: center;\n  padding: 1rem;\n  border: none; /* Quitar líneas divisorias */\n}\n\n#sidebar .list-group-item:hover,\n#sidebar .list-group-item.active {\n  background-color: #e9ecef; /* Fondo similar al de Chipax */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Sombreado */\n  border-radius: 4px; /* Bordes redondeados */\n}\n\n#sidebar:hover .list-group-item {\n  text-align: left;\n}\n\n#sidebar .list-group-item i {\n  font-size: 1.25rem;\n  margin-right: 0;\n}\n\n#sidebar .list-group-item .bi-chevron-down {\n  display: none;\n}\n\n#sidebar:hover .list-group-item i {\n  margin-right: 10px;\n}\n\n#sidebar:hover .list-group-item .bi-chevron-down {\n  display: inline-block;\n}\n\n#sidebar .list-group-item span {\n  display: none;\n}\n\n#sidebar:hover .list-group-item span {\n  display: inline;\n  font-family: 'Roboto', sans-serif; /* Fuente similar a la de Chipax */\n  font-size: 0.9rem;\n  color: #4a4a4a;\n}\n\n.navbar-text {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n}\n\n.navbar-text .text-success {\n  margin-top: -5px;\n}\n\n.dropdown-menu-end {\n  min-width: 200px;\n}\n\n#page-content-wrapper {\n  margin-left: 90px;\n  transition: margin-left 0.3s ease-in-out;\n}\n\n#sidebar:hover ~ #page-content-wrapper {\n  margin-left: 280px;\n}\n\n.sidebar-header {\n  transition: all 0.3s ease-in-out;\n  border-bottom: none;\n}\n\n.sidebar:hover .sidebar-header {\n  display: flex;\n  justify-content: center;\n}\n\n.sidebar-header img {\n  width: 40px;\n  height: auto;\n  margin-left: 5px;\n}\n\n.sidebar:hover .sidebar-header img {\n  width: 50px;\n  height: auto;\n}\n\n.main-content {\n  margin-left: 90px;\n  transition: margin-left 0.3s ease-in-out;\n}\n\n.sidebar:hover ~ .main-content {\n  margin-left: 280px;\n}\n\n#sidebar .list-group-item {\n  position: relative;\n}\n\n#sidebar .list-group-item i {\n  width: 100%;\n  text-align: center;\n}\n\n#sidebar:hover .list-group-item i {\n  width: auto;\n  text-align: left;\n}\n\n#sidebar .list-group-item .bi-chevron-down {\n  position: absolute;\n  right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ERP                           0\" class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">          {{ pendingNotificationsCount }}          unread messages                                                          {{ authService.getCurrentUser()?.firstName }} {{ authService.getCurrentUser()?.lastName }}          {{ authService.getCurrentUser()?.role }}                              PRAXA INGENIERIA SPA                       Inicio                             Bodega                                   Crear Producto                     Ingreso a Bodega                     Salida de Bodega                     Traslado de Bodega                     Historial                             Compras                                   Órdenes de Compra                     Recepción de Facturas                             Cuenta                             Salir            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificacionesComponent.html":{"url":"components/NotificacionesComponent.html","title":"component - NotificacionesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificacionesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notificaciones/notificaciones.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notificaciones\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./notificaciones.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notificaciones.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isBodega\n                            \n                            \n                                notifications\n                            \n                            \n                                pendingNotificationsCount\n                            \n                            \n                                selectedNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptModification\n                            \n                            \n                                closeModal\n                            \n                            \n                                getStatusClass\n                            \n                            \n                                hasChanged\n                            \n                            \n                                loadNotifications\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                rejectModification\n                            \n                            \n                                saveNotifications\n                            \n                            \n                                translateStatus\n                            \n                            \n                                updatePendingNotificationsCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, productService: ProductService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notificaciones/notificaciones.component.ts:89\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de autenticación.\n\n\n                                                        \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                    ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de productos.\n\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de notificaciones.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptModification\n                        \n                    \n                \n            \n            \n                \nacceptModification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Acepta la modificación del producto en la notificación seleccionada.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:193\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de notificación.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatusClass\n                        \n                    \n                \n            \n            \n                \ngetStatusClass(status: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:227\n                        \n                    \n\n\n            \n                \n                        Obtiene la clase CSS correspondiente al estado de la notificación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEstado de la notificación.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nClase CSS.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasChanged\n                        \n                    \n                \n            \n            \n                \nhasChanged(field)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:184\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo específico ha cambiado en la notificación seleccionada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCampo a verificar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nVerdadero si el campo ha cambiado, falso en caso contrario.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNotifications\n                        \n                    \n                \n            \n            \n                \nloadNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Carga las notificaciones desde el servicio de productos.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(notification: Notification)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Abre el modal de notificación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                notification\n                                            \n                                                            Notification\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNotificación a mostrar en el modal.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rejectModification\n                        \n                    \n                \n            \n            \n                \nrejectModification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Rechaza la modificación del producto en la notificación seleccionada.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveNotifications\n                        \n                    \n                \n            \n            \n                \nsaveNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Guarda las notificaciones actualizadas.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateStatus\n                        \n                    \n                \n            \n            \n                \ntranslateStatus(status: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:208\n                        \n                    \n\n\n            \n                \n                        Traduce el estado de la notificación al español.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEstado de la notificación.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nEstado traducido.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePendingNotificationsCount\n                        \n                    \n                \n            \n            \n                \nupdatePendingNotificationsCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Actualiza el contador de notificaciones pendientes.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isBodega\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:82\n                        \n                    \n\n            \n                \n                    Indica si es bodega.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Notification[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:68\n                        \n                    \n\n            \n                \n                    Lista de notificaciones.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingNotificationsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:89\n                        \n                    \n\n            \n                \n                    Contador de notificaciones pendientes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Notification | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:75\n                        \n                    \n\n            \n                \n                    Notificación seleccionada.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product } from '../service/product.service';\nimport { NotificationService } from '../service/notificacion.service';\nimport { Modal } from 'bootstrap';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Interfaz para representar una notificación.\n * @interface\n */\ninterface Notification {\n  /**\n   * Identificador único de la notificación.\n   * @type {number}\n   */\n  id: number;\n\n  /**\n   * Estado de la notificación (e.g., pending, accepted, rejected).\n   * @type {string}\n   */\n  status: string;\n\n  /**\n   * Mensaje descriptivo de la notificación.\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * Nombre de la persona que solicitó la notificación.\n   * @type {string}\n   */\n  solicitadaPor: string;\n\n  /**\n   * Producto original antes de la modificación.\n   * @type {Partial}\n   */\n  productoOriginal: Partial;\n\n  /**\n   * Cambios solicitados en el producto.\n   * @type {Partial}\n   */\n  cambiosSolicitados: Partial;\n}\n\n@Component({\n  selector: 'app-notificaciones',\n  templateUrl: './notificaciones.component.html',\n  styleUrls: ['./notificaciones.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\n/**\n * Componente para gestionar las notificaciones.\n * @class\n * @implements {OnInit}\n */\nexport class NotificacionesComponent implements OnInit {\n  /**\n   * Lista de notificaciones.\n   * @type {Notification[]}\n   * @memberof NotificacionesComponent\n   */\n  notifications: Notification[] = [];\n\n  /**\n   * Notificación seleccionada.\n   * @type {(Notification | null)}\n   * @memberof NotificacionesComponent\n   */\n  selectedNotification: Notification | null = null;\n\n  /**\n   * Indica si es bodega.\n   * @type {boolean}\n   * @memberof NotificacionesComponent\n   */\n  isBodega: boolean = false;\n\n  /**\n   * Contador de notificaciones pendientes.\n   * @type {number}\n   * @memberof NotificacionesComponent\n   */\n  pendingNotificationsCount: number = 0;\n\n  /**\n   * Constructor del componente.\n   * @param {AuthService} authService - Servicio de autenticación.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {NotificationService} notificationService - Servicio de notificaciones.\n   */\n  constructor(private authService: AuthService, private productService: ProductService, private notificationService: NotificationService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.loadNotifications();\n    this.isBodega = this.authService.isBodega();\n  }\n\n  /**\n   * Carga las notificaciones desde el servicio de productos.\n   * @returns {void}\n   */\n  loadNotifications(): void {\n    this.notifications = this.productService.getNotifications();\n    this.updatePendingNotificationsCount();\n  }\n\n  /**\n   * Actualiza el contador de notificaciones pendientes.\n   * @returns {void}\n   */\n  updatePendingNotificationsCount(): void {\n    const count = this.notifications.filter(notification => notification.status === 'pending').length;\n    this.pendingNotificationsCount = count;\n    this.notificationService.setPendingCount(count);\n  }\n\n  /**\n   * Abre el modal de notificación.\n   * @param {Notification} notification - Notificación a mostrar en el modal.\n   * @returns {void}\n   */\n  openModal(notification: Notification): void {\n    this.selectedNotification = notification;\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = new Modal(modalElement);\n      modal.show();\n    }\n  }\n\n  /**\n   * Acepta la modificación del producto en la notificación seleccionada.\n   * @returns {void}\n   */\n  acceptModification(): void {\n    if (this.selectedNotification) {\n      const productCode = this.selectedNotification.productoOriginal.code as string;\n      this.productService.updateProduct(productCode, this.selectedNotification.cambiosSolicitados);\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'accepted');\n      this.selectedNotification.status = 'accepted';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  /**\n   * Rechaza la modificación del producto en la notificación seleccionada.\n   * @returns {void}\n   */\n  rejectModification(): void {\n    if (this.selectedNotification) {\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'rejected');\n      this.selectedNotification.status = 'rejected';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  /**\n   * Guarda las notificaciones actualizadas.\n   * @returns {void}\n   */\n  saveNotifications(): void {\n    this.productService.updateNotifications(this.notifications);\n  }\n\n  /**\n   * Verifica si un campo específico ha cambiado en la notificación seleccionada.\n   * @param {keyof Product} field - Campo a verificar.\n   * @returns {boolean} - Verdadero si el campo ha cambiado, falso en caso contrario.\n   */\n  hasChanged(field: keyof Product): boolean {\n    if (!this.selectedNotification) return false;\n    return this.selectedNotification.productoOriginal[field] !== this.selectedNotification.cambiosSolicitados[field];\n  }\n\n  /**\n   * Cierra el modal de notificación.\n   * @returns {void}\n   */\n  closeModal(): void {\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = Modal.getInstance(modalElement);\n      if (modal) {\n        modal.hide();\n      }\n    }\n  }\n\n  /**\n   * Traduce el estado de la notificación al español.\n   * @param {string | undefined} status - Estado de la notificación.\n   * @returns {string} - Estado traducido.\n   */\n  translateStatus(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'Pendiente';\n      case 'accepted':\n        return 'Aceptado';\n      case 'rejected':\n        return 'Rechazado';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Obtiene la clase CSS correspondiente al estado de la notificación.\n   * @param {string | undefined} status - Estado de la notificación.\n   * @returns {string} - Clase CSS.\n   */\n  getStatusClass(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'text-warning';\n      case 'accepted':\n        return 'text-success';\n      case 'rejected':\n        return 'text-danger';\n      default:\n        return '';\n    }\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Solicitado por\n            Estado\n            Acciones\n          \n        \n        \n          \n            {{ notification.solicitadaPor }}\n            {{ translateStatus(notification.status) }}\n            Ver solicitud\n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n        \n          Solicitado por: {{ selectedNotification?.solicitadaPor }}\n          Estado:  {{ translateStatus(selectedNotification?.status) }}\n\n          Producto original:\n          \n            Código: {{ selectedNotification?.productoOriginal?.code }}\n            Nombre: {{ selectedNotification?.productoOriginal?.name }}\n            Descripción: {{ selectedNotification?.productoOriginal?.description }}\n            Modelo: {{ selectedNotification?.productoOriginal?.model }}\n            Marca: {{ selectedNotification?.productoOriginal?.brand }}\n            Material: {{ selectedNotification?.productoOriginal?.material }}\n            Color: {{ selectedNotification?.productoOriginal?.color }}\n            Familia: {{ selectedNotification?.productoOriginal?.family }}\n            Valor: {{ selectedNotification?.productoOriginal?.value }}\n            Moneda: {{ selectedNotification?.productoOriginal?.currency }}\n            Unidad: {{ selectedNotification?.productoOriginal?.unit }}\n            Ubicación: {{ selectedNotification?.productoOriginal?.location }}\n          \n\n          Cambios solicitados:\n          \n            Nombre: {{ selectedNotification?.cambiosSolicitados?.name }}\n            Descripción: {{ selectedNotification?.cambiosSolicitados?.description }}\n            Modelo: {{ selectedNotification?.cambiosSolicitados?.model }}\n            Marca: {{ selectedNotification?.cambiosSolicitados?.brand }}\n            Material: {{ selectedNotification?.cambiosSolicitados?.material }}\n            Color: {{ selectedNotification?.cambiosSolicitados?.color }}\n            Familia: {{ selectedNotification?.cambiosSolicitados?.family }}\n            Valor: {{ selectedNotification?.cambiosSolicitados?.value }}\n            Moneda: {{ selectedNotification?.cambiosSolicitados?.currency }}\n            Unidad: {{ selectedNotification?.cambiosSolicitados?.unit }}\n            Ubicación: {{ selectedNotification?.cambiosSolicitados?.location }}\n          \n        \n        \n          Aceptar\n          Rechazar\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./notificaciones.component.css\n                \n                @import 'bootstrap-icons/font/bootstrap-icons.css';\n@import 'bootstrap/dist/css/bootstrap.min.css';\n\n/* Estilos generales */\nth, td {\n  text-align: center;\n}\n\n/* Contenedor de la tabla de inventario */\n.inventory-table-container {\n  margin: 80px 15px 15px 15px;\n  padding: 1em;\n  background-color: #ffffff;\n  border: 1px solid #ccc;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  max-height: 850px;\n  overflow-y: auto;\n}\n\n/* Contenedor del título y la barra de búsqueda */\n.caption-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n\n.caption-title {\n  flex: 1;\n}\n\n.search-bar {\n  flex: 2;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.search-bar input {\n  flex: 1;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\n.add-button {\n  flex: 1;\n  text-align: right;\n}\n\n/* Estilos de la tabla */\ntable {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\ntable thead th {\n  background-color: #343a40;\n  color: #ffffff;\n  border-bottom: 2px solid #dee2e6;\n}\n\ntable tbody tr {\n  border-bottom: 1px solid #dee2e6;\n}\n\ntable td {\n  padding: 10px;\n  border-right: 1px solid #dee2e6;\n}\n\ntable td:last-child {\n  border-right: none;\n}\n\ntable tr:last-child td {\n  border-bottom: none;\n}\n\n.table-striped tbody tr:nth-of-type(odd) {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n/* Estilos para el modal */\n#cuentaModal .modal-body {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#cuentaModal .modal-body .d-flex {\n  width: 100%;\n}\n\n#cuentaModal .modal-body .mb-3 h5 {\n  margin-bottom: 0.5rem;\n}\n\n@media (max-width: 576px) {\n  #cuentaModal .modal-body .d-flex {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  #cuentaModal .modal-body .d-flex img {\n    margin-bottom: 1rem;\n  }\n}\n\n/* Ajustes para la barra de título y búsqueda en dispositivos móviles */\n@media (max-width: 768px) {\n  .caption-container {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .add-button {\n    margin-top: 10px;\n    justify-content: flex-start;\n  }\n}\n\n/* Ajustes específicos para dispositivos móviles */\n@media (max-width: 767px) {\n  .caption-container {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .add-button {\n    margin-top: 10px;\n    justify-content: flex-start;\n  }\n\n  .table thead {\n    display: none;\n  }\n\n  .table tbody, .table tr, .table td {\n    display: block;\n    width: 100%;\n  }\n\n  .table tr {\n    margin-bottom: 1rem;\n    border-bottom: 1px solid #dee2e6;\n  }\n\n  .table td {\n    text-align: right;\n    padding-left: 50%;\n    position: relative;\n  }\n\n  .table td::before {\n    content: attr(data-label);\n    position: absolute;\n    left: 0;\n    width: 50%;\n    padding-left: 1rem;\n    font-weight: bold;\n    text-align: left;\n  }\n}\n\n/* Estilos adicionales para la tabla de notificaciones */\n#page-content-wrapper .table {\n  margin-top: 80px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n}\n\n#page-content-wrapper .table th, #page-content-wrapper .table td {\n  border: none;\n  padding: 15px;\n}\n\n#page-content-wrapper .table th {\n  background-color: #ee7712;\n  color: #ecf0f1;\n}\n\n#page-content-wrapper .table tr:nth-child(odd) {\n  background-color: #f2f2f2;\n}\n\n#page-content-wrapper .table tr:hover {\n  background-color: #dcdcdc;\n}\n\n#page-content-wrapper .btn-primary {\n  background-color: #ee7712;\n  border: none;\n}\n\n#page-content-wrapper .btn-primary:hover {\n  background-color: #d3550c;\n}\n\n/* Estilos para el modal de notificaciones */\n#notificationModal .modal-header {\n  border-bottom: none;\n}\n\n#notificationModal .modal-header .btn-close {\n  background-color: transparent;\n}\n\n#notificationModal .modal-body p {\n  margin-bottom: 10px;\n}\n\n#notificationModal .modal-body ul {\n  padding-left: 20px;\n}\n\n#notificationModal .modal-footer {\n  border-top: none;\n}\n\n#notificationModal .btn-success {\n  background-color: #27ae60;\n  border: none;\n}\n\n#notificationModal .btn-danger {\n  background-color: #c0392b;\n  border: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Solicitado por            Estado            Acciones                                                {{ notification.solicitadaPor }}            {{ translateStatus(notification.status) }}            Ver solicitud                                                                                      Solicitado por: {{ selectedNotification?.solicitadaPor }}          Estado:  {{ translateStatus(selectedNotification?.status) }}          Producto original:                      Código: {{ selectedNotification?.productoOriginal?.code }}            Nombre: {{ selectedNotification?.productoOriginal?.name }}            Descripción: {{ selectedNotification?.productoOriginal?.description }}            Modelo: {{ selectedNotification?.productoOriginal?.model }}            Marca: {{ selectedNotification?.productoOriginal?.brand }}            Material: {{ selectedNotification?.productoOriginal?.material }}            Color: {{ selectedNotification?.productoOriginal?.color }}            Familia: {{ selectedNotification?.productoOriginal?.family }}            Valor: {{ selectedNotification?.productoOriginal?.value }}            Moneda: {{ selectedNotification?.productoOriginal?.currency }}            Unidad: {{ selectedNotification?.productoOriginal?.unit }}            Ubicación: {{ selectedNotification?.productoOriginal?.location }}                    Cambios solicitados:                      Nombre: {{ selectedNotification?.cambiosSolicitados?.name }}            Descripción: {{ selectedNotification?.cambiosSolicitados?.description }}            Modelo: {{ selectedNotification?.cambiosSolicitados?.model }}            Marca: {{ selectedNotification?.cambiosSolicitados?.brand }}            Material: {{ selectedNotification?.cambiosSolicitados?.material }}            Color: {{ selectedNotification?.cambiosSolicitados?.color }}            Familia: {{ selectedNotification?.cambiosSolicitados?.family }}            Valor: {{ selectedNotification?.cambiosSolicitados?.value }}            Moneda: {{ selectedNotification?.cambiosSolicitados?.currency }}            Unidad: {{ selectedNotification?.cambiosSolicitados?.unit }}            Ubicación: {{ selectedNotification?.cambiosSolicitados?.location }}                                    Aceptar          Rechazar                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificacionesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notificaciones/notificaciones.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para representar una notificación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cambiosSolicitados\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            productoOriginal\n                                        \n                                \n                                \n                                        \n                                            solicitadaPor\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cambiosSolicitados\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cambiosSolicitados:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cambios solicitados en el producto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador único de la notificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mensaje descriptivo de la notificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productoOriginal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productoOriginal:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Producto original antes de la modificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solicitadaPor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        solicitadaPor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la persona que solicitó la notificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la notificación (e.g., pending, accepted, rejected).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product } from '../service/product.service';\nimport { NotificationService } from '../service/notificacion.service';\nimport { Modal } from 'bootstrap';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Interfaz para representar una notificación.\n * @interface\n */\ninterface Notification {\n  /**\n   * Identificador único de la notificación.\n   * @type {number}\n   */\n  id: number;\n\n  /**\n   * Estado de la notificación (e.g., pending, accepted, rejected).\n   * @type {string}\n   */\n  status: string;\n\n  /**\n   * Mensaje descriptivo de la notificación.\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * Nombre de la persona que solicitó la notificación.\n   * @type {string}\n   */\n  solicitadaPor: string;\n\n  /**\n   * Producto original antes de la modificación.\n   * @type {Partial}\n   */\n  productoOriginal: Partial;\n\n  /**\n   * Cambios solicitados en el producto.\n   * @type {Partial}\n   */\n  cambiosSolicitados: Partial;\n}\n\n@Component({\n  selector: 'app-notificaciones',\n  templateUrl: './notificaciones.component.html',\n  styleUrls: ['./notificaciones.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\n/**\n * Componente para gestionar las notificaciones.\n * @class\n * @implements {OnInit}\n */\nexport class NotificacionesComponent implements OnInit {\n  /**\n   * Lista de notificaciones.\n   * @type {Notification[]}\n   * @memberof NotificacionesComponent\n   */\n  notifications: Notification[] = [];\n\n  /**\n   * Notificación seleccionada.\n   * @type {(Notification | null)}\n   * @memberof NotificacionesComponent\n   */\n  selectedNotification: Notification | null = null;\n\n  /**\n   * Indica si es bodega.\n   * @type {boolean}\n   * @memberof NotificacionesComponent\n   */\n  isBodega: boolean = false;\n\n  /**\n   * Contador de notificaciones pendientes.\n   * @type {number}\n   * @memberof NotificacionesComponent\n   */\n  pendingNotificationsCount: number = 0;\n\n  /**\n   * Constructor del componente.\n   * @param {AuthService} authService - Servicio de autenticación.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {NotificationService} notificationService - Servicio de notificaciones.\n   */\n  constructor(private authService: AuthService, private productService: ProductService, private notificationService: NotificationService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.loadNotifications();\n    this.isBodega = this.authService.isBodega();\n  }\n\n  /**\n   * Carga las notificaciones desde el servicio de productos.\n   * @returns {void}\n   */\n  loadNotifications(): void {\n    this.notifications = this.productService.getNotifications();\n    this.updatePendingNotificationsCount();\n  }\n\n  /**\n   * Actualiza el contador de notificaciones pendientes.\n   * @returns {void}\n   */\n  updatePendingNotificationsCount(): void {\n    const count = this.notifications.filter(notification => notification.status === 'pending').length;\n    this.pendingNotificationsCount = count;\n    this.notificationService.setPendingCount(count);\n  }\n\n  /**\n   * Abre el modal de notificación.\n   * @param {Notification} notification - Notificación a mostrar en el modal.\n   * @returns {void}\n   */\n  openModal(notification: Notification): void {\n    this.selectedNotification = notification;\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = new Modal(modalElement);\n      modal.show();\n    }\n  }\n\n  /**\n   * Acepta la modificación del producto en la notificación seleccionada.\n   * @returns {void}\n   */\n  acceptModification(): void {\n    if (this.selectedNotification) {\n      const productCode = this.selectedNotification.productoOriginal.code as string;\n      this.productService.updateProduct(productCode, this.selectedNotification.cambiosSolicitados);\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'accepted');\n      this.selectedNotification.status = 'accepted';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  /**\n   * Rechaza la modificación del producto en la notificación seleccionada.\n   * @returns {void}\n   */\n  rejectModification(): void {\n    if (this.selectedNotification) {\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'rejected');\n      this.selectedNotification.status = 'rejected';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  /**\n   * Guarda las notificaciones actualizadas.\n   * @returns {void}\n   */\n  saveNotifications(): void {\n    this.productService.updateNotifications(this.notifications);\n  }\n\n  /**\n   * Verifica si un campo específico ha cambiado en la notificación seleccionada.\n   * @param {keyof Product} field - Campo a verificar.\n   * @returns {boolean} - Verdadero si el campo ha cambiado, falso en caso contrario.\n   */\n  hasChanged(field: keyof Product): boolean {\n    if (!this.selectedNotification) return false;\n    return this.selectedNotification.productoOriginal[field] !== this.selectedNotification.cambiosSolicitados[field];\n  }\n\n  /**\n   * Cierra el modal de notificación.\n   * @returns {void}\n   */\n  closeModal(): void {\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = Modal.getInstance(modalElement);\n      if (modal) {\n        modal.hide();\n      }\n    }\n  }\n\n  /**\n   * Traduce el estado de la notificación al español.\n   * @param {string | undefined} status - Estado de la notificación.\n   * @returns {string} - Estado traducido.\n   */\n  translateStatus(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'Pendiente';\n      case 'accepted':\n        return 'Aceptado';\n      case 'rejected':\n        return 'Rechazado';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Obtiene la clase CSS correspondiente al estado de la notificación.\n   * @param {string | undefined} status - Estado de la notificación.\n   * @returns {string} - Clase CSS.\n   */\n  getStatusClass(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'text-warning';\n      case 'accepted':\n        return 'text-success';\n      case 'rejected':\n        return 'text-danger';\n      default:\n        return '';\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para representar a un usuario.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo electrónico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador único del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contraseña del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario en el sistema (e.g., Admin, User).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product, Movimiento } from '../service/product.service';\nimport * as bootstrap from 'bootstrap';\n\n/**\n * Interfaz para representar a un usuario.\n * @interface\n */\ninterface User {\n  /**\n   * Identificador único del usuario.\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Nombre del usuario.\n   * @type {string}\n   */\n  firstName: string;\n\n  /**\n   * Apellido del usuario.\n   * @type {string}\n   */\n  lastName: string;\n\n  /**\n   * Correo electrónico del usuario.\n   * @type {string}\n   */\n  email: string;\n\n  /**\n   * Rol del usuario en el sistema (e.g., Admin, User).\n   * @type {string}\n   */\n  role: string;\n\n  /**\n   * Contraseña del usuario.\n   * @type {string}\n   */\n  password: string;\n}\n\n\n/**\n * Interfaz para representar una bodega.\n * @interface\n */\ninterface Bodega {\n  /**\n   * Nombre de la bodega.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Lista de productos en la bodega.\n   * @type {Product[]}\n   */\n  products: Product[];\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, CommonModule]\n})\n/**\n * Componente del panel de control.\n * @class\n * @implements {OnInit}\n */\nexport class DashboardComponent implements OnInit {\n  /**\n   * Lista de productos disponibles.\n   * @type {Product[]}\n   */\n  products: Product[] = [];\n\n  /**\n   * Lista de todos los productos.\n   * @type {Product[]}\n   */\n  allProducts: Product[] = [];\n\n  /**\n   * Lista de productos filtrados.\n   * @type {Product[]}\n   */\n  filteredProducts: Product[] = [];\n\n  /**\n   * Historial de movimientos.\n   * @type {Movimiento[]}\n   */\n  historial: Movimiento[] = [];\n\n  /**\n   * Índice del producto seleccionado para eliminar.\n   * @type {number}\n   */\n  selectedProductIndexToDelete: number = -1;\n\n  /**\n   * Índice del producto seleccionado para editar.\n   * @type {number}\n   */\n  selectedProductIndexToEdit: number = -1;\n\n  /**\n   * Producto seleccionado.\n   * @type {Product | null}\n   */\n  selectedProduct: Product | null = null;\n\n  /**\n   * Producto seleccionado para salida.\n   * @type {Product | null}\n   */\n  selectedProductSalida: Product | null = null;\n\n  /**\n   * Lista de bodegas.\n   * @type {Bodega[]}\n   */\n  bodegas: Bodega[] = [];\n\n  /**\n   * Bodega seleccionada.\n   * @type {Bodega}\n   */\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n\n  /**\n   * Nombre de la nueva bodega.\n   * @type {string}\n   */\n  newBodegaName: string = '';\n\n  /**\n   * Término de búsqueda de productos.\n   * @type {string}\n   */\n  searchProductTerm: string = '';\n\n  /**\n   * Datos del nuevo producto.\n   * @type {Product}\n   */\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Items de ingreso.\n   * @type {any[]}\n   */\n  ingresoItems: any[] = [];\n\n  /**\n   * Items de salida.\n   * @type {any[]}\n   */\n  salidaItems: any[] = [];\n\n  /**\n   * Cantidad de ingreso.\n   * @type {number}\n   */\n  cantidadIngreso: number = 1;\n\n  /**\n   * Cantidad de salida.\n   * @type {number}\n   */\n  cantidadSalida: number = 1;\n\n  /**\n   * Tipo de documento.\n   * @type {string}\n   */\n  tipoDocumento: string = '';\n\n  /**\n   * Número de documento.\n   * @type {string}\n   */\n  numeroDocumento: string = '';\n\n  /**\n   * Motivo de salida.\n   * @type {string}\n   */\n  motivoSalida: string = '';\n\n  /**\n   * Número de registro de ingreso.\n   * @type {number}\n   */\n  registroNumeroIngreso: number = 0;\n\n  /**\n   * Número de registro de salida.\n   * @type {number}\n   */\n  registroNumeroSalida: number = 0;\n\n  /**\n   * Fecha de hoy.\n   * @type {string}\n   */\n  today: string = '';\n\n  /**\n   * Movimiento seleccionado.\n   * @type {Movimiento | null}\n   */\n  selectedMovimiento: Movimiento | null = null;\n\n  /**\n   * Producto seleccionado para editar.\n   * @type {Product}\n   */\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Producto a eliminar.\n   * @type {Product | null}\n   */\n  productToDelete: Product | null = null;\n\n  /**\n   * Indica si el código del producto ya existe.\n   * @type {boolean}\n   */\n  productCodeExists: boolean = false;\n\n  /**\n   * Datos del nuevo usuario.\n   * @type {User}\n   */\n  newUser: User = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n\n  /**\n   * Contraseña repetida para verificación.\n   * @type {string}\n   */\n  repeatPassword: string = '';\n\n  /**\n   * Error en el registro.\n   * @type {string}\n   */\n  registerError: string = '';\n\n  /**\n   * Éxito en el registro.\n   * @type {string}\n   */\n  registerSuccess: string = '';\n\n  /**\n   * Lista de usuarios.\n   * @type {User[]}\n   */\n  users: User[] = [];\n\n  /**\n   * Lista de usuarios filtrados.\n   * @type {User[]}\n   */\n  filteredUsers: User[] = [];\n\n  /**\n   * Término de búsqueda de usuarios.\n   * @type {string}\n   */\n  searchUserTerm: string = '';\n\n  /**\n   * Usuario seleccionado.\n   * @type {User}\n   */\n  selectedUser: User = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n\n  /**\n   * Items de traslado.\n   * @type {any[]}\n   */\n  trasladoItems: any[] = [];\n\n  /**\n   * Bodega de origen seleccionada para traslado.\n   * @type {Bodega | null}\n   */\n  selectedBodegaOrigen: Bodega | null = null;\n\n  /**\n   * Bodega de destino seleccionada para traslado.\n   * @type {Bodega | null}\n   */\n  selectedBodegaDestino: Bodega | null = null;\n\n  /**\n   * Producto seleccionado para traslado.\n   * @type {Product | null}\n   */\n  selectedProductTraslado: Product | null = null;\n\n  /**\n   * Constructor del componente.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {AuthService} authService - Servicio de autenticación.\n   */\n  constructor(private productService: ProductService, private authService: AuthService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = this.selectedBodega.products;\n    });\n    this.productService.historial$.subscribe(historial => this.historial = historial);\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadUsers();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'Bodega Principal', products: [] });\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n    this.selectedBodegaOrigen = this.bodegas.length > 0 ? this.bodegas[0] : null;\n    this.selectedBodegaDestino = this.bodegas.length > 0 ? this.bodegas[1] : null;\n  }\n\n  /**\n   * Normaliza el código del producto.\n   * @param {string} code - Código del producto.\n   * @returns {string} - Código normalizado.\n   */\n  normalizeCode(code: string): string {\n    return code.trim().toUpperCase();\n  }\n\n  /**\n   * Verifica si un producto existe en la bodega seleccionada.\n   * @param {string} code - Código del producto.\n   * @returns {boolean} - Verdadero si el producto existe, falso en caso contrario.\n   */\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  /**\n   * Convierte el valor de entrada a mayúsculas.\n   * @param {Event} event - Evento de entrada.\n   * @returns {void}\n   */\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  /**\n   * Verifica la existencia del código del producto.\n   * @returns {void}\n   */\n  checkProductCode(): void {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  /**\n   * Registra un nuevo usuario.\n   * @param {NgForm} form - Formulario de usuario.\n   * @returns {void}\n   */\n  onRegister(form: NgForm): void {\n    if (form.valid) {\n      if (this.newUser.password !== this.repeatPassword) {\n        this.registerError = 'Las contraseñas no coinciden.';\n        return;\n      }\n\n      const existingUser = this.users.find(user => user.email === this.newUser.email);\n      if (existingUser) {\n        this.registerError = 'El usuario ya existe. Por favor, intente con otro email.';\n        this.registerSuccess = '';\n        return;\n      }\n\n      this.users.push({ ...this.newUser });\n      localStorage.setItem('users', JSON.stringify(this.users));\n      this.registerSuccess = 'Usuario registrado exitosamente.';\n      this.registerError = '';\n      this.loadUsers();\n      form.resetForm();\n      const userModal = bootstrap.Modal.getInstance(document.getElementById('userModal')!);\n      userModal?.hide();\n    }\n  }\n\n  /**\n   * Carga los usuarios del almacenamiento local.\n   * @returns {void}\n   */\n  loadUsers(): void {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    this.users = users;\n    this.filteredUsers = users;\n  }\n\n  /**\n   * Realiza la búsqueda de un usuario.\n   * @returns {void}\n   */\n  onSearchUser(): void {\n    if (this.searchUserTerm) {\n      this.filteredUsers = this.users.filter(user =>\n        user.firstName.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n        user.lastName.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n        user.email.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n        user.role.toLowerCase().includes(this.searchUserTerm.toLowerCase())\n      );\n    } else {\n      this.filteredUsers = this.users;\n    }\n  }\n\n  /**\n   * Realiza la búsqueda de un producto.\n   * @param {Event} event - Evento de búsqueda.\n   * @returns {void}\n   */\n  onSearchProduct(event: any): void {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  /**\n   * Abre el modal para agregar usuarios.\n   * @returns {void}\n   */\n  openUserModal(): void {\n    const userModal = new bootstrap.Modal(document.getElementById('userModal')!);\n    userModal.show();\n  }\n\n  /**\n   * Guarda los cambios en un usuario.\n   * @param {NgForm} form - Formulario de usuario.\n   * @returns {void}\n   */\n  onSaveUser(form: NgForm): void {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (this.newUser.password !== this.repeatPassword) {\n        this.registerError = 'Las claves no coinciden.';\n        return;\n      }\n\n      const existingUser = this.users.find(user => user.email === this.newUser.email);\n      if (existingUser) {\n        this.registerError = 'El usuario ya existe. Por favor, intente con otro correo.';\n        this.registerSuccess = '';\n        return;\n      }\n\n      this.users.push({ ...this.newUser });\n      localStorage.setItem('users', JSON.stringify(this.users));\n      this.registerSuccess = 'Usuario registrado exitosamente.';\n      this.registerError = '';\n      this.loadUsers();\n      this.resetForm(form, 'user');\n    } else {\n      this.registerError = 'Por favor complete todos los campos correctamente.';\n      const formElement = document.querySelector('form.needs-validation-user');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Visualiza los detalles de un usuario.\n   * @param {User} user - Usuario a visualizar.\n   * @returns {void}\n   */\n  viewUser(user: User): void {\n    this.selectedUser = user;\n    const userInfoModal = new bootstrap.Modal(document.getElementById('userInfoModal')!);\n    userInfoModal.show();\n  }\n\n  /**\n   * Edita un usuario existente.\n   * @param {User} user - Usuario a editar.\n   * @returns {void}\n   */\n  editUser(user: User): void {\n    this.selectedUser = { ...user };\n    const editUserModal = new bootstrap.Modal(document.getElementById('editUserModal')!);\n    editUserModal.show();\n  }\n\n  /**\n   * Guarda los cambios en un usuario editado.\n   * @param {NgForm} form - Formulario de usuario.\n   * @returns {void}\n   */\n  onSaveEditUser(form: NgForm): void {\n    if (form.valid) {\n      const index = this.users.findIndex(u => u.id === this.selectedUser.id);\n      if (index !== -1) {\n        this.users[index] = { ...this.selectedUser };\n        localStorage.setItem('users', JSON.stringify(this.users));\n        this.loadUsers();\n        const editUserModal = bootstrap.Modal.getInstance(document.getElementById('editUserModal')!);\n        editUserModal?.hide();\n      }\n    }\n  }\n\n  /**\n   * Elimina un usuario.\n   * @param {User} user - Usuario a eliminar.\n   * @returns {void}\n   */\n  deleteUser(user: User): void {\n    this.selectedUser = user;\n    const confirmDeleteUserModal = new bootstrap.Modal(document.getElementById('confirmDeleteUserModal')!);\n    confirmDeleteUserModal.show();\n  }\n\n  /**\n   * Confirma la eliminación de un usuario.\n   * @returns {void}\n   */\n  onConfirmDeleteUser(): void {\n    const index = this.users.findIndex(u => u.id === this.selectedUser.id);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      localStorage.setItem('users', JSON.stringify(this.users));\n      this.loadUsers();\n      const confirmDeleteUserModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteUserModal')!);\n      confirmDeleteUserModal?.hide();\n    }\n  }\n\n  /**\n   * Alterna la visibilidad de la contraseña.\n   * @returns {void}\n   */\n  togglePasswordVisibility(): void {\n    const passwordField = document.getElementById('editPassword') as HTMLInputElement;\n    if (passwordField.type === 'password') {\n      passwordField.type = 'text';\n    } else {\n      passwordField.type = 'password';\n    }\n  }\n\n  /**\n   * Abre el modal de confirmación para eliminar un producto.\n   * @param {number} index - Índice del producto a eliminar.\n   * @returns {void}\n   */\n  onDeleteProduct(index: number): void {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  /**\n   * Confirma la eliminación de un producto.\n   * @returns {void}\n   */\n  onConfirmDelete(): void {\n    if (this.selectedProductIndexToDelete !== -1) {\n      this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n      this.saveBodegas();\n      this.selectedProductIndexToDelete = -1;\n      this.productToDelete = null;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  /**\n   * Actualiza un producto existente.\n   * @param {number} index - Índice del producto a actualizar.\n   * @param {Product} product - Datos del producto actualizados.\n   * @returns {void}\n   */\n  onUpdateProduct(index: number, product: Product): void {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  /**\n   * Visualiza la información de un producto.\n   * @param {number} index - Índice del producto a visualizar.\n   * @returns {void}\n   */\n  onViewProductInfo(index: number): void {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  /**\n   * Edita un producto existente.\n   * @param {number} index - Índice del producto a editar.\n   * @returns {void}\n   */\n  onEditProduct(index: number): void {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n\n  /**\n   * Carga las bodegas del almacenamiento local.\n   * @returns {void}\n   */\n  loadBodegas(): void {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas);\n    } else {\n      this.bodegas = [];\n    }\n  }\n\n  /**\n   * Guarda las bodegas en el almacenamiento local.\n   * @returns {void}\n   */\n  saveBodegas(): void {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  /**\n   * Carga todos los productos de todas las bodegas.\n   * @returns {void}\n   */\n  loadAllProducts(): void {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  /**\n   * Selecciona una bodega.\n   * @param {Bodega} bodega - Bodega seleccionada.\n   * @returns {void}\n   */\n  selectBodega(bodega: Bodega): void {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  /**\n   * Guarda los cambios en un producto editado.\n   * @returns {void}\n   */\n  onSaveEditProduct(): void {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      this.selectedProductToEdit.bodega = this.selectedBodega.name;\n      this.selectedBodega.products[this.selectedProductIndexToEdit] = this.selectedProductToEdit;\n      this.saveBodegas();\n      this.selectedProductToEdit = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.selectedProductIndexToEdit = -1;\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      editProductModal?.hide();\n    }\n  }\n\n  /**\n   * Agrega un nuevo producto.\n   * @param {NgForm} form - Formulario de producto.\n   * @returns {void}\n   */\n  onAddProduct(form: NgForm): void {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts();\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Agrega una nueva bodega.\n   * @param {NgForm} form - Formulario de bodega.\n   * @returns {void}\n   */\n  addBodega(form: NgForm): void {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  /**\n   * Restablece el formulario especificado.\n   * @param {NgForm} form - Formulario a restablecer.\n   * @param {'user' | 'product'} type - Tipo de formulario.\n   * @returns {void}\n   */\n  resetForm(form: NgForm, type: 'user' | 'product'): void {\n    form.resetForm();\n    if (type === 'user') {\n      this.newUser = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n      this.repeatPassword = '';\n      this.registerError = '';\n      this.registerSuccess = '';\n    } else if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de ingreso.\n   * @returns {void}\n   */\n  onAddProductoToIngreso(): void {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  /**\n   * Elimina un ítem de la lista de ingreso.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItem(index: number): void {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el ingreso de productos.\n   * @returns {void}\n   */\n  onConfirmarIngreso(): void {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.saveBodegas();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n      const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n      if (ingresoBodegaModal) {\n        ingresoBodegaModal.hide();\n        setTimeout(() => ingresoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Abre el modal para agregar una nueva bodega.\n   * @returns {void}\n   */\n  openAddBodegaModal(): void {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  /**\n   * Agrega un producto a la lista de salida.\n   * @returns {void}\n   */\n  onAddProductoToSalida(): void {\n    if (!this.selectedProductSalida) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.salidaItems.find(item => item.product.code === this.selectedProductSalida!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.salidaItems.push({\n      product: this.selectedProductSalida,\n      cantidad: this.cantidadSalida,\n      tipoDocumento: this.tipoDocumento,\n      numeroDocumento: this.numeroDocumento\n    });\n    this.cantidadSalida = 1;\n  }\n\n  /**\n   * Confirma la salida de productos.\n   * @returns {void}\n   */\n  onConfirmarSalida(): void {\n    this.salidaItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        if (product.stock >= item.cantidad) {\n          product.stock -= item.cantidad;\n          this.productService.updateProduct(product.code, product);\n          this.productService.addMovimiento({\n            tipo: 'Salida',\n            numero: this.registroNumeroSalida,\n            fecha: this.today,\n            documento: `${item.tipoDocumento} ${item.numeroDocumento}`,\n            detalles: this.motivoSalida,\n            items: [{\n              code: item.product.code,\n              name: item.product.name,\n              description: item.product.description,\n              cantidad: item.cantidad\n            }],\n            usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n          });\n        } else {\n          alert(`La cantidad a retirar supera el stock disponible de ${product.name}.`);\n        }\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.saveBodegas();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n      const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n      if (salidaBodegaModal) {\n        salidaBodegaModal.hide();\n        setTimeout(() => salidaBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Elimina un ítem de la lista de salida.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemSalida(index: number): void {\n    this.salidaItems.splice(index, 1);\n  }\n\n  /**\n   * Abre el historial de movimientos.\n   * @returns {void}\n   */\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Visualiza los detalles de un movimiento.\n   * @param {Movimiento} movimiento - Movimiento a visualizar.\n   * @returns {void}\n   */\n  onVerDetallesMovimiento(movimiento: Movimiento): void {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  /**\n   * Vuelve al historial de movimientos.\n   * @returns {void}\n   */\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Agrega un producto a la lista de traslado.\n   * @returns {void}\n   */\n  onAddProductoToTraslado(): void {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n\n  /**\n   * Elimina un ítem de la lista de traslado.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemTraslado(index: number): void {\n    this.trasladoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el traslado de productos.\n   * @returns {void}\n   */\n  onConfirmarTraslado(): void {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n\n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n\n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n\n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n\n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n\n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/area-dashboard/area-dashboard.component.ts\n            \n            component\n            AreaDashboardComponent\n            \n                98 %\n                (66/67)\n            \n        \n        \n            \n                \n                src/app/area-dashboard/area-dashboard.component.ts\n            \n            interface\n            Bodega\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/auditor-dashboard/auditor-dashboard.component.ts\n            \n            component\n            AuditorDashboardComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/bodega-dashboard/bodega-dashboard.component.ts\n            \n            component\n            BodegaDashboardComponent\n            \n                98 %\n                (67/68)\n            \n        \n        \n            \n                \n                src/app/bodega-dashboard/bodega-dashboard.component.ts\n            \n            interface\n            Bodega\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                98 %\n                (83/84)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            interface\n            Bodega\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            interface\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/notificaciones/notificaciones.component.ts\n            \n            component\n            NotificacionesComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/notificaciones/notificaciones.component.ts\n            \n            interface\n            Notification\n            \n                100 %\n                (7/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.3\n        \n            bootstrap : ^5.3.3\n        \n            bootstrap-icons : ^1.11.3\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nErpPraxa\nThis project was generated with Angular CLI version 18.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
