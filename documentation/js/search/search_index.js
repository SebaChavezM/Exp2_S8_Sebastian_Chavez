var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.03,1,0.866]],["body/components/AppComponent.html",[0,0.054,1,1.673,2,1.721,3,0.727,4,0.59,5,1.703,6,1.703,7,0.464,8,2.893,9,0.727,10,0.863,11,2.02,12,0.951,13,0.951,14,3.12,15,1.703,16,1.014,17,1.014,18,4.346,19,0.863,20,0.863,21,0.863,22,3.659,23,1.615,24,2.02,25,4.634,26,0.065,27,3.918,28,0.59,29,0.551,30,0.7,31,0.92,32,1.451,33,0.878,34,3.432,35,3.432,36,1.703,37,3.664,38,4.346,39,0.92,40,0.59,41,2.385,42,3.664,43,0.863,44,0.863,45,1.703,46,1.703,47,2.02,48,2.02,49,1.703,50,2.228,51,1.703,52,0.863,53,1.703,54,1.235,55,1.451,56,2.228,57,1.235,58,1.703,59,1.235,60,0.24,61,1.046,62,1.235,63,1.703,64,1.703,65,1.046,66,1.451,67,1.703,68,1.703,69,0.053,70,0.053]],["title/components/AuditorDashboardComponent.html",[0,0.03,57,0.866]],["body/components/AuditorDashboardComponent.html",[0,0.047,1,0.915,2,1.425,3,0.539,4,0.437,5,1.261,6,1.261,7,0.344,9,0.853,10,0.853,12,1.011,13,0.853,15,1.261,16,0.966,17,0.966,19,0.714,20,0.714,21,0.714,23,0.915,24,1.261,26,0.065,28,0.65,29,0.456,30,0.79,31,0.801,32,1.703,33,1.031,36,2.215,39,0.888,40,0.437,43,0.714,44,0.714,45,2.215,46,1.261,47,1.673,48,1.673,49,1.261,50,1.999,51,1.261,52,0.888,53,1.261,54,0.915,55,1.075,56,1.999,57,1.691,58,2.264,59,0.915,60,0.178,61,0.775,62,0.915,63,1.261,64,1.261,65,0.775,66,1.075,67,1.261,68,1.261,69,0.044,70,0.044,71,1.486,72,3.808,73,3.808,74,1.486,75,1.167,76,1.673,77,1.673,78,0.968,79,1.228,80,1.425,81,0.968,82,1.599,83,0.863,84,1.877,85,0.863,86,1.673,87,1.877,88,2.08,89,1.877,90,1.877,91,1.97,92,1.228,93,3.599,94,3.599,95,0.775,96,2.714,97,1.606,98,3.599,99,2.842,100,0.863,101,2.842,102,2.211,103,1.877,104,0.863,105,1.641,106,2.714,107,1.213,108,1.97,109,1.673,110,2.842,111,0.863,112,2.842,113,1.031,114,1.153,115,1.031,116,1.673,117,2.714,118,2.842,119,1.425,120,2.842,121,1.999,122,2.138,123,2.842,124,1.425,125,1.425,126,1.673,127,1.673,128,1.031,129,2.714,130,1.425,131,1.999,132,1.36,133,2.138,134,1.031,135,1.028,136,1.028,137,1.673,138,1.313,139,1.641,140,2.714,141,1.673,142,2.714,143,2.714,144,1.278,145,0.539,146,0.915,147,0.915,148,1.028,149,0.968,150,1.075,151,1.261,152,1.673,153,1.877,154,1.673,155,1.261,156,1.767,157,1.261,158,1.261,159,1.261,160,1.261,161,2.714,162,0.651,163,1.261,164,0.651,165,1.261,166,1.261,167,3.599,168,1.703,169,3.395,170,3.395,171,1.999,172,3.599,173,1.673,174,3.599,175,3.599,176,1.673,177,3.599,178,3.599,179,2.842,180,3.599,181,2.842,182,3.599,183,1.425,184,3.599,185,1.028,186,3.599,187,2.842,188,3.599,189,1.425,190,3.599,191,2.842,192,3.599,193,3.599,194,2.842,195,3.599,196,3.599,197,2.842,198,2.842,199,1.213,200,2.211,201,1.97,202,2.714,203,2.143,204,2.143,205,2.913,206,2.343,207,1.97,208,1.486,209,1.97,210,1.486,211,1.486,212,2.629,213,2.343,214,2.714,215,1.767,216,1.767,217,2.143,218,2.143,219,1.767,220,2.714,221,2.714,222,2.143,223,1.97,224,1.486,225,1.97,226,1.486,227,0.775,228,1.767,229,1.486,230,1.767,231,3.599,232,1.767,233,2.143,234,2.211,235,2.714,236,1.767,237,2.714,238,1.261]],["title/interfaces/Bodega.html",[60,0.168,239,0.325]],["body/interfaces/Bodega.html",[0,0.028,3,0.313,4,0.254,7,0.2,9,0.838,10,0.483,11,1.851,12,1.019,13,0.96,16,0.313,17,0.313,19,0.313,20,0.313,21,0.313,26,0.065,28,0.694,29,0.308,30,0.81,31,0.956,33,0.867,39,0.758,40,0.254,43,0.483,44,0.483,45,2.395,52,0.915,54,1.739,55,1.178,60,0.333,69,0.03,70,0.03,74,0.863,75,1.15,76,0.733,77,0.733,78,0.584,79,0.849,80,0.625,81,0.584,82,0.964,83,0.378,84,0.733,85,0.378,86,0.733,87,0.733,88,1.962,89,0.733,90,0.733,92,0.45,97,1.219,99,1.245,100,0.916,101,1.245,104,0.584,105,1.521,107,0.532,108,1.333,109,1.555,110,1.245,111,0.584,112,1.245,113,1.15,115,0.802,116,0.733,118,1.245,119,1.513,120,1.245,121,1.132,122,1.383,123,1.245,124,1.325,125,0.964,126,1.132,127,0.733,128,1.173,130,1.178,131,0.733,132,1.446,133,2.004,134,1.068,135,1.316,136,1.032,137,1.962,138,1.272,139,1.706,141,0.733,144,1.392,145,0.313,146,0.532,147,0.532,148,0.695,149,1.144,150,0.625,151,0.733,152,0.733,153,1.68,154,1.132,155,0.733,157,0.733,158,0.733,159,0.733,160,1.383,162,1.198,163,0.733,164,0.986,165,0.733,166,0.733,168,1.629,171,1.776,173,0.733,176,1.383,183,1.432,185,1.032,189,0.964,227,1.091,239,0.308,240,0.625,241,1.245,242,1.245,243,1.333,244,1.479,245,1.333,246,1.003,247,1.851,248,2.439,249,1.032,250,0.45,251,1.245,252,1.132,253,0.863,254,1.68,255,1.628,256,2.092,257,0.863,258,1.538,259,1.628,260,0.863,261,1.962,262,0.863,263,2.311,264,1.513,265,0.863,266,1.628,267,0.863,268,1.132,269,1.333,270,0.863,271,2.004,272,1.979,273,1.68,274,1.432,275,1.316,276,1.979,277,1.68,278,1.979,279,1.912,280,0.863,281,0.863,282,2.181,283,0.863,284,0.863,285,1.979,286,1.628,287,0.863,288,1.628,289,0.863,290,0.863,291,0.863,292,1.333,293,0.863,294,0.863,295,1.555,296,0.733,297,0.863,298,0.863,299,0.863,300,0.863,301,0.532,302,0.955,303,1.979,304,1.979,305,0.955,306,0.863,307,0.695,308,1.962,309,0.863,310,0.863,311,0.863,312,0.863,313,0.863,314,0.863,315,2.178,316,0.45,317,0.532,318,1.628,319,0.863,320,0.863,321,1.831,322,0.863,323,0.863,324,0.863,325,0.863,326,0.821,327,1.333,328,0.863,329,1.628,330,1.333,331,1.628,332,1.628,333,1.245,334,0.863,335,1.333,336,0.863,337,1.333,338,1.628,339,1.333,340,2.181,341,0.863,342,1.502,343,0.863,344,0.863,345,0.863,346,0.695,347,0.532,348,0.532,349,0.532,350,0.532,351,0.863,352,1.333,353,0.863,354,0.863,355,0.863,356,0.863,357,1.132,358,0.863,359,0.863,360,0.863,361,0.863,362,0.863,363,0.863,364,0.863,365,1.333,366,1.333,367,1.003,368,1.585,369,1.936,370,1.628,371,1.628,372,1.245,373,1.027,374,1.577,375,1.577,376,2.435,377,1.577,378,1.577,379,0.863,380,1.831,381,0.863,382,1.628,383,1.333,384,1.831,385,1.333,386,0.863,387,0.863,388,1.831,389,0.863,390,0.863,391,1.245,392,0.863,393,0.863,394,0.625,395,1.333,396,0.863,397,1.923,398,0.863,399,0.863,400,1.628,401,1.831,402,1.333,403,0.863,404,0.863,405,1.178,406,0.863,407,0.863,408,1.333,409,1.245,410,0.964,411,0.863,412,0.863,413,0.863,414,0.863,415,0.863,416,0.863,417,0.863,418,0.863,419,0.863,420,1.577,421,0.863,422,0.863,423,0.863,424,0.863,425,1.027,426,1.027,427,1.027,428,0.863,429,0.863,430,2.855,431,1.383,432,1.68,433,0.863,434,0.733,435,0.733,436,0.863,437,0.863,438,1.333,439,0.863,440,0.863,441,0.863,442,0.863,443,1.333,444,1.333,445,2.092,446,1.333,447,1.628,448,1.333,449,1.628,450,1.831,451,0.625,452,1.383,453,0.733,454,0.863,455,0.863,456,0.863,457,1.628,458,1.333,459,0.863,460,0.863,461,1.245,462,1.577,463,0.863,464,0.863,465,0.863,466,1.333,467,1.333,468,2.092,469,0.863,470,2.252,471,0.863,472,1.628,473,1.628,474,0.863,475,1.333,476,0.863,477,0.863,478,0.863,479,0.863,480,0.863,481,1.831,482,1.628,483,1.333,484,1.628,485,1.628,486,1.979,487,0.863,488,0.863,489,0.863,490,1.333,491,1.333,492,1.333,493,1.333,494,1.178,495,1.628,496,1.628,497,0.863,498,0.863,499,1.333,500,0.863,501,1.333,502,0.863,503,0.863,504,1.628,505,0.863,506,1.628,507,0.863,508,2.641,509,1.245,510,0.863,511,2.349,512,1.245,513,0.863,514,1.333,515,0.863,516,0.863,517,0.863,518,0.863,519,0.863,520,0.863,521,0.863,522,1.245,523,0.863,524,0.863,525,0.863,526,1.245,527,0.863,528,0.863,529,1.333,530,0.863,531,1.333,532,0.863,533,0.863,534,0.863,535,0.625,536,0.863,537,1.628,538,1.333,539,1.333,540,0.863,541,0.863,542,1.333,543,0.863,544,0.863,545,0.863,546,0.863,547,0.863,548,0.863,549,0.863,550,0.863,551,0.863,552,1.628,553,0.863,554,0.863,555,0.863,556,0.863,557,0.863,558,1.577,559,0.863,560,1.628,561,1.628,562,0.863,563,0.863,564,0.863,565,1.333,566,0.863,567,1.333,568,0.863,569,0.863,570,1.628,571,0.863,572,0.863,573,0.863,574,0.863,575,1.333,576,1.333,577,0.863,578,0.863,579,0.863,580,0.863,581,0.863,582,0.863,583,0.863,584,1.333,585,0.863,586,1.333,587,0.863,588,0.863,589,0.863]],["title/interfaces/Bodega-1.html",[60,0.142,239,0.274,258,0.73]],["body/interfaces/Bodega-1.html",[0,0.028,3,0.315,4,0.256,7,0.201,9,0.818,10,0.593,11,1.781,12,1.025,13,0.961,16,0.315,17,0.315,19,0.315,20,0.315,21,0.315,26,0.065,28,0.696,29,0.31,30,0.812,31,0.957,33,0.805,39,0.76,40,0.256,43,0.315,44,0.486,52,0.907,59,0.535,60,0.333,69,0.03,70,0.03,74,0.869,75,1.156,76,0.738,77,0.738,78,0.587,79,0.853,80,0.629,81,0.587,82,0.969,83,0.381,84,0.738,85,0.381,86,0.738,87,0.738,88,1.966,89,0.738,90,0.738,92,0.453,95,0.453,97,1.222,100,0.869,104,0.587,105,1.555,107,0.535,109,1.389,111,0.381,113,1.07,114,1.426,115,1.235,116,0.738,119,1.517,121,0.738,122,1.389,124,1.436,125,0.969,126,1.138,127,0.738,128,1.174,130,0.629,131,0.738,132,1.444,133,1.856,134,1.014,135,1.364,136,0.699,137,1.966,138,1.317,139,1.71,141,0.738,144,1.406,145,0.315,146,0.535,147,0.535,148,0.699,149,1.145,150,0.629,151,0.738,152,0.738,153,1.686,154,1.138,155,0.738,157,0.738,158,0.738,159,0.738,160,1.389,162,1.205,163,0.738,164,1.014,165,0.738,166,0.738,168,1.633,171,1.686,173,0.738,176,1.389,183,1.329,185,0.958,189,0.629,227,0.853,239,0.31,240,0.629,243,1.34,244,1.426,245,1.34,246,1.007,247,1.856,248,2.443,249,1.035,250,0.453,252,1.389,253,0.869,254,1.686,255,1.635,256,2.186,257,0.869,258,1.523,259,1.838,260,0.869,261,1.916,262,0.869,263,2.257,264,1.436,265,0.869,266,1.635,267,0.869,268,1.389,269,1.635,270,0.869,271,1.966,272,1.838,273,1.56,274,1.329,275,1.29,276,1.838,277,1.56,278,1.838,279,1.856,280,0.869,281,0.869,282,2.186,283,0.869,284,0.869,285,1.985,286,1.635,287,0.869,288,1.635,289,0.869,290,0.869,291,0.869,292,1.34,293,0.869,294,0.869,295,1.56,296,0.738,297,0.869,298,0.869,299,0.869,300,0.869,301,0.535,302,0.853,303,1.985,304,1.838,305,0.958,306,0.869,307,0.699,308,1.856,309,0.869,310,0.869,311,0.869,312,0.869,313,0.869,314,0.869,315,1.034,316,0.453,317,0.535,318,1.635,319,0.869,320,0.869,321,1.838,322,0.869,323,0.869,324,0.869,325,0.869,326,0.825,327,1.34,328,0.869,329,1.635,330,1.34,331,1.635,332,1.635,333,1.254,334,0.869,335,1.34,336,0.869,337,1.34,338,1.635,339,1.34,340,2.098,341,0.869,342,1.482,343,0.869,344,0.869,345,0.869,346,0.699,347,0.535,348,0.535,349,0.535,350,0.535,351,0.869,352,1.34,353,0.869,354,0.869,355,0.869,356,0.869,357,0.738,358,0.869,359,0.869,360,0.869,361,0.869,362,0.869,363,0.869,364,0.869,365,1.34,366,1.34,367,1.007,368,1.034,370,1.635,371,1.635,372,1.254,373,1.034,379,0.869,380,1.635,381,0.869,382,1.635,383,1.34,384,1.985,385,1.34,386,0.869,387,0.869,388,1.838,389,0.869,390,0.869,391,1.254,392,0.869,393,0.869,394,0.629,395,0.869,396,0.869,398,0.869,399,0.869,400,1.34,401,1.34,402,1.838,403,0.869,404,0.869,405,1.183,406,0.869,407,0.869,408,1.34,409,1.254,410,0.969,411,0.869,412,0.869,413,0.869,414,0.869,415,0.869,416,0.869,417,0.869,418,0.869,419,0.869,421,0.869,422,0.869,423,0.869,424,0.869,428,1.34,429,0.869,430,2.863,431,1.389,432,1.686,433,0.869,434,0.738,435,0.738,436,0.869,437,0.869,438,1.34,439,0.869,440,0.869,441,0.869,442,0.869,443,1.34,444,1.34,445,2.098,446,1.34,447,1.635,448,1.34,449,1.635,450,1.838,451,0.629,452,1.389,453,0.738,454,0.869,455,0.869,456,0.869,457,1.635,458,1.34,459,0.869,460,0.869,463,0.869,464,0.869,465,0.869,466,1.34,467,1.34,468,2.098,469,0.869,470,2.257,471,0.869,472,1.635,473,1.635,474,0.869,475,1.34,476,0.869,477,0.869,478,0.869,479,0.869,480,0.869,481,1.838,482,1.635,483,1.34,484,1.635,485,1.635,486,1.838,487,0.869,488,0.869,489,0.869,490,1.34,491,1.34,492,1.34,493,1.34,494,1.183,495,1.838,496,1.838,497,0.869,498,0.869,499,1.34,500,0.869,501,1.34,502,0.869,503,0.869,504,1.838,505,0.869,506,1.838,507,0.869,508,2.651,509,1.254,510,0.869,511,2.359,512,1.254,513,0.869,514,1.34,515,0.869,516,0.869,517,0.869,518,0.869,519,0.869,520,0.869,521,0.869,522,1.254,523,0.869,524,0.869,525,0.869,526,1.254,527,0.869,528,0.869,529,1.34,530,0.869,531,1.34,532,0.869,533,0.869,534,0.869,535,0.969,536,0.869,537,1.635,538,1.34,539,1.34,540,0.869,541,0.869,542,1.34,543,0.869,544,0.869,545,0.869,546,0.869,547,0.869,548,0.869,549,0.869,550,0.869,551,0.869,552,1.635,553,0.869,554,0.869,555,0.869,556,0.869,557,0.869,559,0.869,560,1.635,561,1.635,562,0.869,563,0.869,564,0.869,565,1.34,566,0.869,567,1.34,568,0.869,569,0.869,570,1.635,571,0.869,572,0.869,573,0.869,574,0.869,575,1.34,576,1.34,577,0.869,578,0.869,579,0.869,580,0.869,581,0.869,582,0.869,583,0.869,584,1.34,585,0.869,586,1.34,587,0.869,588,0.869,589,0.869,590,1.254,591,1.254,592,2.448,593,3.357,594,1.594,595,2.448,596,1.945,597,1.588,598,1.588,599,1.594,600,1.034,601,1.588,602,0.738,603,1.034,604,1.034,605,1.034,606,1.594,607,1.034,608,1.034,609,1.594,610,1.594,611,0.738,612,1.588,613,1.588,614,1.588,615,1.588,616,1.588,617,1.588,618,1.034,619,1.034,620,1.034,621,2.494,622,1.588,623,1.594,624,1.588,625,2.987,626,1.945,627,2.448,628,1.588,629,1.588,630,2.448,631,1.588,632,1.588,633,2.448,634,1.588,635,1.588,636,2.448,637,1.588,638,1.588,639,2.448,640,1.588,641,1.588,642,2.448,643,1.588,644,1.588,645,2.448,646,1.588,647,1.588,648,2.448,649,1.588,650,1.588,651,2.448,652,1.588,653,1.588,654,2.448,655,1.588,656,1.588,657,2.448,658,1.588,659,1.588,660,1.588,661,0.738,662,1.588,663,0.869,664,0.869,665,0.869,666,1.254,667,0.869,668,1.034,669,1.588,670,1.588]],["title/interfaces/Bodega-2.html",[60,0.142,239,0.274,326,0.73]],["body/interfaces/Bodega-2.html",[0,0.027,3,0.297,4,0.241,7,0.19,9,0.825,10,0.571,11,1.816,12,1.025,13,0.974,14,1.873,16,0.297,17,0.297,19,0.297,20,0.646,21,0.297,26,0.065,28,0.684,29,0.296,30,0.629,31,0.945,33,0.846,39,0.802,40,0.241,43,0.297,44,0.464,52,0.921,60,0.331,61,0.427,69,0.029,70,0.029,75,1.169,76,0.696,77,0.696,78,0.56,79,0.822,80,0.926,81,0.56,82,0.926,83,0.359,84,0.696,85,0.359,86,0.696,87,0.696,88,1.931,89,0.696,90,0.696,92,0.427,95,0.668,97,1.189,100,0.896,104,0.69,105,1.521,107,0.505,109,1.338,111,0.359,113,1.169,114,1.428,115,1.236,116,0.696,119,1.547,121,1.087,122,1.64,124,1.397,125,0.926,126,1.087,127,0.696,128,1.135,130,0.593,131,0.696,132,1.435,133,1.816,134,1.141,135,1.366,136,0.822,137,1.931,138,1.325,139,1.68,141,1.087,144,1.378,145,0.297,146,0.505,147,0.505,148,0.668,149,1.146,151,0.696,152,0.696,153,1.64,154,1.087,155,0.696,156,0.974,157,0.696,158,0.696,159,0.696,160,1.338,162,1.201,163,0.696,164,0.996,165,0.696,166,0.696,168,1.601,171,1.816,173,0.696,176,1.512,183,1.397,185,1.007,189,0.593,199,0.505,227,0.822,239,0.412,240,0.593,244,1.551,246,1.189,247,1.816,248,2.371,249,1.007,250,0.427,252,1.338,253,0.819,254,2.098,255,1.781,256,2.139,257,0.819,258,1.503,259,1.28,260,0.819,261,2.098,262,0.819,263,2.327,264,1.397,265,0.819,266,1.575,267,0.819,268,1.087,269,1.575,270,0.819,271,2.013,272,1.932,273,1.64,274,1.397,275,1.314,276,1.932,277,1.64,278,1.932,279,1.975,280,0.819,281,0.819,282,2.213,283,0.819,284,0.819,285,2.139,286,1.575,287,1.28,288,1.781,289,1.28,290,0.819,291,0.819,292,1.781,293,0.819,294,0.819,295,1.512,296,1.087,297,0.819,298,0.819,299,0.819,300,0.819,301,0.505,302,0.822,303,1.932,304,1.781,305,1.068,306,0.819,307,0.668,308,2.013,309,0.819,310,0.819,311,0.819,312,0.819,313,0.819,314,0.819,316,0.427,317,0.97,318,1.575,319,0.819,320,0.819,321,1.781,322,0.819,323,0.819,324,0.819,325,0.819,326,0.97,327,1.28,328,0.819,329,1.575,330,1.28,331,1.575,332,1.575,334,0.819,335,1.28,336,1.575,337,1.28,338,1.575,339,1.575,340,2.275,341,0.819,342,1.483,343,0.819,344,0.819,345,0.819,346,0.668,347,0.505,348,0.505,349,0.505,350,0.505,351,0.819,352,1.28,353,0.819,354,0.819,355,0.819,356,0.819,357,0.696,358,0.819,359,0.819,360,0.819,361,1.28,362,0.819,363,0.819,364,0.819,365,1.28,366,1.28,367,0.97,370,1.575,371,1.575,379,0.819,380,1.575,381,0.819,382,1.28,383,1.575,384,1.781,385,1.28,386,0.819,387,0.819,388,1.781,389,0.819,390,0.819,392,0.819,393,0.819,394,0.926,395,0.819,396,0.819,398,0.819,399,0.819,400,1.575,401,1.781,402,1.28,403,0.819,404,0.819,405,1.397,406,0.819,407,0.819,408,1.28,410,0.926,411,0.819,412,0.819,413,0.819,414,1.575,415,0.819,416,0.819,417,0.819,418,0.819,419,0.819,421,0.819,422,1.28,423,0.819,424,0.819,425,0.974,426,0.974,427,0.974,428,0.819,429,0.819,431,1.338,432,1.64,433,0.819,434,0.696,435,0.696,436,0.819,437,0.819,438,1.781,439,1.28,440,1.28,441,0.819,442,0.819,443,1.28,444,1.28,445,2.048,446,1.28,447,1.575,448,1.28,449,1.575,450,1.781,451,0.593,452,1.512,453,0.696,454,0.819,455,0.819,456,0.819,457,1.575,458,1.28,459,0.819,460,0.819,463,0.819,464,0.819,465,0.819,466,1.575,467,1.575,468,2.048,469,0.819,470,2.275,471,0.819,472,1.575,473,1.575,474,0.819,475,1.28,476,0.819,477,0.819,478,0.819,479,0.819,480,1.28,481,1.932,482,1.932,483,1.28,484,1.575,485,1.781,486,1.781,487,0.819,488,1.28,489,0.819,490,0.819,491,0.819,492,0.819,493,0.819,494,1.288,495,1.575,496,1.575,497,0.819,498,0.819,499,1.28,500,0.819,501,1.28,502,0.819,503,0.819,504,1.575,505,0.819,506,1.575,507,0.819,510,0.819,513,0.819,514,1.28,515,0.819,516,0.819,517,0.819,518,0.819,519,0.819,520,0.819,521,0.819,523,0.819,524,0.819,525,0.819,527,0.819,528,0.819,529,1.28,530,0.819,531,1.28,532,0.819,533,0.819,534,0.819,535,1.14,536,0.819,537,1.575,538,1.28,539,1.28,540,0.819,541,0.819,542,1.28,543,0.819,544,0.819,545,0.819,546,0.819,547,0.819,548,0.819,549,0.819,550,0.819,551,0.819,552,1.575,553,0.819,554,0.819,555,0.819,556,0.819,557,0.819,559,0.819,560,1.781,561,1.781,562,0.819,563,0.819,564,0.819,565,1.28,566,0.819,567,1.28,568,0.819,569,0.819,570,1.575,571,0.819,572,0.819,573,0.819,574,0.819,575,1.28,576,1.28,577,0.819,578,0.819,579,0.819,580,1.28,581,1.28,582,0.819,583,0.819,584,1.28,585,0.819,586,1.28,587,0.819,588,0.819,589,0.819,594,0.974,596,1.873,602,0.696,603,0.974,604,1.522,605,0.974,606,1.522,607,0.974,608,0.974,609,1.522,610,1.522,611,0.696,618,0.974,619,0.974,620,0.974,621,2.435,671,0.974,672,2.272,673,2.786,674,1.182,675,1.846,676,1.182,677,1.182,678,1.182,679,2.371,680,1.182,681,1.087,682,1.182,683,1.182,684,1.512,685,3.085,686,1.182,687,1.182,688,1.182,689,1.182,690,1.087,691,0.974,692,1.182,693,1.182,694,1.182,695,1.182,696,1.182,697,2.272,698,1.182,699,1.182,700,1.182,701,1.182,702,1.182,703,1.182,704,0.974,705,1.182,706,1.873,707,1.846,708,1.846,709,1.182,710,2.272,711,1.182,712,1.182,713,2.786,714,1.182,715,1.182,716,1.182,717,1.182,718,1.182,719,1.182,720,1.182,721,1.182,722,1.182,723,0.974,724,1.182,725,0.974,726,1.182,727,1.182,728,1.182,729,2.272,730,1.522,731,1.182,732,1.182,733,1.182,734,1.182,735,1.182,736,1.182,737,1.846,738,1.182,739,2.953,740,1.182,741,1.182,742,1.182,743,1.182,744,1.873,745,1.182,746,1.182,747,1.846,748,1.182,749,1.182,750,1.182,751,1.182,752,1.182,753,1.182,754,1.182,755,1.182,756,1.846,757,1.182,758,1.182,759,1.182,760,2.272,761,2.272,762,1.182,763,1.182,764,1.846,765,1.846,766,1.846,767,1.182,768,1.182,769,3.085,770,1.182,771,1.182,772,1.846,773,1.846,774,1.846,775,1.846,776,1.846,777,1.182,778,1.182,779,1.182,780,0.974,781,0.974]],["title/components/LoginComponent.html",[0,0.03,62,0.866]],["body/components/LoginComponent.html",[0,0.042,1,0.752,2,1.246,3,0.443,4,0.359,5,1.037,6,1.037,7,0.282,9,0.829,10,0.724,12,1.03,13,0.903,15,1.037,16,0.93,17,0.93,19,0.624,20,0.903,21,0.624,23,0.752,24,1.037,26,0.065,28,0.359,29,0.399,30,0.791,31,0.984,32,1.877,33,1.136,36,2.304,39,0.786,40,0.359,43,0.443,44,0.624,46,1.037,47,1.463,48,1.463,49,1.037,50,1.841,51,1.037,52,0.884,53,1.037,54,0.752,55,0.883,56,1.841,57,0.752,58,1.037,59,0.752,60,0.146,61,0.637,62,1.335,63,1.037,64,1.037,65,0.637,66,0.883,67,1.037,68,1.037,69,0.039,70,0.039,71,1.221,75,1.183,81,0.874,82,1.444,83,0.754,85,0.754,91,1.723,95,1.041,100,0.754,102,2.286,103,1.941,104,0.754,111,0.535,113,1.213,114,1.353,115,1.178,124,0.883,125,1.444,128,0.949,130,1.246,134,0.754,136,0.898,145,0.443,146,0.752,149,0.949,150,0.883,162,0.949,185,1.403,199,1.061,200,2.49,201,2.62,206,2.899,207,1.723,208,2.168,209,1.996,210,1.723,211,1.723,218,1.761,219,2.048,223,2.286,224,2.438,225,2.566,226,2.286,227,1.237,229,2.286,234,2.532,236,2.048,238,1.463,244,1.335,246,1.061,247,2.149,249,1.299,250,0.637,251,2.484,258,1.229,268,1.037,274,0.883,275,1.131,295,1.695,296,1.841,301,1.335,302,1.272,305,1.131,307,0.637,315,1.452,316,0.898,326,0.752,346,0.898,373,1.452,431,2.014,432,2.014,434,1.037,435,1.463,451,1.654,452,1.941,453,1.841,461,2.484,494,1.935,661,1.037,663,1.221,664,1.221,665,1.723,667,1.221,684,1.463,690,1.841,691,2.578,704,2.578,725,2.961,730,2.373,744,2.048,782,1.761,783,3.297,784,3.646,785,3.146,786,3.96,787,3.96,788,3.646,789,3.646,790,3.646,791,3.646,792,4.176,793,3.646,794,4.334,795,3.96,796,3.146,797,3.96,798,3.146,799,3.146,800,3.146,801,3.96,802,1.452,803,3.146,804,3.146,805,2.23,806,3.146,807,3.146,808,3.516,809,3.651,810,2.23,811,4.785,812,3.701,813,3.146,814,2.23,815,3.146,816,2.048,817,3.146,818,2.23,819,3.96,820,3.146,821,4.548,822,2.23,823,2.23,824,2.23,825,3.646,826,2.899,827,3.646,828,2.23,829,2.23,830,3.146,831,2.23,832,2.23,833,3.646,834,2.23,835,4.887,836,4.857,837,3.96,838,2.23,839,2.23,840,2.23,841,3.96,842,2.23,843,2.23,844,3.146,845,2.23,846,2.23,847,2.23,848,2.23,849,2.23,850,3.146,851,1.723,852,2.23,853,2.23,854,3.146,855,3.146,856,2.23,857,2.23,858,2.23,859,2.23,860,2.23,861,3.646,862,2.23,863,3.146,864,2.23,865,2.23,866,2.23,867,3.146,868,3.146,869,1.452,870,2.23,871,2.23,872,2.23,873,3.146,874,3.146,875,3.146,876,3.146,877,2.23,878,2.23,879,2.23,880,2.23,881,2.23,882,2.23,883,2.23,884,3.96,885,3.146,886,3.146,887,3.146,888,1.761,889,2.821,890,2.23,891,1.761,892,1.761,893,1.452,894,2.373,895,1.761,896,3.115,897,2.23,898,2.23,899,3.146,900,3.297,901,2.23,902,2.048,903,2.23,904,2.23,905,2.484,906,1.452,907,1.452,908,1.452,909,1.452,910,1.452,911,2.484,912,2.484,913,2.23,914,3.127,915,3.297,916,3.297,917,3.127,918,2.048,919,2.23,920,3.146,921,2.578,922,2.23,923,3.146,924,3.146,925,2.23,926,2.23,927,1.452,928,3.146,929,2.23,930,2.879,931,2.23,932,2.23,933,2.23,934,1.452,935,2.048,936,2.23,937,1.452,938,3.96,939,2.048,940,2.048,941,2.23,942,1.761,943,3.146,944,1.761,945,2.23,946,1.452,947,1.452,948,1.761,949,1.761,950,2.23,951,2.23,952,3.127,953,1.761,954,2.23,955,3.146,956,1.761,957,2.23,958,2.23,959,2.23,960,1.761,961,1.761,962,2.23,963,2.23]],["title/components/NavbarComponent.html",[0,0.03,23,0.866]],["body/components/NavbarComponent.html",[0,0.041,1,0.699,2,1.184,3,0.412,4,0.334,5,0.965,6,0.965,7,0.263,9,0.695,10,0.761,12,1.027,13,0.975,15,0.965,16,0.916,17,0.916,19,0.593,20,0.593,21,0.593,22,2.766,23,1.426,24,0.965,26,0.065,28,0.481,29,0.379,30,0.681,31,0.916,32,1.387,33,0.84,34,2.36,35,2.36,36,2.26,39,0.806,40,0.334,41,1.351,43,0.412,44,0.412,46,0.965,47,1.389,48,1.389,49,0.965,50,1.782,51,0.965,52,0.806,53,0.965,54,0.699,55,0.822,56,1.782,57,0.699,58,0.965,59,0.699,60,0.298,61,0.592,62,0.699,63,0.965,64,0.965,65,0.592,66,1.387,67,0.965,68,0.965,69,0.037,70,0.037,71,1.136,75,1.106,78,0.716,79,1,80,1.727,81,0.84,83,0.716,85,0.716,91,1.636,92,1.094,95,1.094,100,0.716,102,1.918,103,1.628,104,1.045,111,0.919,113,1.207,114,1.414,115,1.172,119,1.387,128,0.716,132,0.853,134,1.191,135,0.853,138,0.853,144,1.208,145,0.412,149,0.974,162,0.919,185,1.298,199,1.47,200,2.316,201,2.224,203,2.36,207,1.918,208,1.136,209,2.224,210,1.136,211,2.098,212,1.351,213,1.351,215,1.946,216,1.946,222,2.36,223,2.316,224,2.526,225,2.098,226,1.636,227,0.853,228,2.281,229,2.608,230,3.042,232,2.645,233,1.638,234,2.489,238,1.628,249,1.334,250,0.592,252,0.965,254,1.389,261,1.389,273,0.965,274,0.822,275,1.388,279,1.389,302,1.388,305,1.348,307,0.853,308,1.389,316,1,317,1.007,342,1.292,346,1.318,347,1.504,348,1.504,349,1.504,350,1.504,367,1.007,368,1.946,494,1.945,661,1.389,681,2.027,706,1.946,723,2.281,783,1.638,802,1.351,808,3.817,809,3.524,812,2.36,851,1.136,889,2.754,891,1.638,892,1.638,893,1.946,894,2.645,895,1.638,896,2.495,900,3.026,902,2.281,906,1.946,907,1.946,908,1.351,909,1.946,910,1.946,914,3.026,915,3.026,916,3.026,917,1.638,918,2.281,921,1.946,927,1.351,934,1.946,935,2.754,937,1.946,939,1.351,940,1.351,942,2.36,944,1.638,946,1.351,947,1.351,952,1.638,956,2.36,964,1.638,965,4.231,966,3.503,967,2.989,968,3.503,969,3.503,970,3.503,971,2.645,972,3.833,973,3.503,974,3.833,975,3.833,976,3.833,977,2.989,978,3.833,979,3.833,980,2.989,981,3.503,982,4.546,983,2.959,984,2.989,985,2.989,986,2.075,987,2.989,988,2.989,989,3.341,990,2.989,991,3.503,992,3.503,993,2.075,994,2.281,995,2.075,996,2.075,997,2.075,998,4.863,999,4.863,1000,2.075,1001,2.075,1002,2.989,1003,2.989,1004,2.075,1005,3.833,1006,3.833,1007,2.989,1008,2.989,1009,2.989,1010,2.075,1011,2.989,1012,2.075,1013,2.989,1014,2.075,1015,2.989,1016,2.989,1017,2.989,1018,2.989,1019,2.075,1020,4.463,1021,2.989,1022,3.833,1023,2.989,1024,2.075,1025,2.075,1026,2.075,1027,2.075,1028,2.075,1029,1.351,1030,2.075,1031,1.351,1032,1.351,1033,2.075,1034,2.075,1035,2.075,1036,2.989,1037,2.075,1038,2.075,1039,2.075,1040,3.833,1041,2.075,1042,2.075,1043,2.075,1044,2.075,1045,3.503,1046,2.075,1047,2.075,1048,2.075,1049,2.075,1050,2.075,1051,2.075,1052,2.075,1053,2.075,1054,2.075,1055,2.075,1056,2.989,1057,2.766,1058,2.989,1059,2.989,1060,2.989,1061,2.989,1062,2.989,1063,1.946,1064,2.989,1065,2.989,1066,2.989,1067,2.989,1068,2.989,1069,2.989,1070,2.989,1071,2.989,1072,2.989,1073,2.989,1074,2.989,1075,3.833,1076,2.989,1077,2.989,1078,2.989,1079,2.989,1080,2.36,1081,2.989,1082,2.766,1083,2.075,1084,3.833,1085,4.863,1086,2.075,1087,3.833,1088,2.075,1089,2.075,1090,2.075,1091,2.075,1092,2.989,1093,2.075,1094,3.026,1095,4.984,1096,3.589,1097,4.863,1098,4.863,1099,2.989,1100,2.075,1101,2.075,1102,3.208,1103,2.075,1104,2.075,1105,2.075,1106,2.075,1107,3.026,1108,2.075,1109,2.075,1110,2.989,1111,3.503,1112,3.503,1113,4.672,1114,3.503,1115,2.075,1116,2.989,1117,2.075,1118,2.989,1119,2.075,1120,2.075,1121,2.075,1122,2.075,1123,2.075,1124,2.075,1125,2.075,1126,2.075,1127,2.075,1128,2.075,1129,3.503,1130,3.503,1131,2.989,1132,2.989,1133,2.075,1134,2.075,1135,2.075,1136,2.075,1137,2.36,1138,2.075,1139,1.638,1140,2.075,1141,2.075,1142,1.946,1143,2.989]],["title/components/NotificacionesComponent.html",[0,0.03,65,0.734]],["body/components/NotificacionesComponent.html",[0,0.038,1,0.626,2,1.092,3,0.369,4,0.299,5,0.863,6,0.863,7,0.235,9,0.771,10,0.771,12,1.003,13,0.989,15,0.863,16,0.893,17,0.893,19,0.547,20,0.547,21,0.547,23,0.626,24,0.863,26,0.065,27,1.467,28,0.299,29,0.349,30,0.779,31,0.973,32,1.611,33,0.872,36,2.222,39,0.859,40,0.299,43,0.369,44,0.547,45,1.69,46,0.863,47,1.281,48,1.281,49,0.863,50,1.69,51,0.863,52,0.836,53,0.863,54,0.626,55,0.736,56,1.69,57,0.626,58,0.863,59,0.626,60,0.215,61,0.53,62,0.626,63,0.863,64,0.863,65,1.235,66,1.893,67,0.863,68,0.863,69,0.034,70,0.034,71,1.017,75,1.037,78,0.788,79,1.038,81,0.788,83,0.661,85,0.661,91,1.509,92,1.038,95,0.938,97,1.49,100,0.445,102,2.126,103,1.805,104,1.037,105,1.226,107,0.929,108,1.017,111,0.872,113,1.138,114,1.405,115,1.187,128,0.931,132,1.235,134,1.094,135,0.787,136,1.394,138,0.787,139,1.108,144,1.109,145,0.369,147,0.626,148,0.787,149,1.01,150,0.736,162,0.975,164,0.445,168,1.092,169,2.871,170,2.871,179,2.871,181,2.871,183,1.44,185,1.373,187,2.871,189,1.44,191,2.871,194,2.871,197,2.871,198,3.213,199,1.42,200,2.462,201,2.126,204,1.467,205,3.192,206,2.367,207,2.306,208,1.017,209,2.673,210,1.991,211,2.42,212,1.794,213,1.209,215,2.529,216,2.649,217,2.871,219,1.209,223,2.529,224,2.126,225,2.648,226,1.799,227,1.162,228,2.367,229,2.42,230,2.529,232,2.367,234,2.306,236,2.367,238,1.528,239,0.349,243,1.017,244,0.929,245,1.017,246,1.309,249,1.235,250,0.53,258,1.108,264,1.713,275,1.319,301,0.929,302,1.162,305,1.162,307,0.938,316,0.787,317,0.929,326,0.626,342,1.557,346,0.787,347,0.929,348,0.929,349,0.929,350,0.929,357,0.863,367,0.929,369,1.794,394,1.092,397,2.176,405,1.538,410,1.092,451,1.44,535,1.092,599,2.139,600,1.209,602,1.281,611,1.528,623,2.529,626,1.209,661,0.863,663,2.42,664,1.799,665,1.017,666,2.176,667,1.017,668,1.209,681,2.207,684,1.281,690,0.863,781,1.794,802,1.209,816,3.251,826,1.794,851,1.509,869,2.139,888,3.326,889,1.209,893,2.817,894,1.209,896,2.971,902,1.794,905,1.467,906,1.794,907,1.794,908,2.139,909,2.139,910,1.794,911,1.467,912,2.176,918,1.209,921,2.928,927,1.209,930,2.176,934,1.209,935,2.877,937,1.209,939,2.367,940,2.367,946,1.209,947,1.209,948,1.467,949,1.467,953,3.067,960,2.595,961,1.467,971,2.139,983,2.877,989,1.467,994,1.794,1029,1.209,1031,1.209,1032,1.794,1057,1.467,1063,1.794,1080,2.176,1082,2.176,1094,1.467,1096,2.176,1102,2.871,1137,2.176,1142,2.817,1144,1.209,1145,2.595,1146,2.176,1147,2.595,1148,2.595,1149,2.871,1150,2.871,1151,2.756,1152,2.756,1153,2.871,1154,2.756,1155,2.871,1156,2.871,1157,2.756,1158,2.871,1159,2.756,1160,1.857,1161,2.176,1162,1.857,1163,2.176,1164,3.416,1165,1.857,1166,2.176,1167,2.871,1168,2.871,1169,2.176,1170,2.176,1171,1.857,1172,3.213,1173,2.176,1174,2.871,1175,2.871,1176,2.176,1177,2.176,1178,1.857,1179,1.857,1180,2.176,1181,2.579,1182,1.857,1183,1.857,1184,2.176,1185,1.857,1186,2.176,1187,2.176,1188,1.857,1189,2.176,1190,2.176,1191,2.176,1192,1.857,1193,2.871,1194,2.871,1195,1.857,1196,1.857,1197,1.857,1198,1.467,1199,1.467,1200,1.467,1201,3.067,1202,3.067,1203,1.467,1204,1.467,1205,1.467,1206,2.871,1207,2.595,1208,1.467,1209,1.467,1210,1.467,1211,1.467,1212,1.467,1213,1.467,1214,2.595,1215,1.467,1216,1.467,1217,1.467,1218,1.467,1219,2.871,1220,2.871,1221,2.176,1222,1.467,1223,1.467,1224,1.467,1225,1.467,1226,1.467,1227,1.467,1228,2.176,1229,2.176,1230,2.176,1231,2.176,1232,1.467,1233,2.176,1234,1.467,1235,1.467,1236,1.467,1237,1.467,1238,2.176,1239,3.213,1240,1.467,1241,1.467,1242,1.467,1243,1.467,1244,3.636,1245,2.756,1246,2.756,1247,2.756,1248,2.756,1249,2.756,1250,2.756,1251,2.756,1252,2.756,1253,2.756,1254,2.756,1255,2.756,1256,2.756,1257,2.756,1258,2.756,1259,2.756,1260,2.756,1261,2.756,1262,2.756,1263,2.756,1264,2.756,1265,2.756,1266,2.756,1267,2.756,1268,2.756,1269,2.756,1270,2.756,1271,2.756,1272,2.756,1273,2.756,1274,2.756,1275,1.857,1276,1.857,1277,1.857,1278,2.756,1279,3.636,1280,2.756,1281,2.756,1282,1.857,1283,3.636,1284,2.756,1285,1.857,1286,2.595,1287,3.286,1288,1.857,1289,1.857,1290,1.857,1291,2.756,1292,1.857,1293,3.286,1294,3.286,1295,1.857,1296,2.756,1297,1.857,1298,1.857,1299,2.756,1300,1.857,1301,1.857,1302,3.884,1303,3.286,1304,1.857,1305,1.857,1306,1.857,1307,1.857,1308,1.857,1309,1.857,1310,1.857,1311,1.857,1312,1.857,1313,1.857,1314,1.857,1315,1.857,1316,1.857,1317,1.857,1318,1.857,1319,1.857,1320,4.212,1321,1.857,1322,1.857,1323,1.857,1324,1.857,1325,1.857,1326,1.857]],["title/interfaces/Notification.html",[239,0.325,1181,1.407]],["body/interfaces/Notification.html",[0,0.042,3,0.546,4,0.443,7,0.348,9,0.546,10,0.807,12,1.02,13,1.016,16,0.546,17,0.546,19,0.546,20,0.546,21,0.546,26,0.065,28,0.443,29,0.46,30,0.812,31,1.015,32,1.438,39,0.916,40,0.443,43,0.546,44,0.721,45,2.009,60,0.18,65,1.283,66,1.892,69,0.045,70,0.045,75,1.036,78,0.87,79,1.16,81,0.87,83,0.659,85,0.659,92,0.785,95,0.785,97,1.515,100,0.87,104,1.036,105,1.224,107,0.927,108,1.987,111,0.87,113,1.159,114,1.405,115,1.209,128,1.106,132,1.318,134,1.128,135,0.785,136,1.344,138,0.785,139,1.37,144,1.16,145,0.546,147,0.927,148,0.785,149,1.128,150,1.089,162,1.106,164,0.659,199,1.37,239,0.46,240,1.089,243,1.987,244,1.37,245,1.987,246,1.224,249,1.283,250,0.785,264,1.712,275,0.785,301,0.927,302,1.16,305,1.234,307,1.036,316,0.785,317,1.224,342,1.669,346,0.785,347,0.927,348,0.927,349,0.927,350,0.927,367,0.927,369,1.79,394,1.089,405,1.609,410,1.089,535,1.089,599,2.363,600,2.363,602,1.278,611,1.687,623,2.814,626,2.814,661,2.009,663,2.672,664,2.366,665,2.366,667,2.366,668,2.814,681,2.188,684,1.278,690,1.687,816,3.328,826,1.79,851,1.505,869,1.79,971,1.79,983,2.926,994,1.79,1029,1.79,1031,1.79,1032,2.363,1063,1.79,1144,1.79,1145,2.171,1146,2.171,1147,2.171,1148,2.171,1149,2.171,1150,2.171,1153,2.171,1155,2.171,1156,2.171,1158,2.171,1161,2.171,1163,2.171,1164,3.413,1166,2.171,1167,2.866,1168,2.866,1169,2.171,1170,2.171,1172,3.209,1173,2.171,1174,2.866,1175,2.866,1176,2.171,1177,2.171,1180,2.171,1181,2.672,1184,2.171,1186,2.171,1187,2.171,1189,2.171,1190,2.171,1191,2.171,1193,2.866,1194,2.866,1198,2.866,1199,2.866,1200,2.866,1201,3.645,1202,3.645,1203,2.866,1204,2.866,1205,2.866,1206,3.773,1207,2.866,1208,2.171,1209,2.171,1210,2.171,1211,2.171,1212,2.171,1213,2.171,1214,3.209,1215,2.171,1216,2.171,1217,2.171,1218,2.171,1219,3.413,1220,3.413,1221,2.866,1222,2.171,1223,2.171,1224,2.171,1225,2.171,1226,2.171,1227,2.171,1228,2.866,1229,2.866,1230,2.866,1231,2.866,1232,2.171,1233,2.866,1234,2.171,1235,2.171,1236,2.171,1237,2.171,1238,2.866,1239,3.645,1240,2.171,1241,2.171,1242,2.171,1243,2.171]],["title/interfaces/Proyecto.html",[239,0.325,679,1.407]],["body/interfaces/Proyecto.html",[0,0.027,3,0.295,4,0.24,7,0.188,9,0.823,10,0.569,11,1.812,12,1.025,13,0.967,14,1.866,16,0.295,17,0.295,19,0.295,20,0.643,21,0.295,26,0.065,28,0.683,29,0.295,30,0.668,31,0.967,33,0.843,39,0.801,40,0.24,43,0.295,44,0.462,52,0.895,60,0.329,61,0.425,69,0.029,70,0.029,75,1.178,76,0.692,77,0.692,78,0.558,79,0.818,80,0.922,81,0.558,82,0.922,83,0.357,84,0.692,85,0.357,86,0.692,87,0.692,88,1.734,89,0.692,90,0.692,92,0.425,95,0.665,97,1.186,100,0.843,103,1.082,104,0.687,105,1.501,107,0.502,109,1.332,111,0.357,113,1.178,114,1.428,115,1.236,116,0.692,119,1.544,121,1.082,122,1.636,124,1.393,125,0.922,126,1.082,127,0.692,128,1.133,130,0.589,131,0.692,132,1.434,133,1.812,134,1.133,135,1.371,136,0.818,137,1.928,138,1.312,139,1.673,141,1.082,144,1.376,145,0.295,146,0.502,147,0.502,148,0.665,149,1.145,151,0.692,152,0.692,153,1.636,154,1.082,155,0.692,156,0.969,157,0.692,158,0.692,159,0.692,160,1.332,162,1.201,163,0.692,164,0.994,165,0.692,166,0.692,168,1.598,171,1.812,173,0.692,176,1.507,183,1.393,185,1.005,189,0.589,199,0.502,227,0.818,239,0.411,240,0.589,244,1.549,246,1.36,247,1.812,248,2.367,249,1.005,250,0.425,252,1.332,253,0.815,254,2.095,255,1.775,256,2.134,257,0.815,258,1.501,259,1.274,260,0.815,261,2.095,262,0.815,263,2.323,264,1.393,265,0.815,266,1.569,267,0.815,268,1.082,269,1.569,270,0.815,271,2.01,272,1.926,273,1.636,274,1.393,275,1.312,276,1.926,277,1.636,278,1.926,279,1.972,280,0.815,281,0.815,282,2.209,283,0.815,284,0.815,285,2.367,286,1.569,287,1.274,288,1.926,289,1.274,290,0.815,291,0.815,292,1.775,293,0.815,294,0.815,295,1.507,296,1.332,297,0.815,298,0.815,299,0.815,300,0.815,301,0.502,302,0.818,303,1.926,304,1.775,305,1.065,306,0.815,307,0.665,308,2.01,309,0.815,310,0.815,311,0.815,312,0.815,313,0.815,314,0.815,316,0.425,317,0.966,318,1.569,319,0.815,320,0.815,321,1.775,322,0.815,323,0.815,324,0.815,325,0.815,326,0.966,327,1.274,328,0.815,329,1.569,330,1.274,331,1.569,332,1.569,334,0.815,335,1.274,336,1.569,337,1.274,338,1.569,339,1.569,340,2.271,341,0.815,342,1.481,343,0.815,344,0.815,345,0.815,346,0.665,347,0.502,348,0.502,349,0.502,350,0.502,351,0.815,352,1.274,353,0.815,354,0.815,355,0.815,356,0.815,357,0.692,358,0.815,359,0.815,360,0.815,361,1.274,362,0.815,363,0.815,364,0.815,365,1.274,366,1.274,367,0.966,370,1.569,371,1.569,379,0.815,380,1.569,381,0.815,382,1.274,383,1.569,384,1.775,385,1.274,386,0.815,387,0.815,388,1.775,389,0.815,390,0.815,392,0.815,393,0.815,394,0.922,395,0.815,396,0.815,398,0.815,399,0.815,400,1.569,401,1.775,402,1.274,403,0.815,404,0.815,405,1.393,406,0.815,407,0.815,408,1.274,410,0.922,411,0.815,412,0.815,413,0.815,414,1.569,415,0.815,416,0.815,417,0.815,418,0.815,419,0.815,421,0.815,422,1.274,423,0.815,424,0.815,425,0.969,426,0.969,427,0.969,428,0.815,429,0.815,431,1.332,432,1.636,433,0.815,434,0.692,435,0.692,436,0.815,437,0.815,438,1.775,439,1.274,440,1.274,441,0.815,442,0.815,443,1.274,444,1.274,445,2.043,446,1.274,447,1.569,448,1.274,449,1.569,450,1.775,451,0.589,452,1.507,453,0.692,454,0.815,455,0.815,456,0.815,457,1.569,458,1.274,459,0.815,460,0.815,463,0.815,464,0.815,465,0.815,466,1.569,467,1.569,468,2.043,469,0.815,470,2.271,471,0.815,472,1.569,473,1.569,474,0.815,475,1.274,476,0.815,477,0.815,478,0.815,479,0.815,480,1.274,481,1.926,482,1.926,483,1.274,484,1.569,485,2.134,486,1.775,487,0.815,488,1.274,489,0.815,490,0.815,491,0.815,492,0.815,493,0.815,494,1.284,495,1.569,496,1.569,497,0.815,498,0.815,499,1.274,500,0.815,501,1.274,502,0.815,503,0.815,504,1.569,505,0.815,506,1.569,507,0.815,510,0.815,513,0.815,514,1.274,515,0.815,516,0.815,517,0.815,518,0.815,519,0.815,520,0.815,521,0.815,523,0.815,524,0.815,525,0.815,527,0.815,528,0.815,529,1.274,530,0.815,531,1.274,532,0.815,533,0.815,534,0.815,535,1.135,536,0.815,537,1.569,538,1.274,539,1.274,540,0.815,541,0.815,542,1.274,543,0.815,544,0.815,545,0.815,546,0.815,547,0.815,548,0.815,549,0.815,550,0.815,551,0.815,552,1.569,553,0.815,554,0.815,555,0.815,556,0.815,557,0.815,559,0.815,560,1.775,561,1.775,562,0.815,563,0.815,564,0.815,565,1.274,566,0.815,567,1.274,568,0.815,569,0.815,570,1.569,571,0.815,572,0.815,573,0.815,574,0.815,575,1.274,576,1.274,577,0.815,578,0.815,579,0.815,580,1.274,581,1.274,582,0.815,583,0.815,584,1.274,585,0.815,586,1.274,587,0.815,588,0.815,589,0.815,594,0.969,596,1.866,602,0.692,603,0.969,604,1.515,605,0.969,606,1.515,607,0.969,608,0.969,609,1.515,610,1.515,611,0.692,618,0.969,619,0.969,620,0.969,621,2.429,671,0.969,672,2.263,673,2.778,674,1.175,675,1.838,676,1.175,677,1.175,678,1.175,679,2.538,680,1.838,681,1.734,682,1.838,683,1.175,684,1.507,685,3.078,686,1.175,687,1.175,688,1.175,689,1.175,690,1.082,691,0.969,692,1.175,693,1.175,694,1.175,695,1.175,696,1.175,697,2.263,698,1.175,699,1.175,700,1.175,701,1.175,702,1.175,703,1.175,704,0.969,705,1.175,706,1.866,707,1.838,708,1.838,709,1.175,710,2.263,711,1.175,712,1.175,713,2.778,714,1.175,715,1.175,716,1.175,717,1.175,718,1.175,719,1.175,720,1.175,721,1.175,722,1.175,723,0.969,724,1.175,725,0.969,726,1.175,727,1.175,728,1.175,729,2.263,730,1.515,731,1.175,732,1.175,733,1.175,734,1.175,735,1.175,736,1.175,737,1.838,738,1.175,739,2.946,740,1.175,741,1.175,742,1.175,743,1.175,744,1.866,745,1.175,746,1.175,747,1.838,748,1.175,749,1.175,750,1.175,751,1.175,752,1.175,753,1.175,754,1.175,755,1.175,756,1.838,757,1.175,758,1.175,759,1.175,760,2.263,761,2.263,762,1.175,763,1.175,764,1.838,765,1.838,766,1.838,767,1.175,768,1.175,769,3.078,770,1.175,771,1.175,772,1.838,773,1.838,774,1.838,775,1.838,776,1.838,777,1.175,778,1.175,779,1.175,780,0.969,781,0.969]],["title/coverage.html",[1327,2.74]],["body/coverage.html",[0,0.059,1,1.297,7,0.487,8,3.039,23,1.297,26,0.064,30,0.62,54,1.297,57,1.297,59,1.297,60,0.31,61,1.099,62,1.297,65,1.099,69,0.055,70,0.055,72,3.039,73,3.039,74,2.714,164,0.923,205,2.505,238,2.352,239,0.628,241,3.532,242,3.532,590,3.532,591,3.532,671,3.079,679,2.107,782,3.039,964,3.039,1144,2.912,1181,2.107,1327,3.039,1328,3.849,1329,3.849,1330,3.849,1331,3.849,1332,4.73,1333,3.849,1334,4.73,1335,3.849,1336,3.849,1337,3.849,1338,3.849,1339,4.474,1340,3.849,1341,3.849,1342,3.849,1343,3.849,1344,3.849,1345,3.849]],["title/dependencies.html",[1346,1.409,1347,2.432]],["body/dependencies.html",[7,0.492,26,0.065,40,0.625,41,2.529,69,0.055,70,0.055,145,0.771,146,1.309,148,1.355,1347,3.067,1348,3.884,1349,5.127,1350,3.884,1351,3.884,1352,3.884,1353,4.748,1354,4.498,1355,3.884,1356,3.067,1357,3.884,1358,3.884,1359,3.067,1360,3.884,1361,3.884,1362,3.884,1363,3.884,1364,3.884,1365,3.884,1366,3.884,1367,3.884,1368,3.884,1369,3.884,1370,3.884,1371,3.884,1372,3.884,1373,4.498,1374,3.884,1375,3.884,1376,3.884,1377,3.884,1378,3.884,1379,3.884,1380,3.884,1381,3.884,1382,3.884,1383,3.884,1384,3.884]],["title/index.html",[28,0.348,1385,2.164,1386,2.164]],["body/index.html",[0,0.055,4,0.618,26,0.055,52,0.762,69,0.055,70,0.055,78,0.92,164,0.92,271,1.783,277,2.076,780,2.907,1107,3.03,1139,3.959,1142,2.498,1286,3.03,1346,2.498,1356,3.526,1359,3.994,1387,3.837,1388,3.837,1389,4.724,1390,4.724,1391,3.03,1392,3.837,1393,3.837,1394,4.953,1395,3.837,1396,3.837,1397,3.837,1398,3.837,1399,3.837,1400,3.837,1401,3.837,1402,3.837,1403,3.837,1404,3.837,1405,4.724,1406,4.724,1407,3.837,1408,4.864,1409,3.837,1410,3.837,1411,3.837,1412,3.837,1413,4.466,1414,4.864,1415,3.837,1416,4.466,1417,4.466,1418,3.837,1419,3.837,1420,3.837,1421,3.837,1422,4.466,1423,3.837,1424,3.837,1425,3.837,1426,3.837,1427,3.837,1428,4.724,1429,3.837,1430,3.837,1431,3.837,1432,2.498,1433,3.837]],["title/modules.html",[1434,2.74]],["body/modules.html",[26,0.057,69,0.057,70,0.057,1434,3.229]],["title/overview.html",[1432,2.259]],["body/overview.html",[2,1.615,26,0.057,69,0.057,70,0.057,240,1.615,1432,2.655,1435,4.079,1436,4.079]],["title/properties.html",[29,0.39,1346,1.409]],["body/properties.html",[26,0.06,29,0.517,69,0.057,70,0.057,1391,3.223,1437,4.082]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":275,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["0.0.0",{"_index":1437,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":1301,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.1",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["0.14.3",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["0.18.5",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["0.5rem",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["0.9rem",{"_index":1135,"title":{},"body":{"components/NavbarComponent.html":{}}}],["000",{"_index":1086,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1",{"_index":258,"title":{"interfaces/Bodega-1.html":{}},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["1.11.3",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":1128,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.2rem",{"_index":1083,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.4.1",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{}}}],["1.5rem",{"_index":1089,"title":{},"body":{"components/NavbarComponent.html":{}}}],["10.12.3",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":238,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1106,"title":{},"body":{"components/NavbarComponent.html":{}}}],["100vh",{"_index":895,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["10px",{"_index":211,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["13/17",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["15px",{"_index":1279,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["16/17",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{}}}],["17.0.0",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["18.0.1",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":1392,"title":{},"body":{"index.html":{}}}],["18.0.6",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["18.0.7",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["18/19",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["1em",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["1px",{"_index":215,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["1rem",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["2",{"_index":326,"title":{"interfaces/Bodega-2.html":{}},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["2.0.5",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1141,"title":{},"body":{"components/NavbarComponent.html":{}}}],["20px",{"_index":208,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["240px",{"_index":231,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["250px",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{}}}],["27ae60",{"_index":1325,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["280px",{"_index":1114,"title":{},"body":{"components/NavbarComponent.html":{}}}],["28a745",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{}}}],["2px",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["2rem",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{}}}],["3",{"_index":1305,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["3.8.2",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{}}}],["343a40",{"_index":1292,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["354a5f",{"_index":1115,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4.18.2",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":1092,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4a4a4a",{"_index":1136,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4px",{"_index":1082,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["5",{"_index":1436,"title":{},"body":{"overview.html":{}}}],["5.3.3",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["500",{"_index":506,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["50px",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["555",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["576px",{"_index":1307,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["5px",{"_index":1137,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["60px",{"_index":1103,"title":{},"body":{"components/NavbarComponent.html":{}}}],["66/67",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["67/68",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":233,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["76",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["767px",{"_index":1308,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["768px",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["79/80",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1435,"title":{},"body":{"overview.html":{}}}],["80",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["80px",{"_index":1278,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["850px",{"_index":1282,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["8px",{"_index":1281,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["9/9",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":237,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["900px",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{}}}],["90px",{"_index":1143,"title":{},"body":{"components/NavbarComponent.html":{}}}],["94",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["98",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["abierto/cerrado",{"_index":1021,"title":{},"body":{"components/NavbarComponent.html":{}}}],["abiertos",{"_index":996,"title":{},"body":{"components/NavbarComponent.html":{}}}],["abre",{"_index":535,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["absolute",{"_index":1057,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["acc.concat(bodega.products",{"_index":418,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["accepted",{"_index":1201,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["acceptmodification",{"_index":1149,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["acciones",{"_index":1245,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["acepta",{"_index":1161,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["aceptado",{"_index":1241,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["aceptar",{"_index":1273,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["action",{"_index":1099,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actual",{"_index":296,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["actual_component",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["actualiza",{"_index":394,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["actualizadas",{"_index":1186,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["actualizados",{"_index":608,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["actualizar",{"_index":395,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["actualmente",{"_index":685,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["add",{"_index":1286,"title":{},"body":{"components/NotificacionesComponent.html":{},"index.html":{}}}],["addbodega(form",{"_index":456,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["addbodegamodal",{"_index":458,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["addbodegamodal.show",{"_index":517,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["addbodegamodal?.hide",{"_index":460,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["addproducttobodega(product",{"_index":740,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["administrador",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{}}}],["agrega",{"_index":430,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["agregar",{"_index":269,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ajusta",{"_index":990,"title":{},"body":{"components/NavbarComponent.html":{}}}],["al",{"_index":111,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["alert('el",{"_index":450,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["alert('notificación",{"_index":879,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('por",{"_index":466,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["alert('seleccione",{"_index":562,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["alert(`la",{"_index":751,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["alguna",{"_index":1002,"title":{},"body":{"components/NavbarComponent.html":{}}}],["align",{"_index":200,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["allowedroles",{"_index":1007,"title":{},"body":{"components/NavbarComponent.html":{}}}],["allproducts",{"_index":253,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["almacenados",{"_index":592,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["almacenamiento",{"_index":370,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["alterna",{"_index":723,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["alternar",{"_index":1023,"title":{},"body":{"components/NavbarComponent.html":{}}}],["angular",{"_index":1389,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":145,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":146,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["antes",{"_index":600,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["aplicación",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["application",{"_index":1399,"title":{},"body":{"index.html":{}}}],["area",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["areadashboardcomponent",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["arial",{"_index":890,"title":{},"body":{"components/LoginComponent.html":{}}}],["artifacts",{"_index":1409,"title":{},"body":{"index.html":{}}}],["asignar",{"_index":375,"title":{},"body":{"interfaces/Bodega.html":{}}}],["attr(data",{"_index":1310,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["auditor",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["auditordashboardcomponent",{"_index":57,"title":{"components/AuditorDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["autenticación",{"_index":316,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["auth/auth.service",{"_index":250,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["authservice",{"_index":249,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["authservice.getcurrentuser()?.firstname",{"_index":1066,"title":{},"body":{"components/NavbarComponent.html":{}}}],["authservice.getcurrentuser()?.lastname",{"_index":1067,"title":{},"body":{"components/NavbarComponent.html":{}}}],["authservice.getcurrentuser()?.role",{"_index":1068,"title":{},"body":{"components/NavbarComponent.html":{}}}],["auto",{"_index":1094,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["automatically",{"_index":1400,"title":{},"body":{"index.html":{}}}],["autotable",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["añade",{"_index":739,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["añadir",{"_index":594,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["años",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["b.name",{"_index":440,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["background",{"_index":896,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["badge",{"_index":1059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bar",{"_index":1284,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["barra",{"_index":991,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bell",{"_index":1088,"title":{},"body":{"components/NavbarComponent.html":{}}}],["between",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bg",{"_index":1062,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bi",{"_index":1087,"title":{},"body":{"components/NavbarComponent.html":{}}}],["birthdate",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["block",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bodega",{"_index":60,"title":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"coverage.html":{}}}],["bodega.name",{"_index":738,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bodega.name.touppercase",{"_index":733,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bodega.products",{"_index":422,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bodegadashboardcomponent",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["bodegadestino",{"_index":578,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bodegaorigen",{"_index":577,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bodegas",{"_index":263,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["body",{"_index":888,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bold",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["boolean",{"_index":305,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap",{"_index":148,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"dependencies.html":{}}}],["bootstrap.modal(document.getelementbyid('addbodegamodal",{"_index":516,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal(document.getelementbyid('confirmdeletemodal",{"_index":386,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal(document.getelementbyid('detallehistorialmodal",{"_index":538,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal(document.getelementbyid('detallemovimientomodal",{"_index":543,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal(document.getelementbyid('editproductmodal",{"_index":403,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal(document.getelementbyid('productinfomodal",{"_index":165,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal(document.getelementbyid('usermodal",{"_index":721,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('addbodegamodal",{"_index":459,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('confirmdeletemodal",{"_index":392,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('detallehistorialmodal",{"_index":545,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('detallemovimientomodal",{"_index":549,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('editproductmodal",{"_index":428,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal.getinstance(ingresobodegamodalelement",{"_index":502,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal.getinstance(salidabodegamodalelement",{"_index":532,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap.modal.getinstance(trasladobodegamodalelement",{"_index":587,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bootstrap/dist/css/bootstrap.min.css",{"_index":1277,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["bootstrap/ng",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":209,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bordered",{"_index":214,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["bordes",{"_index":1126,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["box",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["brand",{"_index":273,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["browser",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["btn:hover",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["build",{"_index":1408,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":676,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["bulkuploadcomponent",{"_index":675,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["button",{"_index":1287,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["buttons",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["búsqueda",{"_index":122,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["c0392b",{"_index":1326,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["cada",{"_index":734,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["cadena",{"_index":688,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["calc(100",{"_index":235,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["cambiado",{"_index":1175,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["cambio",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["cambios",{"_index":611,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["cambiossolicitados",{"_index":626,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["cambiossolicitados.brand",{"_index":638,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.color",{"_index":644,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.currency",{"_index":653,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.description",{"_index":632,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.family",{"_index":647,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.location",{"_index":659,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.material",{"_index":641,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.model",{"_index":635,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.name",{"_index":629,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.unit",{"_index":656,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.value",{"_index":650,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["campo",{"_index":1172,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["cantidad",{"_index":282,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["cantidadingreso",{"_index":283,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["cantidadsalida",{"_index":284,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["capabilities",{"_index":1426,"title":{},"body":{"index.html":{}}}],["caption",{"_index":1283,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["carga",{"_index":367,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["carguen",{"_index":377,"title":{},"body":{"interfaces/Bodega.html":{}}}],["case",{"_index":1239,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["caso",{"_index":349,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["cc6600",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["ccc",{"_index":1280,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["center",{"_index":201,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["change",{"_index":1402,"title":{},"body":{"index.html":{}}}],["check",{"_index":1431,"title":{},"body":{"index.html":{}}}],["checkproductcode",{"_index":364,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["checkscreensize",{"_index":972,"title":{},"body":{"components/NavbarComponent.html":{}}}],["chevron",{"_index":1129,"title":{},"body":{"components/NavbarComponent.html":{}}}],["child",{"_index":1296,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["child(odd",{"_index":1313,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["chipax",{"_index":1112,"title":{},"body":{"components/NavbarComponent.html":{}}}],["choice",{"_index":1421,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":994,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["circle",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{}}}],["circle.active",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{}}}],["clase",{"_index":1167,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["class",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["class=\"position",{"_index":1056,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cli",{"_index":1390,"title":{},"body":{"index.html":{}}}],["close",{"_index":1321,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["closealldropdowns",{"_index":973,"title":{},"body":{"components/NavbarComponent.html":{}}}],["closemodal",{"_index":1150,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["code",{"_index":271,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{},"index.html":{}}}],["code.trim().touppercase",{"_index":345,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["collapse",{"_index":1288,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["color",{"_index":185,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["column",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["combinados",{"_index":683,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["command",{"_index":1422,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":81,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["company",{"_index":1093,"title":{},"body":{"components/NavbarComponent.html":{}}}],["completo",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["componente",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"overview.html":{}}}],["compra",{"_index":1075,"title":{},"body":{"components/NavbarComponent.html":{}}}],["compras",{"_index":1073,"title":{},"body":{"components/NavbarComponent.html":{}}}],["con",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["configura",{"_index":1016,"title":{},"body":{"components/NavbarComponent.html":{}}}],["confirma",{"_index":388,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["confirmación",{"_index":605,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["confirmation",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{}}}],["confirmdeletemodal",{"_index":385,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["confirmdeletemodal.show",{"_index":387,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["confirmdeletemodal?.hide",{"_index":393,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["console.log('filtered",{"_index":776,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["console.log('projects",{"_index":711,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["console.log('related",{"_index":779,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["console.log('search",{"_index":763,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["const",{"_index":162,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["constructor",{"_index":95,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["constructor(authservice",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["constructor(private",{"_index":150,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["constructor(productservice",{"_index":96,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["contador",{"_index":1193,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["container",{"_index":206,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["content",{"_index":223,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["contrario",{"_index":350,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["contraseña",{"_index":725,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["control",{"_index":77,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["convierte",{"_index":356,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["correctamente",{"_index":378,"title":{},"body":{"interfaces/Bodega.html":{}}}],["correo",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["correspondiente",{"_index":1169,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["count",{"_index":1032,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["cover",{"_index":901,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverage",{"_index":1327,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":99,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["crear",{"_index":1071,"title":{},"body":{"components/NavbarComponent.html":{}}}],["credenciales",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["css",{"_index":1168,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["cuenta",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["cuentamodal",{"_index":1302,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["currency",{"_index":276,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["currentdropdown",{"_index":1050,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currentdropdown?.classlist.remove('show",{"_index":1052,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currentopendropdown",{"_index":969,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currenturl",{"_index":1044,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currenturl.includes('/admin",{"_index":1046,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currenturl.includes('/area",{"_index":1047,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currenturl.includes('/bodega",{"_index":1048,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cursor",{"_index":1100,"title":{},"body":{"components/NavbarComponent.html":{}}}],["custom",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["código",{"_index":168,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["d",{"_index":1303,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["d3550c",{"_index":1319,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["d3d3d3",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{}}}],["danger",{"_index":1063,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["dashboard",{"_index":80,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["dashboard'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["dashboard.component.css",{"_index":84,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["dashboard.component.html",{"_index":86,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["dashboard.component.ts",{"_index":74,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"coverage.html":{}}}],["dashboard.component.ts:100",{"_index":129,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:29",{"_index":142,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:37",{"_index":140,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:45",{"_index":143,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:53",{"_index":98,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:68",{"_index":106,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:81",{"_index":117,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard/area",{"_index":242,"title":{},"body":{"interfaces/Bodega.html":{},"coverage.html":{}}}],["dashboard/auditor",{"_index":73,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"coverage.html":{}}}],["dashboard/bodega",{"_index":591,"title":{},"body":{"interfaces/Bodega-1.html":{},"coverage.html":{}}}],["dashboardcomponent",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{},"coverage.html":{}}}],["date().gettime",{"_index":662,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["date().tolocaledatestring('en",{"_index":322,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["date.now",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{}}}],["datos",{"_index":607,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["day",{"_index":328,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["dcdcdc",{"_index":1316,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["de",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["dee2e6",{"_index":217,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["del",{"_index":75,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["dependencies",{"_index":1347,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descripción",{"_index":169,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["description",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["descriptivo",{"_index":1203,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["desde",{"_index":369,"title":{},"body":{"interfaces/Bodega.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["design",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["después",{"_index":616,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["destino",{"_index":312,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["detallehistorialmodal",{"_index":537,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["detallehistorialmodal.show",{"_index":539,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["detallehistorialmodal?.hide",{"_index":546,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["detallemovimientomodal",{"_index":542,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["detallemovimientomodal.show",{"_index":544,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["detallemovimientomodal?.hide",{"_index":550,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["detalles",{"_index":486,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["dev",{"_index":1396,"title":{},"body":{"index.html":{}}}],["development",{"_index":1393,"title":{},"body":{"index.html":{}}}],["diferente",{"_index":454,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["digit",{"_index":327,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["direction",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["directive",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["directives",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1407,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1412,"title":{},"body":{"index.html":{}}}],["display",{"_index":224,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["disponible",{"_index":754,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["dist",{"_index":1411,"title":{},"body":{"index.html":{}}}],["divisorias",{"_index":1121,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid('editpassword",{"_index":728,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["document.getelementbyid('ingresobodegamodal",{"_index":500,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["document.getelementbyid('notificationmodal",{"_index":1221,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["document.getelementbyid('salidabodegamodal",{"_index":530,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["document.getelementbyid('trasladobodegamodal",{"_index":585,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["document.getelementbyid(dropdownid",{"_index":1053,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid(this.currentopendropdown",{"_index":1051,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.queryselector('form.needs",{"_index":446,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["document.queryselector(`form.needs",{"_index":464,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["documentation",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["documento",{"_index":286,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["down",{"_index":1130,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdown",{"_index":1020,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdown.classlist.contains('show",{"_index":1055,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdown.classlist.remove('show",{"_index":1039,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdown.classlist.toggle('show",{"_index":1054,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdownid",{"_index":1022,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdowns",{"_index":995,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dynamic",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1200,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["e2e",{"_index":1419,"title":{},"body":{"index.html":{}}}],["e5e5e5",{"_index":1081,"title":{},"body":{"components/NavbarComponent.html":{}}}],["e9ecef",{"_index":1124,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ease",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["ecf0f1",{"_index":1312,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["edad",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["edición",{"_index":689,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["edita",{"_index":398,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["editado",{"_index":423,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["editar",{"_index":259,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["editproductmodal",{"_index":402,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["editproductmodal.dispose",{"_index":613,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["editproductmodal.hide",{"_index":612,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["editproductmodal.show",{"_index":404,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["editproductmodal?.hide",{"_index":429,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ee7712",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ejecuta",{"_index":110,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["el",{"_index":113,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["electrónico",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["element",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["elimina",{"_index":380,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["eliminación",{"_index":389,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["eliminar",{"_index":256,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ellipsis",{"_index":221,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["email",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailerror",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailvalid",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["empresa",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{}}}],["en",{"_index":134,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["encabezado",{"_index":1116,"title":{},"body":{"components/NavbarComponent.html":{}}}],["encuentra",{"_index":472,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["end",{"_index":1139,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["enrutamiento",{"_index":985,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ensure",{"_index":717,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["entrada",{"_index":126,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["entre",{"_index":558,"title":{},"body":{"interfaces/Bodega.html":{}}}],["enviada",{"_index":880,"title":{},"body":{"components/LoginComponent.html":{}}}],["envía",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["envío",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["erp",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["erppraxa",{"_index":1387,"title":{},"body":{"index.html":{}}}],["error",{"_index":691,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["es",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["español",{"_index":1190,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["especificado",{"_index":619,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["específico",{"_index":1173,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["est",{"_index":998,"title":{},"body":{"components/NavbarComponent.html":{}}}],["estado",{"_index":681,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["este",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{}}}],["event",{"_index":124,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["event.target",{"_index":360,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["event.target.value.tolowercase",{"_index":155,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["evento",{"_index":125,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["execute",{"_index":1416,"title":{},"body":{"index.html":{}}}],["existe",{"_index":304,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["existencia",{"_index":603,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["existente",{"_index":606,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["existingitem",{"_index":468,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["expandida/colapsada",{"_index":1025,"title":{},"body":{"components/NavbarComponent.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["express",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["f2f2f2",{"_index":1314,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["f5f7fa",{"_index":1109,"title":{},"body":{"components/NavbarComponent.html":{}}}],["false",{"_index":307,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["falso",{"_index":348,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["falta",{"_index":374,"title":{},"body":{"interfaces/Bodega.html":{}}}],["familia",{"_index":187,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["family",{"_index":274,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["favor",{"_index":452,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["fecha",{"_index":295,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["fff",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["ffffff",{"_index":1080,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ffffffec",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{}}}],["field",{"_index":1176,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1403,"title":{},"body":{"index.html":{}}}],["filteredhistorial",{"_index":696,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["filteredproducts",{"_index":87,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["filteringreso",{"_index":699,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["filtersalida",{"_index":701,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["filtertraslado",{"_index":703,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["filtra",{"_index":118,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["filtrados",{"_index":141,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["filtrar",{"_index":686,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["filtro",{"_index":697,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["firebase",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["first",{"_index":1424,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":1104,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flex",{"_index":225,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["fondo",{"_index":1110,"title":{},"body":{"components/NavbarComponent.html":{}}}],["font",{"_index":889,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["footer",{"_index":1324,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["form",{"_index":431,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["form.form.markallastouched",{"_index":434,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["form.resetform",{"_index":443,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["form.valid",{"_index":435,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["formato",{"_index":687,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["formelement",{"_index":445,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["formelement.classlist.add('was",{"_index":455,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["formelement.classlist.remove('was",{"_index":448,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["formsmodule",{"_index":82,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["formulario",{"_index":432,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["fuente",{"_index":1134,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fullname",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{}}}],["further",{"_index":1427,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1285,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["generate",{"_index":1405,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1388,"title":{},"body":{"index.html":{}}}],["gestionar",{"_index":1208,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["getstatusclass",{"_index":1151,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["getstatusclass(status",{"_index":1163,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["getting",{"_index":1385,"title":{"index.html":{}},"body":{}}],["go",{"_index":1430,"title":{},"body":{"index.html":{}}}],["group",{"_index":1098,"title":{},"body":{"components/NavbarComponent.html":{}}}],["grow",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{}}}],["guarda",{"_index":410,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["guardar",{"_index":670,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["h4",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["h5",{"_index":1306,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["h6",{"_index":1118,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ha",{"_index":1174,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["haschanged",{"_index":1152,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["haschanged(field",{"_index":1170,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["header",{"_index":1096,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["height",{"_index":894,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["hello",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":1428,"title":{},"body":{"index.html":{}}}],["herramientas",{"_index":172,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["hidden",{"_index":213,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["historial",{"_index":254,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["html",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["html2canvas",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["htmlinputelement",{"_index":361,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["http://localhost:4200",{"_index":1398,"title":{},"body":{"index.html":{}}}],["i.cantidad",{"_index":493,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["i.product.code",{"_index":490,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["i.product.description",{"_index":492,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["i.product.name",{"_index":491,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["icon",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{}}}],["icons",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["icons.css",{"_index":1276,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["icons/font/bootstrap",{"_index":1275,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["id",{"_index":661,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["identificación",{"_index":680,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["identificador",{"_index":1198,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["identifier",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["igual",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["image",{"_index":897,"title":{},"body":{"components/LoginComponent.html":{}}}],["img",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["implements",{"_index":78,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"index.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["incorrectas",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["indica",{"_index":301,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["indicator",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["información",{"_index":131,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ingenieria",{"_index":1069,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ingresado",{"_index":123,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["ingresar",{"_index":597,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["ingrese",{"_index":453,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["ingreso",{"_index":279,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["ingresobodegamodal",{"_index":501,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ingresobodegamodal.dispose",{"_index":505,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ingresobodegamodal.hide",{"_index":503,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ingresobodegamodalelement",{"_index":499,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ingresoitems",{"_index":280,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ingresos",{"_index":698,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["inicializa",{"_index":1015,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inicialización",{"_index":602,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["inicializar",{"_index":112,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["iniciar",{"_index":885,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicio",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["inline",{"_index":1131,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input",{"_index":357,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["input.value",{"_index":362,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["input.value.touppercase",{"_index":363,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["instancia",{"_index":101,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["intente",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{}}}],["interface",{"_index":239,"title":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"coverage.html":{}}}],["interfaces",{"_index":240,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"overview.html":{}}}],["interfaz",{"_index":243,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["inventario",{"_index":167,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["inventory",{"_index":204,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["inválidas",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{}}}],["isadult",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["isbodega",{"_index":1147,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["isiniciopage",{"_index":974,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isloginpage",{"_index":975,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isondashboard",{"_index":976,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isroleallowed",{"_index":977,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isroleallowed(allowedroles",{"_index":1003,"title":{},"body":{"components/NavbarComponent.html":{}}}],["issidebarcollapsed",{"_index":970,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item",{"_index":1085,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item.active",{"_index":1123,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item.cantidad",{"_index":482,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["item.numerodocumento",{"_index":750,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["item.product",{"_index":572,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["item.product.code",{"_index":470,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["item.product.description",{"_index":581,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["item.product.name",{"_index":580,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["item.product.stock",{"_index":582,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["item.tipodocumento",{"_index":749,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["item:hover",{"_index":1122,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":227,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["json.parse(bodegas",{"_index":409,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["json.parse(bodegas).map((bodega",{"_index":732,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["json.parse(localstorage.getitem('notifications",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.parse(localstorage.getitem('users",{"_index":373,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{}}}],["json.parse(storedprojects",{"_index":758,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["json.stringify(notifications",{"_index":878,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(this.bodegas",{"_index":413,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["jspdf",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":226,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["karma",{"_index":1418,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":1233,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["la",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["label",{"_index":1311,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["las",{"_index":405,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["lateral",{"_index":992,"title":{},"body":{"components/NavbarComponent.html":{}}}],["left",{"_index":230,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["legend",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["line",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{}}}],["link",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["link:hover",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["list",{"_index":1097,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lista",{"_index":138,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["loadallproducts",{"_index":415,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["loadbodegas",{"_index":406,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["loaded",{"_index":712,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["loadnotifications",{"_index":1153,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["loadprojects",{"_index":755,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["loadusers",{"_index":372,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["local",{"_index":371,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["localstorage.getitem('bodegas",{"_index":407,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["localstorage.getitem('projects",{"_index":757,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["localstorage.setitem('bodegas",{"_index":412,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["localstorage.setitem('notifications",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{}}}],["location",{"_index":278,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["login",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["login.component.css",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":62,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["loginerror",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["logout",{"_index":978,"title":{},"body":{"components/NavbarComponent.html":{}}}],["los",{"_index":119,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["líneas",{"_index":1120,"title":{},"body":{"components/NavbarComponent.html":{}}}],["main",{"_index":222,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["maneja",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["marca",{"_index":181,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["margin",{"_index":229,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["masiva",{"_index":1072,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matchesfilter",{"_index":772,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["matchesterm",{"_index":766,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["matching",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["material",{"_index":183,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["max",{"_index":236,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["mayor",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["mayúsculas",{"_index":358,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["mb",{"_index":1304,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["media",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["memberof",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["mensaje",{"_index":690,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["menu",{"_index":1138,"title":{},"body":{"components/NavbarComponent.html":{}}}],["message",{"_index":665,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["messages",{"_index":1065,"title":{},"body":{"components/NavbarComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["methods",{"_index":91,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["middle",{"_index":203,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["min",{"_index":1140,"title":{},"body":{"components/NavbarComponent.html":{}}}],["modal",{"_index":136,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["modal(modalelement",{"_index":1222,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modal.getinstance(modalelement",{"_index":1236,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modal.hide",{"_index":1237,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modal.show",{"_index":1223,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modalelement",{"_index":1220,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["model",{"_index":272,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["modelo",{"_index":179,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["modificación",{"_index":623,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["modificationrequest",{"_index":660,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["modules",{"_index":1434,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moneda",{"_index":191,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["month",{"_index":325,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["more",{"_index":1429,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":684,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["motivo",{"_index":290,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["motivosalida",{"_index":291,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["movimiento",{"_index":248,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["movimiento.documento",{"_index":770,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["movimiento.documento.tolowercase().includes(searchterm",{"_index":771,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["movimiento.tipo",{"_index":769,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["movimiento.tipo.tolowercase().includes(searchterm",{"_index":767,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["movimientos",{"_index":255,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["muestra",{"_index":130,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["método",{"_index":107,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["nacimiento",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{},"index.html":{}}}],["nav",{"_index":1084,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":965,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["navbar.component.css",{"_index":966,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":967,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":23,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["navega",{"_index":1013,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigate",{"_index":1397,"title":{},"body":{"index.html":{}}}],["navigatetohome",{"_index":979,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ndice",{"_index":137,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["need",{"_index":1423,"title":{},"body":{"index.html":{}}}],["new",{"_index":164,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"coverage.html":{},"index.html":{}}}],["newbodeganame",{"_index":267,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["newproduct",{"_index":270,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ng",{"_index":1359,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngform",{"_index":247,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["ngoninit",{"_index":92,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["nico",{"_index":1199,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["nombre",{"_index":246,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["none",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["normaliza",{"_index":341,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["normalizado",{"_index":343,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["normalize",{"_index":714,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["normalizecode(code",{"_index":344,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["normalizedcode",{"_index":352,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["notificaciones",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notificaciones.component.css",{"_index":1145,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notificaciones.component.html",{"_index":1146,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notificacionescomponent",{"_index":65,"title":{"components/NotificacionesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"coverage.html":{}}}],["notificación",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notification",{"_index":1181,"title":{"interfaces/Notification.html":{}},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"coverage.html":{}}}],["notification.solicitadapor",{"_index":1246,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notification.status",{"_index":1216,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notificationmodal",{"_index":1320,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notifications",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["notifications.push",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{}}}],["notificationservice",{"_index":983,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["nowrap",{"_index":220,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["nueva",{"_index":266,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["nuevo",{"_index":268,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["null",{"_index":144,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["number",{"_index":128,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["numeric",{"_index":324,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["numero",{"_index":485,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["numerodocumento",{"_index":289,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["número",{"_index":288,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["o",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["obtiene",{"_index":1166,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["olvidaste",{"_index":886,"title":{},"body":{"components/LoginComponent.html":{}}}],["onabrirhistorial",{"_index":536,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onaddproduct(form",{"_index":433,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onaddproductotoingreso",{"_index":465,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onaddproductotosalida",{"_index":507,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onaddproductototraslado",{"_index":551,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onconfirmaringreso",{"_index":478,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onconfirmarsalida",{"_index":520,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onconfirmartraslado",{"_index":559,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onconfirmdelete",{"_index":390,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["ondeleteproduct(index",{"_index":381,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["oneditproduct(index",{"_index":399,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["oneliminaritem(index",{"_index":476,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["oneliminaritemsalida(index",{"_index":518,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["oneliminaritemtraslado(index",{"_index":556,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["oninit",{"_index":79,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["onrequestmodification",{"_index":624,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["onsaveeditproduct",{"_index":424,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onsearchhistorial",{"_index":759,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onsearchproduct",{"_index":93,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["onsearchproduct(event",{"_index":116,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onsubmit",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(form",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{}}}],["onupdateproduct(index",{"_index":396,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onverdetallesmovimiento(movimiento",{"_index":540,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onviewproductinfo",{"_index":94,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["onviewproductinfo(index",{"_index":127,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["onvolverhistorial",{"_index":548,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["opcional",{"_index":682,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["openaddbodegamodal",{"_index":515,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["openmodal",{"_index":1154,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["openmodal(notification",{"_index":1180,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["openusermodal",{"_index":719,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["optional",{"_index":103,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["ordenes",{"_index":1076,"title":{},"body":{"components/NavbarComponent.html":{}}}],["origen",{"_index":310,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["original",{"_index":599,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["originalproduct",{"_index":601,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["out",{"_index":1107,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["overflow",{"_index":212,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["overview",{"_index":1432,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["p.code",{"_index":481,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["package",{"_index":1346,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":207,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["page",{"_index":1142,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"index.html":{}}}],["panel",{"_index":76,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["pantalla",{"_index":988,"title":{},"body":{"components/NavbarComponent.html":{}}}],["para",{"_index":244,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["param",{"_index":149,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["partial",{"_index":1206,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["partialproduct",{"_index":595,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["paso",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["password",{"_index":730,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["passwordfield",{"_index":727,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["passwordfield.type",{"_index":729,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["pendiente",{"_index":1240,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pendientes",{"_index":1194,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pending",{"_index":664,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pending').length",{"_index":1217,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pendingnotificationscount",{"_index":971,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["permitido",{"_index":1006,"title":{},"body":{"components/NavbarComponent.html":{}}}],["permitidos",{"_index":1009,"title":{},"body":{"components/NavbarComponent.html":{}}}],["persona",{"_index":1204,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["pertenece",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{}}}],["pill",{"_index":1061,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1420,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1101,"title":{},"body":{"components/NavbarComponent.html":{}}}],["por",{"_index":451,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["position",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["praxa",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["primary",{"_index":1317,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["primary:hover",{"_index":1318,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["principal",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["private",{"_index":317,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["proceso",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["product",{"_index":139,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["product.bodega",{"_index":737,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["product.code",{"_index":173,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["product.code.tolowercase().includes(this.searchproductterm",{"_index":157,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["product.description",{"_index":174,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["product.description.tolowercase().includes(this.searchproductterm",{"_index":158,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["product.name",{"_index":488,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["product.name.tolowercase().includes(this.searchproductterm",{"_index":159,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["product.stock",{"_index":176,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["product.unit",{"_index":175,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["productcode",{"_index":1224,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["productcodeexists",{"_index":306,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["productexists(code",{"_index":351,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["productindestino",{"_index":567,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["productindestino.stock",{"_index":569,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["productinfomodal",{"_index":163,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["productinfomodal.show",{"_index":166,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["productinorigen",{"_index":565,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["productinorigen.stock",{"_index":570,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["producto",{"_index":132,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["productooriginal",{"_index":668,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["productos",{"_index":105,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["products",{"_index":88,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["productservice",{"_index":97,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["producttoadd",{"_index":511,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["producttodelete",{"_index":300,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["project",{"_index":780,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{},"index.html":{}}}],["project.numero.tolowercase().includes(searchterm",{"_index":778,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["projects",{"_index":707,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["properties",{"_index":29,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"properties.html":{}}}],["proveedores",{"_index":1077,"title":{},"body":{"components/NavbarComponent.html":{}}}],["proyecto",{"_index":679,"title":{"interfaces/Proyecto.html":{}},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{},"coverage.html":{}}}],["proyectos",{"_index":706,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["proyectosservice",{"_index":673,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["public",{"_index":968,"title":{},"body":{"components/NavbarComponent.html":{}}}],["página",{"_index":999,"title":{},"body":{"components/NavbarComponent.html":{}}}],["que",{"_index":108,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["quitar",{"_index":1119,"title":{},"body":{"components/NavbarComponent.html":{}}}],["radius",{"_index":210,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["rdenes",{"_index":1074,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rea",{"_index":251,"title":{},"body":{"interfaces/Bodega.html":{},"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":593,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["realiza",{"_index":604,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["recargar",{"_index":615,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["rechaza",{"_index":1184,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["rechazado",{"_index":1242,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["rechazar",{"_index":1274,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["recoveryemail",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{}}}],["recuperación",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirige",{"_index":1011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["redondeados",{"_index":1127,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reference",{"_index":1433,"title":{},"body":{"index.html":{}}}],["registererror",{"_index":692,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["registersuccess",{"_index":694,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["registro",{"_index":292,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["registronumeroingreso",{"_index":293,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["registronumerosalida",{"_index":294,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["reinicia",{"_index":461,"title":{},"body":{"interfaces/Bodega.html":{},"components/LoginComponent.html":{}}}],["reiniciar",{"_index":462,"title":{},"body":{"interfaces/Bodega.html":{}}}],["rejected",{"_index":1202,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["rejectmodification",{"_index":1155,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["relacionado",{"_index":704,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["relatedproject",{"_index":705,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["relative",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["reload",{"_index":1401,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":899,"title":{},"body":{"components/LoginComponent.html":{}}}],["reportes",{"_index":1078,"title":{},"body":{"components/NavbarComponent.html":{}}}],["representa",{"_index":672,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["representar",{"_index":245,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["resetform(form",{"_index":463,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["resetmodal",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["responsive",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["restablece",{"_index":618,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["restablecer",{"_index":620,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["results",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retirar",{"_index":752,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["return",{"_index":342,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["returns",{"_index":114,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["rgba(0",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["right",{"_index":1102,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["roboto",{"_index":1133,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rol",{"_index":1005,"title":{},"body":{"components/NavbarComponent.html":{}}}],["roles",{"_index":1008,"title":{},"body":{"components/NavbarComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["rounded",{"_index":1060,"title":{},"body":{"components/NavbarComponent.html":{}}}],["router",{"_index":982,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routermodule",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["run",{"_index":1394,"title":{},"body":{"index.html":{}}}],["running",{"_index":1413,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["sacar",{"_index":598,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["salida",{"_index":261,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["salidabodegamodal",{"_index":531,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["salidabodegamodal.dispose",{"_index":534,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["salidabodegamodal.hide",{"_index":533,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["salidabodegamodalelement",{"_index":529,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["salidaitems",{"_index":281,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["salidas",{"_index":700,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["salir",{"_index":1079,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sans",{"_index":891,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["savebodegas",{"_index":411,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["savenotifications",{"_index":1156,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["saver",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1404,"title":{},"body":{"index.html":{}}}],["scale(1.2",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{}}}],["screenwidth",{"_index":1036,"title":{},"body":{"components/NavbarComponent.html":{}}}],["se",{"_index":109,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["search",{"_index":781,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["searchhistorialterm",{"_index":695,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["searchproductterm",{"_index":89,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["searchterm",{"_index":761,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["según",{"_index":120,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{}}}],["selecciona",{"_index":419,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["seleccionada",{"_index":264,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["seleccionado",{"_index":133,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["seleccionar",{"_index":420,"title":{},"body":{"interfaces/Bodega.html":{}}}],["seleccione",{"_index":467,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectbodega(bodega",{"_index":421,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectedbodega",{"_index":265,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectedbodegadestino",{"_index":313,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectedbodegaorigen",{"_index":311,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectedmovimiento",{"_index":298,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectednotification",{"_index":1148,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["selectednotification?.cambiossolicitados?.brand",{"_index":1265,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.color",{"_index":1267,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.currency",{"_index":1270,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.description",{"_index":1263,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.family",{"_index":1268,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.location",{"_index":1272,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.material",{"_index":1266,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.model",{"_index":1264,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.name",{"_index":1262,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.unit",{"_index":1271,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.value",{"_index":1269,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.brand",{"_index":1254,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.code",{"_index":1250,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.color",{"_index":1256,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.currency",{"_index":1259,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.description",{"_index":1252,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.family",{"_index":1257,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.location",{"_index":1261,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.material",{"_index":1255,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.model",{"_index":1253,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.name",{"_index":1251,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.unit",{"_index":1260,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.value",{"_index":1258,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.solicitadapor",{"_index":1248,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectedproduct",{"_index":90,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectedproduct?.brand",{"_index":182,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.code",{"_index":177,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.color",{"_index":186,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.currency",{"_index":192,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.description",{"_index":178,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.family",{"_index":188,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.location",{"_index":195,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.material",{"_index":184,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.model",{"_index":180,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.stock",{"_index":196,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.unit",{"_index":193,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.value",{"_index":190,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproductcode",{"_index":508,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["selectedproductindextodelete",{"_index":257,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectedproductindextoedit",{"_index":260,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectedproductsalida",{"_index":262,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectedproducttoedit",{"_index":299,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selectedproducttraslado",{"_index":314,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["sendnotification",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["sendnotification(form",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["separate",{"_index":1289,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["serif",{"_index":892,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["serve",{"_index":1395,"title":{},"body":{"index.html":{}}}],["server",{"_index":1356,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service/notificacion.service",{"_index":1029,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["service/product.service",{"_index":147,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["service/proyecto.service",{"_index":674,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["servicio",{"_index":104,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["sesión",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["settimeout",{"_index":504,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["shadow",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["showstep",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["showstep(step",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["si",{"_index":302,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["sidebar",{"_index":1095,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sidebar:hover",{"_index":1113,"title":{},"body":{"components/NavbarComponent.html":{}}}],["similar",{"_index":1111,"title":{},"body":{"components/NavbarComponent.html":{}}}],["size",{"_index":900,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["solicit",{"_index":1205,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["solicita",{"_index":622,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["solicitadapor",{"_index":667,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["solicitado",{"_index":1244,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["solicitados",{"_index":1207,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["solicitud",{"_index":666,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{}}}],["solid",{"_index":216,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["sombreado",{"_index":1125,"title":{},"body":{"components/NavbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"index.html":{}}}],["spa",{"_index":1070,"title":{},"body":{"components/NavbarComponent.html":{}}}],["space",{"_index":219,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["spacing",{"_index":1290,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["span",{"_index":1132,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/app.component.ts",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:28",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/area",{"_index":241,"title":{},"body":{"interfaces/Bodega.html":{},"coverage.html":{}}}],["src/app/auditor",{"_index":72,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"coverage.html":{}}}],["src/app/bodega",{"_index":590,"title":{},"body":{"interfaces/Bodega-1.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":671,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:113",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:136",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:153",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:25",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:33",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:39",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:53",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:68",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:86",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":964,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:100",{"_index":1001,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:113",{"_index":1012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:121",{"_index":1000,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:129",{"_index":997,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:138",{"_index":1019,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:15",{"_index":1028,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:16",{"_index":1027,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:17",{"_index":984,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:26",{"_index":1026,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:35",{"_index":1014,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:48",{"_index":986,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:57",{"_index":1024,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:72",{"_index":993,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:82",{"_index":1010,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:92",{"_index":1004,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts",{"_index":1144,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"coverage.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:103",{"_index":1179,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:112",{"_index":1178,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:121",{"_index":1192,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:132",{"_index":1182,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:145",{"_index":1160,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:161",{"_index":1183,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:175",{"_index":1185,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:184",{"_index":1171,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:193",{"_index":1162,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:208",{"_index":1188,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:227",{"_index":1165,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:68",{"_index":1196,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:75",{"_index":1197,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:82",{"_index":1195,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:89",{"_index":1159,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["standalone",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["start",{"_index":228,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["started",{"_index":1386,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":663,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["step",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["step.active",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{}}}],["stock",{"_index":171,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["stored",{"_index":1410,"title":{},"body":{"index.html":{}}}],["storedprojects",{"_index":756,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["string",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["string(movimiento.numero).tolowercase().includes(searchterm",{"_index":768,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["striped",{"_index":1298,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["styles",{"_index":71,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["styleurls",{"_index":83,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["su",{"_index":884,"title":{},"body":{"components/LoginComponent.html":{}}}],["success",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["supera",{"_index":753,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["supervisor",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["suscriptores",{"_index":1017,"title":{},"body":{"components/NavbarComponent.html":{}}}],["switch",{"_index":1238,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["tabla",{"_index":473,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["table",{"_index":205,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":987,"title":{},"body":{"components/NavbarComponent.html":{}}}],["targetbodega",{"_index":438,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["targetbodega.products.push(product",{"_index":742,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["targetbodega.products.push(this.newproduct",{"_index":442,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["targetbodega.products.some(p",{"_index":741,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["tbody",{"_index":1293,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["td",{"_index":198,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["td::before",{"_index":1309,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["td:last",{"_index":1295,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tem",{"_index":621,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["template",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["templateurl",{"_index":85,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["tems",{"_index":596,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["term",{"_index":764,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["test",{"_index":1415,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1425,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1414,"title":{},"body":{"index.html":{}}}],["text",{"_index":199,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["texto",{"_index":1117,"title":{},"body":{"components/NavbarComponent.html":{}}}],["th",{"_index":197,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["thead",{"_index":1291,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.allproducts",{"_index":416,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.authservice.getcurrentuser().firstname",{"_index":495,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.authservice.getcurrentuser().lastname",{"_index":496,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.authservice.isbodega",{"_index":1211,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.authservice.isroleallowed(allowedroles",{"_index":1043,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.email",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":1041,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.birthdate",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.bodegas",{"_index":408,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.bodegas.find(b",{"_index":439,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.bodegas.foreach(bodega",{"_index":736,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.bodegas.length",{"_index":336,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.bodegas.push",{"_index":337,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.bodegas.reduce((acc",{"_index":417,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.bodegas[0",{"_index":339,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.bodegas[1",{"_index":716,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.cantidadingreso",{"_index":475,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.cantidadsalida",{"_index":514,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.checkscreensize",{"_index":1033,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.checkscreensize.bind(this",{"_index":1035,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.closemodal",{"_index":1231,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.currentopendropdown",{"_index":1040,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.emailerror",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.emailvalid",{"_index":867,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filteredhistorial",{"_index":713,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.filteredproducts",{"_index":153,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.filteringreso",{"_index":773,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.filtersalida",{"_index":774,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.filtertraslado",{"_index":775,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.fullname",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.historial",{"_index":320,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.historial.filter((movimiento",{"_index":765,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.ingresoitems",{"_index":497,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.ingresoitems.find(item",{"_index":469,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.ingresoitems.foreach(item",{"_index":479,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.ingresoitems.map(i",{"_index":489,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.ingresoitems.push",{"_index":474,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.ingresoitems.splice(index",{"_index":477,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.isadult",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isbodega",{"_index":1210,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.issidebarcollapsed",{"_index":1038,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loadallproducts",{"_index":335,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.loadbodegas",{"_index":334,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.loadnotifications",{"_index":1209,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.loadusers",{"_index":333,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.loginerror",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.motivosalida",{"_index":525,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.newbodeganame",{"_index":457,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.newproduct",{"_index":444,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.newproduct.bodega",{"_index":441,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.newproduct.code",{"_index":436,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.normalizecode(code",{"_index":353,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.normalizecode(product.code",{"_index":355,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.normalizecode(this.newproduct.code",{"_index":437,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.notifications",{"_index":1212,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.notifications.filter(notification",{"_index":1215,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.notificationservice.pendingcount$.subscribe(count",{"_index":1030,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.notificationservice.setpendingcount(count",{"_index":1218,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.numerodocumento",{"_index":524,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.onrequestmodification",{"_index":614,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct",{"_index":625,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.brand",{"_index":637,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.color",{"_index":643,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.currency",{"_index":652,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.description",{"_index":631,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.family",{"_index":646,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.location",{"_index":658,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.material",{"_index":640,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.model",{"_index":634,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.name",{"_index":628,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.unit",{"_index":655,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.value",{"_index":649,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.password",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.pendingnotificationscount",{"_index":1031,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.productcodeexists",{"_index":365,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productexists(this.newproduct.code",{"_index":366,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.products",{"_index":152,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.products.filter(product",{"_index":156,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.products.find(p",{"_index":522,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.products.find(product",{"_index":512,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.products[index",{"_index":161,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["this.productservice.addmovimiento",{"_index":484,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.addnotification(modificationrequest",{"_index":669,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.productservice.addproduct(this.newproduct",{"_index":743,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.deleteproductbycode(this.producttodelete.code",{"_index":731,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.getnextingresonumber",{"_index":330,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.getnextsalidanumber",{"_index":332,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.getnotifications",{"_index":1213,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.productservice.historial$.subscribe(historial",{"_index":319,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.incrementnextingresonumber",{"_index":498,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.incrementnextsalidanumber",{"_index":528,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.products$.subscribe(products",{"_index":151,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.updatenotifications(this.notifications",{"_index":1232,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.productservice.updatenotificationstatus(this.selectednotification.id",{"_index":1228,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.productservice.updateproduct(product.code",{"_index":483,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.productservice.updateproduct(productcode",{"_index":1226,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.producttodelete",{"_index":383,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.projects",{"_index":710,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.projects.find((project",{"_index":777,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.proyectosservice.proyectos$.subscribe(projects",{"_index":709,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.recoveryemail",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.registererror",{"_index":745,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.registersuccess",{"_index":746,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.registronumeroingreso",{"_index":329,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.registronumerosalida",{"_index":331,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.relatedproject",{"_index":760,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.router.navigate(['/inicio",{"_index":1049,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1042,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.url",{"_index":1045,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.salidaitems",{"_index":527,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.salidaitems.find(item",{"_index":510,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.salidaitems.foreach(item",{"_index":521,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.salidaitems.map(i",{"_index":526,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.salidaitems.push",{"_index":513,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.salidaitems.splice(index",{"_index":519,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.savebodegas",{"_index":340,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.savenotifications",{"_index":1230,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.searchhistorialterm.tolowercase",{"_index":762,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.searchproductterm",{"_index":154,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodega",{"_index":338,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodega.name",{"_index":426,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodega.products",{"_index":318,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodega.products.filter(product",{"_index":379,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodega.products.find(p",{"_index":480,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodega.products.some(product",{"_index":354,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodega.products.splice(this.selectedproductindextodelete",{"_index":391,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.selectedbodega.products[index",{"_index":384,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodega.products[this.selectedproductindextoedit",{"_index":427,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodegadestino",{"_index":561,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodegadestino!.products.find(p",{"_index":568,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodegadestino!.products.push",{"_index":571,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodegadestino.name",{"_index":576,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodegaorigen",{"_index":560,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodegaorigen!.products",{"_index":573,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodegaorigen!.products.filter(product",{"_index":574,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodegaorigen!.products.find(p",{"_index":566,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedbodegaorigen.name",{"_index":575,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedmovimiento",{"_index":541,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectednotification",{"_index":1219,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.cambiossolicitados",{"_index":1227,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.cambiossolicitados[field",{"_index":1235,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.productooriginal.code",{"_index":1225,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.productooriginal[field",{"_index":1234,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectednotification.status",{"_index":1229,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.selectedproduct",{"_index":160,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedproduct!.code",{"_index":471,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedproductindextodelete",{"_index":382,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedproductindextoedit",{"_index":400,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedproductsalida",{"_index":747,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedproductsalida!.code",{"_index":748,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedproductsalida?.code",{"_index":509,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit",{"_index":401,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedproducttoedit.bodega",{"_index":425,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedproducttoedit.brand",{"_index":636,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.color",{"_index":642,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.currency",{"_index":651,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.description",{"_index":630,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.family",{"_index":645,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.location",{"_index":657,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.material",{"_index":639,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.model",{"_index":633,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.name",{"_index":627,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.unit",{"_index":654,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.value",{"_index":648,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttraslado",{"_index":552,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.selectedproducttraslado!.code",{"_index":554,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.showstep(1",{"_index":883,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showstep(2",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showstep(3",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.supervisor",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tipodocumento",{"_index":523,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.today",{"_index":321,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.trasladoitems",{"_index":583,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.trasladoitems.find(item",{"_index":553,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.trasladoitems.foreach(item",{"_index":564,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.trasladoitems.map(item",{"_index":579,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.trasladoitems.push",{"_index":555,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.trasladoitems.splice(index",{"_index":557,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.updatebodegaproducts",{"_index":708,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["this.updatependingnotificationscount",{"_index":1214,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["this.users",{"_index":376,"title":{},"body":{"interfaces/Bodega.html":{}}}],["this.workarea",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{}}}],["tipo",{"_index":285,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["tipodocumento",{"_index":287,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["title",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/NotificacionesComponent.html":{}}}],["todas",{"_index":414,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["today",{"_index":297,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["todos",{"_index":252,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["toggle::after",{"_index":1090,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggledropdown",{"_index":980,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggledropdown(dropdownid",{"_index":1018,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglepasswordvisibility",{"_index":726,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["togglesidebar",{"_index":981,"title":{},"body":{"components/NavbarComponent.html":{}}}],["top",{"_index":232,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["touppercase(event",{"_index":359,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["tr",{"_index":1294,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tr:hover",{"_index":1315,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tr:last",{"_index":1297,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tr:nth",{"_index":1299,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["trabajo",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["traduce",{"_index":1189,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["traducido",{"_index":1191,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["transform",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{}}}],["transition",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["translate",{"_index":1058,"title":{},"body":{"components/NavbarComponent.html":{}}}],["translatestatus",{"_index":1157,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["translatestatus(notification.status",{"_index":1247,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["translatestatus(selectednotification?.status",{"_index":1249,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["translatestatus(status",{"_index":1187,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["transparent",{"_index":1322,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["traslado",{"_index":308,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["trasladobodegamodal",{"_index":586,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["trasladobodegamodal.dispose",{"_index":589,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["trasladobodegamodal.hide",{"_index":588,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["trasladobodegamodalelement",{"_index":584,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["trasladoitems",{"_index":309,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["traslados",{"_index":702,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["true",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["tslib",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":887,"title":{},"body":{"components/LoginComponent.html":{}}}],["type",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{},"coverage.html":{}}}],["type(odd",{"_index":1300,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["typeof",{"_index":718,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["término",{"_index":121,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["título",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["ubicación",{"_index":194,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ul",{"_index":1323,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["un",{"_index":135,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["una",{"_index":100,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["undefined",{"_index":1164,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["unidad",{"_index":170,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["unidades",{"_index":487,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["unit",{"_index":277,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{},"index.html":{}}}],["uno",{"_index":617,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["unread",{"_index":1064,"title":{},"body":{"components/NavbarComponent.html":{}}}],["updatebodegaproducts",{"_index":735,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["updatependingnotificationscount",{"_index":1158,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["upload.component",{"_index":678,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["upload/bulk",{"_index":677,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["uppercase",{"_index":715,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["url(../../assets/img/fondos/inicio.png",{"_index":898,"title":{},"body":{"components/LoginComponent.html":{}}}],["use",{"_index":1406,"title":{},"body":{"index.html":{}}}],["user",{"_index":744,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Proyecto.html":{}}}],["user.email",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{}}}],["usermodal",{"_index":720,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["usermodal.show",{"_index":722,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["users",{"_index":315,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{}}}],["users.find((user",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{}}}],["usuario",{"_index":494,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Proyecto.html":{}}}],["usuarios",{"_index":368,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"components/NavbarComponent.html":{}}}],["valida",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{}}}],["validateage",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["validateage(event",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["validated",{"_index":449,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["validation",{"_index":447,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["valor",{"_index":189,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["value",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Proyecto.html":{}}}],["var",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ver",{"_index":397,"title":{},"body":{"interfaces/Bodega.html":{},"components/NotificacionesComponent.html":{}}}],["verdadero",{"_index":347,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["verifica",{"_index":346,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["verificar",{"_index":1177,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["verifyemail",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["version",{"_index":1391,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":202,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["via",{"_index":1417,"title":{},"body":{"index.html":{}}}],["visibilidad",{"_index":724,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["visualiza",{"_index":609,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["visualizar",{"_index":610,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["void",{"_index":115,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Proyecto.html":{}}}],["vr",{"_index":1091,"title":{},"body":{"components/NavbarComponent.html":{}}}],["vuelve",{"_index":547,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["válidas",{"_index":563,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["válido",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{}}}],["warning",{"_index":1243,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{}}}],["weight",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["white",{"_index":218,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{}}}],["width",{"_index":234,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["window.addeventlistener('resize",{"_index":1034,"title":{},"body":{"components/NavbarComponent.html":{}}}],["window.innerwidth",{"_index":1037,"title":{},"body":{"components/NavbarComponent.html":{}}}],["workarea",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["wrapper",{"_index":893,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["x",{"_index":1108,"title":{},"body":{"components/NavbarComponent.html":{}}}],["xito",{"_index":693,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["xlsx",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["y",{"_index":989,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ya",{"_index":303,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["year",{"_index":323,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Proyecto.html":{}}}],["z",{"_index":1105,"title":{},"body":{"components/NavbarComponent.html":{}}}],["zone.js",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                NavbarComponent\n                \n            \n\n\n\n            \n                template\n                \nHello, {{ title }}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'erp-praxa'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    Título de la aplicación.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/**\n * Componente principal de la aplicación.\n * \n * @export\n * @class AppComponent\n */\n@Component({\n  selector: 'app-root',\n  template: `\n    \n    Hello, {{ title }}\n    \n  `,\n  standalone: true,\n  imports: [RouterModule, NavbarComponent]\n})\nexport class AppComponent {\n  /**\n   * Título de la aplicación.\n   * \n   * @type {string}\n   * @memberof AppComponent\n   */\n  title: string = 'erp-praxa';\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Hello, {{ title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuditorDashboardComponent.html":{"url":"components/AuditorDashboardComponent.html","title":"component - AuditorDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuditorDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auditor-dashboard/auditor-dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente del panel de control del auditor.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auditor-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./auditor-dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auditor-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredProducts\n                            \n                            \n                                products\n                            \n                            \n                                searchProductTerm\n                            \n                            \n                                selectedProduct\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSearchProduct\n                            \n                            \n                                onViewProductInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:53\n                            \n                        \n\n                \n                    \n                            Crea una instancia de AuditorDashboardComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                    ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de productos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Método que se ejecuta al inicializar el componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchProduct\n                        \n                    \n                \n            \n            \n                \nonSearchProduct(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Filtra los productos según el término de búsqueda ingresado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de entrada de búsqueda\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onViewProductInfo\n                        \n                    \n                \n            \n            \n                \nonViewProductInfo(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Muestra la información del producto seleccionado en un modal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Índice del producto seleccionado en la lista\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredProducts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:37\n                        \n                    \n\n            \n                \n                    Lista de productos filtrados.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:29\n                        \n                    \n\n            \n                \n                    Lista de productos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchProductTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:45\n                        \n                    \n\n            \n                \n                    Término de búsqueda de productos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:53\n                        \n                    \n\n            \n                \n                    Producto seleccionado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ProductService, Product } from '../service/product.service';\nimport * as bootstrap from 'bootstrap';\n\n/**\n * Componente del panel de control del auditor.\n * \n * @export\n * @class AuditorDashboardComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-auditor-dashboard',\n  templateUrl: './auditor-dashboard.component.html',\n  styleUrls: ['./auditor-dashboard.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\nexport class AuditorDashboardComponent implements OnInit {\n\n  /**\n   * Lista de productos.\n   * \n   * @type {Product[]}\n   * @memberof AuditorDashboardComponent\n   */\n  products: Product[] = [];\n\n  /**\n   * Lista de productos filtrados.\n   * \n   * @type {Product[]}\n   * @memberof AuditorDashboardComponent\n   */\n  filteredProducts: Product[] = [];\n\n  /**\n   * Término de búsqueda de productos.\n   * \n   * @type {string}\n   * @memberof AuditorDashboardComponent\n   */\n  searchProductTerm: string = '';\n\n  /**\n   * Producto seleccionado.\n   * \n   * @type {(Product | null)}\n   * @memberof AuditorDashboardComponent\n   */\n  selectedProduct: Product | null = null;\n\n  /**\n   * Crea una instancia de AuditorDashboardComponent.\n   * \n   * @param {ProductService} productService Servicio de productos\n   * @memberof AuditorDashboardComponent\n   */\n  constructor(private productService: ProductService) {}\n\n  /**\n   * Método que se ejecuta al inicializar el componente.\n   * \n   * @memberof AuditorDashboardComponent\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = products;\n    });\n  }\n\n  /**\n   * Filtra los productos según el término de búsqueda ingresado.\n   * \n   * @param {any} event Evento de entrada de búsqueda\n   * @memberof AuditorDashboardComponent\n   */\n  onSearchProduct(event: any) {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.products;\n    }\n  }\n\n  /**\n   * Muestra la información del producto seleccionado en un modal.\n   * \n   * @param {number} index Índice del producto seleccionado en la lista\n   * @memberof AuditorDashboardComponent\n   */\n  onViewProductInfo(index: number) {\n    this.selectedProduct = this.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n}\n\n    \n\n    \n        \n\n    \n    Inventario\n    \n    \n    \n    \n        \n        CÓDIGO\n        DESCRIPCIÓN\n        UNIDAD\n        STOCK\n        HERRAMIENTAS\n        \n    \n    \n        \n        {{ product.code }}\n        {{ product.description }}\n        {{ product.unit }}\n        {{ product.stock }}\n        \n            \n            \n                \n            \n            \n        \n        \n    \n    \n\n  \n  \n\n\n    \n    \n        Información del Producto\n        \n    \n    \n        Código: {{ selectedProduct?.code }}\n        Descripción: {{ selectedProduct?.description }}\n        Modelo: {{ selectedProduct?.model }}\n        Marca: {{ selectedProduct?.brand }}\n        Material: {{ selectedProduct?.material }}\n        Color: {{ selectedProduct?.color }}\n        Familia: {{ selectedProduct?.family }}\n        Valor: {{ selectedProduct?.value }}\n        Moneda: {{ selectedProduct?.currency }}\n        Unidad: {{ selectedProduct?.unit }}\n        Ubicación: {{ selectedProduct?.location }}\n        Stock: {{ selectedProduct?.stock }}\n    \n    \n\n\n\n    \n\n    \n                \n                    ./auditor-dashboard.component.css\n                \n                th, td \n{\n  text-align: center;\n  vertical-align: middle;\n}\n\n.inventory-table-container {\n  padding: 20px;\n}\n\n.table {\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.table-bordered {\n  border: 1px solid #dee2e6;\n}\n\n.table th, .table td {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.main-content {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-left: 240px;\n  padding-top: 70px;\n  width: calc(100% - 240px);\n  }\n  \n  .container {\n  max-width: 90%;\n  width: 100%;\n  }\n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Inventario                                CÓDIGO        DESCRIPCIÓN        UNIDAD        STOCK        HERRAMIENTAS                                {{ product.code }}        {{ product.description }}        {{ product.unit }}        {{ product.stock }}                                                                                                                    Información del Producto                        Código: {{ selectedProduct?.code }}        Descripción: {{ selectedProduct?.description }}        Modelo: {{ selectedProduct?.model }}        Marca: {{ selectedProduct?.brand }}        Material: {{ selectedProduct?.material }}        Color: {{ selectedProduct?.color }}        Familia: {{ selectedProduct?.family }}        Valor: {{ selectedProduct?.value }}        Moneda: {{ selectedProduct?.currency }}        Unidad: {{ selectedProduct?.unit }}        Ubicación: {{ selectedProduct?.location }}        Stock: {{ selectedProduct?.stock }}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuditorDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bodega.html":{"url":"interfaces/Bodega.html","title":"interface - Bodega","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bodega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/area-dashboard/area-dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para representar una bodega.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la bodega.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:     Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lista de productos en la bodega.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as bootstrap from 'bootstrap';\nimport { ProductService, Product, Movimiento } from '../service/product.service';\nimport { AuthService } from '../auth/auth.service';\n\n/**\n * Interfaz para representar una bodega.\n * @interface\n */\ninterface Bodega {\n  /**\n   * Nombre de la bodega.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Lista de productos en la bodega.\n   * @type {Product[]}\n   */\n  products: Product[];\n}\n\n/**\n * Componente del panel de control del área.\n * \n * @export\n * @class AreaDashboardComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-area-dashboard',\n  templateUrl: './area-dashboard.component.html',\n  styleUrls: ['./area-dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, CommonModule]\n})\nexport class AreaDashboardComponent implements OnInit {\n  /**\n   * Lista de productos.\n   * \n   * @type {Product[]}\n   * @memberof AreaDashboardComponent\n   */\n  products: Product[] = [];\n\n  /**\n   * Lista de todos los productos.\n   * \n   * @type {Product[]}\n   * @memberof AreaDashboardComponent\n   */\n  allProducts: Product[] = [];\n\n  /**\n   * Lista de productos filtrados.\n   * \n   * @type {Product[]}\n   * @memberof AreaDashboardComponent\n   */\n  filteredProducts: Product[] = [];\n\n  /**\n   * Historial de movimientos.\n   * \n   * @type {Movimiento[]}\n   * @memberof AreaDashboardComponent\n   */\n  historial: Movimiento[] = [];\n\n  /**\n   * Índice del producto seleccionado para eliminar.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductIndexToDelete: number = -1;\n\n  /**\n   * Índice del producto seleccionado para editar.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductIndexToEdit: number = -1;\n\n  /**\n   * Producto seleccionado.\n   * \n   * @type {(Product | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProduct: Product | null = null;\n\n  /**\n   * Producto seleccionado para salida.\n   * \n   * @type {(Product | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductSalida: Product | null = null;\n\n  /**\n   * Lista de bodegas.\n   * \n   * @type {Bodega[]}\n   * @memberof AreaDashboardComponent\n   */\n  bodegas: Bodega[] = [];\n\n  /**\n   * Bodega seleccionada.\n   * \n   * @type {Bodega}\n   * @memberof AreaDashboardComponent\n   */\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n\n  /**\n   * Nombre de la nueva bodega.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  newBodegaName: string = '';\n\n  /**\n   * Término de búsqueda de productos.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  searchProductTerm: string = '';\n\n  /**\n   * Nuevo producto a agregar.\n   * \n   * @type {Product}\n   * @memberof AreaDashboardComponent\n   */\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Items de ingreso.\n   * \n   * @type {any[]}\n   * @memberof AreaDashboardComponent\n   */\n  ingresoItems: any[] = [];\n\n  /**\n   * Items de salida.\n   * \n   * @type {any[]}\n   * @memberof AreaDashboardComponent\n   */\n  salidaItems: any[] = [];\n\n  /**\n   * Cantidad de ingreso.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  cantidadIngreso: number = 1;\n\n  /**\n   * Cantidad de salida.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  cantidadSalida: number = 1;\n\n  /**\n   * Tipo de documento.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  tipoDocumento: string = '';\n\n  /**\n   * Número de documento.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  numeroDocumento: string = '';\n\n  /**\n   * Motivo de salida.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  motivoSalida: string = '';\n\n  /**\n   * Número de registro de ingreso.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  registroNumeroIngreso: number = 0;\n\n  /**\n   * Número de registro de salida.\n   * \n   * @type {number}\n   * @memberof AreaDashboardComponent\n   */\n  registroNumeroSalida: number = 0;\n\n  /**\n   * Fecha actual.\n   * \n   * @type {string}\n   * @memberof AreaDashboardComponent\n   */\n  today: string = '';\n\n  /**\n   * Movimiento seleccionado.\n   * \n   * @type {(Movimiento | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedMovimiento: Movimiento | null = null;\n\n  /**\n   * Producto seleccionado para editar.\n   * \n   * @type {Product}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Producto a eliminar.\n   * \n   * @type {(Product | null)}\n   * @memberof AreaDashboardComponent\n   */\n  productToDelete: Product | null = null;\n\n  /**\n   * Indica si el código del producto ya existe.\n   * \n   * @type {boolean}\n   * @memberof AreaDashboardComponent\n   */\n  productCodeExists: boolean = false;\n\n  /**\n   * Items de traslado.\n   * \n   * @type {any[]}\n   * @memberof AreaDashboardComponent\n   */\n  trasladoItems: any[] = [];\n\n  /**\n   * Bodega de origen seleccionada para traslado.\n   * \n   * @type {(Bodega | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedBodegaOrigen: Bodega | null = null;\n\n  /**\n   * Bodega de destino seleccionada para traslado.\n   * \n   * @type {(Bodega | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedBodegaDestino: Bodega | null = null;\n\n  /**\n   * Producto seleccionado para traslado.\n   * \n   * @type {(Product | null)}\n   * @memberof AreaDashboardComponent\n   */\n  selectedProductTraslado: Product | null = null;\n  users: any;\n\n  /**\n   * Crea una instancia de AreaDashboardComponent.\n   * \n   * @param {ProductService} productService Servicio de productos\n   * @param {AuthService} authService Servicio de autenticación\n   * @memberof AreaDashboardComponent\n   */\n  constructor(private productService: ProductService, private authService: AuthService) {}\n\n  /**\n   * Método que se ejecuta al inicializar el componente.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = this.selectedBodega.products;\n    });\n    this.productService.historial$.subscribe(historial => this.historial = historial);\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadUsers();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'Bodega Principal', products: [] });\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n  }\n\n  /**\n   * Normaliza el código del producto.\n   * \n   * @param {string} code Código del producto\n   * @return {string} Código normalizado\n   * @memberof AreaDashboardComponent\n   */\n  normalizeCode(code: string): string {\n    return code.trim().toUpperCase();\n  }\n\n  /**\n   * Verifica si un producto existe en la bodega seleccionada.\n   * \n   * @param {string} code Código del producto\n   * @return {boolean} Verdadero si el producto existe, falso en caso contrario\n   * @memberof AreaDashboardComponent\n   */\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  /**\n   * Convierte el valor del input a mayúsculas.\n   * \n   * @param {Event} event Evento de entrada\n   * @memberof AreaDashboardComponent\n   */\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  /**\n   * Verifica si el código del producto existe.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  checkProductCode() {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  /**\n   * Carga los usuarios desde el almacenamiento local.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  loadUsers() {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    // Falta asignar el valor de `users` a `this.users` para que los usuarios carguen correctamente.\n    this.users = users;\n  }\n\n  /**\n   * Filtra los productos según el término de búsqueda ingresado.\n   * \n   * @param {any} event Evento de entrada de búsqueda\n   * @memberof AreaDashboardComponent\n   */\n  onSearchProduct(event: any) {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  /**\n   * Elimina el producto seleccionado.\n   * \n   * @param {number} index Índice del producto a eliminar\n   * @memberof AreaDashboardComponent\n   */\n  onDeleteProduct(index: number) {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  /**\n   * Confirma la eliminación del producto.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onConfirmDelete() {\n    if (this.selectedProductIndexToDelete !== -1) {\n      this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n      this.saveBodegas();\n      this.selectedProductIndexToDelete = -1;\n      this.productToDelete = null;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  /**\n   * Actualiza el producto en la bodega seleccionada.\n   * \n   * @param {number} index Índice del producto a actualizar\n   * @param {Product} product Producto a actualizar\n   * @memberof AreaDashboardComponent\n   */\n  onUpdateProduct(index: number, product: Product) {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  /**\n   * Muestra la información del producto seleccionado en un modal.\n   * \n   * @param {number} index Índice del producto a ver\n   * @memberof AreaDashboardComponent\n   */\n  onViewProductInfo(index: number) {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  /**\n   * Edita el producto seleccionado.\n   * \n   * @param {number} index Índice del producto a editar\n   * @memberof AreaDashboardComponent\n   */\n  onEditProduct(index: number) {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n\n  /**\n   * Carga las bodegas desde el almacenamiento local.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  loadBodegas() {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas);\n    } else {\n      this.bodegas = [];\n    }\n  } \n\n  /**\n   * Guarda las bodegas en el almacenamiento local.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  saveBodegas() {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  /**\n   * Carga todos los productos de todas las bodegas.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  loadAllProducts() {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  /**\n   * Selecciona una bodega.\n   * \n   * @param {Bodega} bodega Bodega a seleccionar\n   * @memberof AreaDashboardComponent\n   */\n  selectBodega(bodega: Bodega) {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  /**\n   * Guarda el producto editado.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onSaveEditProduct() {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      this.selectedProductToEdit.bodega = this.selectedBodega.name;\n      this.selectedBodega.products[this.selectedProductIndexToEdit] = this.selectedProductToEdit;\n      this.saveBodegas();\n      this.selectedProductToEdit = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.selectedProductIndexToEdit = -1;\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      editProductModal?.hide();\n    }\n  }\n\n  /**\n   * Agrega un nuevo producto a la bodega seleccionada.\n   * \n   * @param {NgForm} form Formulario del producto\n   * @memberof AreaDashboardComponent\n   */\n  onAddProduct(form: NgForm) {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts();\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Agrega una nueva bodega.\n   * \n   * @param {NgForm} form Formulario de la bodega\n   * @memberof AreaDashboardComponent\n   */\n  addBodega(form: NgForm) {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  /**\n   * Reinicia el formulario.\n   * \n   * @param {NgForm} form Formulario a reiniciar\n   * @param {'product'} type Tipo de formulario (producto)\n   * @memberof AreaDashboardComponent\n   */\n  resetForm(form: NgForm, type: 'product') {\n    form.resetForm();\n    if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de ingreso.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onAddProductoToIngreso() {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  /**\n   * Elimina un producto de la lista de ingreso.\n   * \n   * @param {number} index Índice del producto a eliminar\n   * @memberof AreaDashboardComponent\n   */\n  onEliminarItem(index: number) {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el ingreso de productos a la bodega.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onConfirmarIngreso() {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n        const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n        if (ingresoBodegaModal) {\n            ingresoBodegaModal.hide();\n            setTimeout(() => ingresoBodegaModal.dispose(), 500);\n        }\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de salida.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onAddProductoToSalida() {\n    const selectedProductCode = this.selectedProductSalida?.code;\n    if (!selectedProductCode) return;\n\n    const existingItem = this.salidaItems.find(item => item.product.code === selectedProductCode);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    const productToAdd = this.products.find(product => product.code === selectedProductCode);\n    if (productToAdd) {\n      this.salidaItems.push({\n        product: productToAdd,\n        cantidad: this.cantidadSalida\n      });\n      this.cantidadSalida = 1;\n    }\n  }\n\n  /**\n   * Muestra el modal para agregar una nueva bodega.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  openAddBodegaModal() {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  /**\n   * Elimina un producto de la lista de salida.\n   * \n   * @param {number} index Índice del producto a eliminar\n   * @memberof AreaDashboardComponent\n   */\n  onEliminarItemSalida(index: number) {\n    this.salidaItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma la salida de productos de la bodega.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onConfirmarSalida() {\n    this.salidaItems.forEach(item => {\n      const product = this.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock -= item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Salida',\n          numero: this.registroNumeroSalida,\n          fecha: this.today,\n          documento: `${this.tipoDocumento} ${this.numeroDocumento}`,\n          detalles: this.motivoSalida,\n          items: this.salidaItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n        const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n        if (salidaBodegaModal) {\n            salidaBodegaModal.hide();\n            setTimeout(() => salidaBodegaModal.dispose(), 500);\n        }\n    }\n  }\n\n  /**\n   * Abre el historial de movimientos en un modal.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Muestra los detalles de un movimiento en un modal.\n   * \n   * @param {Movimiento} movimiento Movimiento a ver\n   * @memberof AreaDashboardComponent\n   */\n  onVerDetallesMovimiento(movimiento: Movimiento) {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  /**\n   * Vuelve al historial de movimientos desde el modal de detalles.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Agrega un producto a la lista de traslado.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onAddProductoToTraslado() {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n  \n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n  \n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n\n  /**\n   * Elimina un producto de la lista de traslado.\n   * \n   * @param {number} index Índice del producto a eliminar\n   * @memberof AreaDashboardComponent\n   */\n  onEliminarItemTraslado(index: number) {\n    this.trasladoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el traslado de productos entre bodegas.\n   * \n   * @memberof AreaDashboardComponent\n   */\n  onConfirmarTraslado() {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n  \n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n  \n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n  \n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n  \n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n  \n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bodega-1.html":{"url":"interfaces/Bodega-1.html","title":"interface - Bodega-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bodega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/bodega-dashboard/bodega-dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para representar una bodega.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la bodega.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:     Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lista de productos almacenados en la bodega.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule, ReactiveFormsModule } from '@angular/forms'; // Añadir ReactiveFormsModule\nimport { CommonModule } from '@angular/common';\nimport * as bootstrap from 'bootstrap';\nimport { ProductService, Product, Movimiento, PartialProduct } from '../service/product.service';\nimport { AuthService } from '../auth/auth.service';\n\n/**\n * Interfaz para representar una bodega.\n * @interface\n */\ninterface Bodega {\n  /**\n   * Nombre de la bodega.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Lista de productos almacenados en la bodega.\n   * @type {Product[]}\n   */\n  products: Product[];\n}\n\n\n@Component({\n  selector: 'app-bodega-dashboard',\n  templateUrl: './bodega-dashboard.component.html',\n  styleUrls: ['./bodega-dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, CommonModule] // Añadir ReactiveFormsModule\n})\n/**\n * Componente del panel de control de la bodega.\n * @class\n * @implements {OnInit}\n */\nexport class BodegaDashboardComponent implements OnInit {\n  /**\n   * Lista de productos.\n   * @type {Product[]}\n   */\n  products: Product[] = [];\n\n  /**\n   * Lista de todos los productos.\n   * @type {Product[]}\n   */\n  allProducts: Product[] = [];\n\n  /**\n   * Lista de productos filtrados.\n   * @type {Product[]}\n   */\n  filteredProducts: Product[] = [];\n\n  /**\n   * Historial de movimientos.\n   * @type {Movimiento[]}\n   */\n  historial: Movimiento[] = [];\n\n  /**\n   * Índice del producto seleccionado para eliminar.\n   * @type {number}\n   */\n  selectedProductIndexToDelete: number = -1;\n\n  /**\n   * Índice del producto seleccionado para editar.\n   * @type {number}\n   */\n  selectedProductIndexToEdit: number = -1;\n\n  /**\n   * Producto seleccionado.\n   * @type {Product | null}\n   */\n  selectedProduct: Product | null = null;\n\n  /**\n   * Producto seleccionado para salida.\n   * @type {Product | null}\n   */\n  selectedProductSalida: Product | null = null;\n\n  /**\n   * Lista de bodegas.\n   * @type {Bodega[]}\n   */\n  bodegas: Bodega[] = [];\n\n  /**\n   * Bodega seleccionada.\n   * @type {Bodega}\n   */\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n\n  /**\n   * Nombre de la nueva bodega.\n   * @type {string}\n   */\n  newBodegaName: string = '';\n\n  /**\n   * Término de búsqueda de productos.\n   * @type {string}\n   */\n  searchProductTerm: string = '';\n\n  /**\n   * Nuevo producto a agregar.\n   * @type {Product}\n   */\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Lista de ítems de ingreso.\n   * @type {any[]}\n   */\n  ingresoItems: any[] = [];\n\n  /**\n   * Lista de ítems de salida.\n   * @type {any[]}\n   */\n  salidaItems: any[] = [];\n\n  /**\n   * Cantidad de productos a ingresar.\n   * @type {number}\n   */\n  cantidadIngreso: number = 1;\n\n  /**\n   * Cantidad de productos a sacar.\n   * @type {number}\n   */\n  cantidadSalida: number = 1;\n\n  /**\n   * Tipo de documento.\n   * @type {string}\n   */\n  tipoDocumento: string = '';\n\n  /**\n   * Número de documento.\n   * @type {string}\n   */\n  numeroDocumento: string = '';\n\n  /**\n   * Motivo de la salida.\n   * @type {string}\n   */\n  motivoSalida: string = '';\n\n  /**\n   * Número de registro de ingreso.\n   * @type {number}\n   */\n  registroNumeroIngreso: number = 0;\n\n  /**\n   * Número de registro de salida.\n   * @type {number}\n   */\n  registroNumeroSalida: number = 0;\n\n  /**\n   * Fecha actual.\n   * @type {string}\n   */\n  today: string = '';\n\n  /**\n   * Movimiento seleccionado.\n   * @type {Movimiento | null}\n   */\n  selectedMovimiento: Movimiento | null = null;\n\n  /**\n   * Producto seleccionado para editar.\n   * @type {Product}\n   */\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  /**\n   * Producto a eliminar.\n   * @type {Product | null}\n   */\n  productToDelete: Product | null = null;\n\n  /**\n   * Indica si el código del producto ya existe.\n   * @type {boolean}\n   */\n  productCodeExists: boolean = false;\n\n  /**\n   * Lista de ítems de traslado.\n   * @type {any[]}\n   */\n  trasladoItems: any[] = [];\n\n  /**\n   * Bodega de origen seleccionada.\n   * @type {Bodega | null}\n   */\n  selectedBodegaOrigen: Bodega | null = null;\n\n  /**\n   * Bodega de destino seleccionada.\n   * @type {Bodega | null}\n   */\n  selectedBodegaDestino: Bodega | null = null;\n\n  /**\n   * Producto seleccionado para traslado.\n   * @type {Product | null}\n   */\n  selectedProductTraslado: Product | null = null;\n\n  /**\n   * Producto original antes de editar.\n   * @type {Product | null}\n   */\n  originalProduct: Product | null = null;\n\n  /**\n   * Constructor del componente.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {AuthService} authService - Servicio de autenticación.\n   */\n  constructor(private productService: ProductService, private authService: AuthService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = this.selectedBodega.products;\n    });\n    this.productService.historial$.subscribe(historial => this.historial = historial);\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadUsers();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'Bodega Principal', products: [] });\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n  }\n\n  /**\n   * Normaliza el código del producto.\n   * @param {string} code - Código del producto.\n   * @returns {string} - Código normalizado.\n   */\n  normalizeCode(code: string): string {\n    return code.trim().toUpperCase();\n  }\n\n  /**\n   * Verifica si un producto existe en la bodega seleccionada.\n   * @param {string} code - Código del producto.\n   * @returns {boolean} - Verdadero si el producto existe, falso en caso contrario.\n   */\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  /**\n   * Convierte el valor de entrada a mayúsculas.\n   * @param {Event} event - Evento de entrada.\n   * @returns {void}\n   */\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  /**\n   * Verifica la existencia del código del producto.\n   * @returns {void}\n   */\n  checkProductCode(): void {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  /**\n   * Carga los usuarios del almacenamiento local.\n   * @returns {void}\n   */\n  loadUsers(): void {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n  }\n\n  /**\n   * Realiza la búsqueda de un producto.\n   * @param {Event} event - Evento de búsqueda.\n   * @returns {void}\n   */\n  onSearchProduct(event: any): void {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  /**\n   * Abre el modal de confirmación para eliminar un producto.\n   * @param {number} index - Índice del producto a eliminar.\n   * @returns {void}\n   */\n  onDeleteProduct(index: number): void {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  /**\n   * Confirma la eliminación de un producto.\n   * @returns {void}\n   */\n  onConfirmDelete(): void {\n    if (this.selectedProductIndexToDelete !== -1) {\n      this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n      this.saveBodegas();\n      this.selectedProductIndexToDelete = -1;\n      this.productToDelete = null;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  /**\n   * Actualiza un producto existente.\n   * @param {number} index - Índice del producto a actualizar.\n   * @param {Product} product - Datos del producto actualizados.\n   * @returns {void}\n   */\n  onUpdateProduct(index: number, product: Product): void {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  /**\n   * Visualiza la información de un producto.\n   * @param {number} index - Índice del producto a visualizar.\n   * @returns {void}\n   */\n  onViewProductInfo(index: number): void {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  /**\n   * Carga las bodegas del almacenamiento local.\n   * @returns {void}\n   */\n  loadBodegas(): void {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas);\n    } else {\n      this.bodegas = [];\n    }\n  }\n\n  /**\n   * Guarda las bodegas en el almacenamiento local.\n   * @returns {void}\n   */\n  saveBodegas(): void {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  /**\n   * Carga todos los productos de todas las bodegas.\n   * @returns {void}\n   */\n  loadAllProducts(): void {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  /**\n   * Selecciona una bodega.\n   * @param {Bodega} bodega - Bodega seleccionada.\n   * @returns {void}\n   */\n  selectBodega(bodega: Bodega): void {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  /**\n   * Guarda los cambios en un producto editado.\n   * @returns {void}\n   */\n  onSaveEditProduct(): void {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      if (editProductModal) {\n        editProductModal.hide();\n        setTimeout(() => editProductModal.dispose(), 500);\n      }\n      this.onRequestModification();\n    }\n  }\n\n  /**\n   * Agrega un nuevo producto.\n   * @param {NgForm} form - Formulario de producto.\n   * @returns {void}\n   */\n  onAddProduct(form: NgForm): void {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts(); // Recargar todos los productos después de agregar uno nuevo\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Agrega una nueva bodega.\n   * @param {NgForm} form - Formulario de bodega.\n   * @returns {void}\n   */\n  addBodega(form: NgForm): void {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  /**\n   * Restablece el formulario especificado.\n   * @param {NgForm} form - Formulario a restablecer.\n   * @param {'product'} type - Tipo de formulario.\n   * @returns {void}\n   */\n  resetForm(form: NgForm, type: 'product'): void {\n    form.resetForm();\n    if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de ingreso.\n   * @returns {void}\n   */\n  onAddProductoToIngreso(): void {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  /**\n   * Elimina un ítem de la lista de ingreso.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItem(index: number): void {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el ingreso de productos.\n   * @returns {void}\n   */\n  onConfirmarIngreso(): void {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n      const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n      if (ingresoBodegaModal) {\n        ingresoBodegaModal.hide();\n        setTimeout(() => ingresoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Agrega un producto a la lista de salida.\n   * @returns {void}\n   */\n  onAddProductoToSalida(): void {\n    const selectedProductCode = this.selectedProductSalida?.code;\n    if (!selectedProductCode) return;\n\n    const existingItem = this.salidaItems.find(item => item.product.code === selectedProductCode);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    const productToAdd = this.products.find(product => product.code === selectedProductCode);\n    if (productToAdd) {\n      this.salidaItems.push({\n        product: productToAdd,\n        cantidad: this.cantidadSalida\n      });\n      this.cantidadSalida = 1;\n    }\n  }\n\n  /**\n   * Muestra el modal para agregar una nueva bodega.\n   * @returns {void}\n   */\n  openAddBodegaModal(): void {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  /**\n   * Elimina un ítem de la lista de salida.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemSalida(index: number): void {\n    this.salidaItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma la salida de productos.\n   * @returns {void}\n   */\n  onConfirmarSalida(): void {\n    this.salidaItems.forEach(item => {\n      const product = this.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock -= item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Salida',\n          numero: this.registroNumeroSalida,\n          fecha: this.today,\n          documento: `${this.tipoDocumento} ${this.numeroDocumento}`,\n          detalles: this.motivoSalida,\n          items: this.salidaItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n      const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n      if (salidaBodegaModal) {\n        salidaBodegaModal.hide();\n        setTimeout(() => salidaBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Abre el historial de movimientos.\n   * @returns {void}\n   */\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Visualiza los detalles de un movimiento.\n   * @param {Movimiento} movimiento - Movimiento a visualizar.\n   * @returns {void}\n   */\n  onVerDetallesMovimiento(movimiento: Movimiento): void {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  /**\n   * Vuelve al historial de movimientos.\n   * @returns {void}\n   */\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Agrega un producto a la lista de traslado.\n   * @returns {void}\n   */\n  onAddProductoToTraslado(): void {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n\n  /**\n   * Elimina un ítem de la lista de traslado.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemTraslado(index: number): void {\n    this.trasladoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el traslado de productos.\n   * @returns {void}\n   */\n  onConfirmarTraslado(): void {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n\n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n\n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n\n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n\n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n\n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Solicita la modificación de un producto.\n   * @returns {void}\n   */\n  onRequestModification(): void {\n    if (!this.originalProduct) {\n      return;\n    }\n\n    const cambiosSolicitados: any = {};\n\n    if (this.selectedProductToEdit.name !== this.originalProduct.name) {\n      cambiosSolicitados.name = this.selectedProductToEdit.name;\n    }\n    if (this.selectedProductToEdit.description !== this.originalProduct.description) {\n      cambiosSolicitados.description = this.selectedProductToEdit.description;\n    }\n    if (this.selectedProductToEdit.model !== this.originalProduct.model) {\n      cambiosSolicitados.model = this.selectedProductToEdit.model;\n    }\n    if (this.selectedProductToEdit.brand !== this.originalProduct.brand) {\n      cambiosSolicitados.brand = this.selectedProductToEdit.brand;\n    }\n    if (this.selectedProductToEdit.material !== this.originalProduct.material) {\n      cambiosSolicitados.material = this.selectedProductToEdit.material;\n    }\n    if (this.selectedProductToEdit.color !== this.originalProduct.color) {\n      cambiosSolicitados.color = this.selectedProductToEdit.color;\n    }\n    if (this.selectedProductToEdit.family !== this.originalProduct.family) {\n      cambiosSolicitados.family = this.selectedProductToEdit.family;\n    }\n    if (this.selectedProductToEdit.value !== this.originalProduct.value) {\n      cambiosSolicitados.value = this.selectedProductToEdit.value;\n    }\n    if (this.selectedProductToEdit.currency !== this.originalProduct.currency) {\n      cambiosSolicitados.currency = this.selectedProductToEdit.currency;\n    }\n    if (this.selectedProductToEdit.unit !== this.originalProduct.unit) {\n      cambiosSolicitados.unit = this.selectedProductToEdit.unit;\n    }\n    if (this.selectedProductToEdit.location !== this.originalProduct.location) {\n      cambiosSolicitados.location = this.selectedProductToEdit.location;\n    }\n\n    const modificationRequest = {\n      id: new Date().getTime(),\n      status: 'pending',\n      message: 'Solicitud de modificación de producto',\n      solicitadaPor: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`,\n      productoOriginal: this.originalProduct as PartialProduct,\n      cambiosSolicitados: cambiosSolicitados\n    };\n\n    this.productService.addNotification(modificationRequest);\n\n    const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n    editProductModal?.hide();\n  }\n\n  /**\n   * Edita un producto existente.\n   * @param {number} index - Índice del producto a editar.\n   * @returns {void}\n   */\n  onEditProduct(index: number): void {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    this.originalProduct = { ...this.selectedBodega.products[index] }; // Guardar el producto original\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bodega-2.html":{"url":"interfaces/Bodega-2.html","title":"interface - Bodega-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bodega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una bodega en la aplicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    El nombre de la bodega.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:     Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lista de productos en la bodega.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product, Movimiento } from '../service/product.service';\nimport { ProyectosService } from '../service/proyecto.service';\nimport { BulkUploadComponent } from '../bulk-upload/bulk-upload.component';\nimport * as bootstrap from 'bootstrap';\n\n/**\n * Representa una bodega en la aplicación.\n * @interface Bodega\n */\ninterface Bodega {\n  /** El nombre de la bodega. */\n  name: string;\n  /** Lista de productos en la bodega. */\n  products: Product[];\n}\n\n/**\n * Representa un proyecto en la aplicación.\n * @interface Proyecto\n */\ninterface Proyecto {\n  /** El tipo de proyecto. */\n  tipo: string;\n  /** El número de identificación del proyecto. */\n  numero: string;\n  /** El nombre del proyecto. */\n  nombre: string;\n  /** El estado actual del proyecto (opcional). */\n  estado?: string;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, CommonModule, BulkUploadComponent]\n})\n/**\n * Componente del panel de control del dashboard.\n * @class\n * @implements {OnInit}\n */\nexport class DashboardComponent implements OnInit {\n  /** Lista de todos los productos. */\n  products: Product[] = [];\n  /** Lista de todos los productos combinados de todas las bodegas. */\n  allProducts: Product[] = [];\n  /** Lista de productos filtrados para mostrar. */\n  filteredProducts: Product[] = [];\n  /** Historial de movimientos de productos. */\n  historial: Movimiento[] = [];\n  /** Índice del producto seleccionado para eliminar. */\n  selectedProductIndexToDelete: number = -1;\n  /** Índice del producto seleccionado para editar. */\n  selectedProductIndexToEdit: number = -1;\n  /** Producto seleccionado actualmente. */\n  selectedProduct: Product | null = null;\n  /** Producto seleccionado actualmente para salida. */\n  selectedProductSalida: Product | null = null;\n  /** Lista de todas las bodegas. */\n  bodegas: Bodega[] = [];\n  /** Bodega seleccionada actualmente. */\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n  /** Nombre de la nueva bodega a agregar. */\n  newBodegaName: string = '';\n  /** Término de búsqueda para filtrar productos. */\n  searchProductTerm: string = '';\n  /** Nuevo producto a agregar. */\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n  /** Lista de ítems de ingreso. */\n  ingresoItems: any[] = [];\n  /** Lista de ítems de salida. */\n  salidaItems: any[] = [];\n  /** Cantidad de ingreso. */\n  cantidadIngreso: number = 1;\n  /** Cantidad de salida. */\n  cantidadSalida: number = 1;\n  /** Tipo de documento para la salida. */\n  tipoDocumento: string = '';\n  /** Número de documento para la salida. */\n  numeroDocumento: string = '';\n  /** Motivo de la salida. */\n  motivoSalida: string = '';\n  /** Número de registro de ingreso. */\n  registroNumeroIngreso: number = 0;\n  /** Número de registro de salida. */\n  registroNumeroSalida: number = 0;\n  /** Fecha actual en formato de cadena. */\n  today: string = '';\n  /** Movimiento seleccionado actualmente. */\n  selectedMovimiento: Movimiento | null = null;\n  /** Producto seleccionado actualmente para edición. */\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n  /** Producto a eliminar. */\n  productToDelete: Product | null = null;\n  /** Indica si el código del producto ya existe. */\n  productCodeExists: boolean = false;\n  /** Mensaje de error en el registro. */\n  registerError: string = '';\n  /** Mensaje de éxito en el registro. */\n  registerSuccess: string = '';\n  /** Lista de ítems de traslado. */\n  trasladoItems: any[] = [];\n  /** Bodega de origen seleccionada para traslado. */\n  selectedBodegaOrigen: Bodega | null = null;\n  /** Bodega de destino seleccionada para traslado. */\n  selectedBodegaDestino: Bodega | null = null;\n  /** Producto seleccionado actualmente para traslado. */\n  selectedProductTraslado: Product | null = null;\n  /** Término de búsqueda en el historial. */\n  searchHistorialTerm: string = '';\n  /** Lista de movimientos filtrados en el historial. */\n  filteredHistorial: Movimiento[] = [];\n  /** Filtro para mostrar ingresos en el historial. */\n  filterIngreso: boolean = true;\n  /** Filtro para mostrar salidas en el historial. */\n  filterSalida: boolean = true;\n  /** Filtro para mostrar traslados en el historial. */\n  filterTraslado: boolean = true;\n  /** Proyecto relacionado actualmente. */\n  relatedProject: Proyecto | null = null;\n  /** Lista de proyectos. */\n  projects: Proyecto[] = [];\n  /**\n   * Constructor del componente.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {AuthService} authService - Servicio de autenticación.\n   * @param {ProyectosService} proyectosService - Servicio de proyectos.\n   */\n  constructor(\n    private productService: ProductService,\n    private authService: AuthService,\n    private proyectosService: ProyectosService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.updateBodegaProducts();\n    });\n\n    this.proyectosService.proyectos$.subscribe(projects => {\n      this.projects = projects;\n      console.log('Projects loaded:', this.projects);\n    });\n\n    this.productService.historial$.subscribe(historial => {\n      this.historial = historial;\n      this.filteredHistorial = historial;\n    });\n\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'BODEGA PRINCIPAL', products: [] }); // Normalize name to uppercase\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n    this.selectedBodegaOrigen = this.bodegas.length > 0 ? this.bodegas[0] : null;\n    this.selectedBodegaDestino = this.bodegas.length > 1 ? this.bodegas[1] : null; // Ensure there are at least 2 bodegas\n  }\n\n  /**\n   * Normaliza el código del producto.\n   * @param {any} code - Código del producto.\n   * @returns {string} - Código normalizado.\n   */\n  normalizeCode(code: any): string {\n    return typeof code === 'string' ? code.trim().toUpperCase() : '';\n  }\n\n  /**\n   * Verifica si un producto existe en la bodega seleccionada.\n   * @param {string} code - Código del producto.\n   * @returns {boolean} - Verdadero si el producto existe, falso en caso contrario.\n   */\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  /**\n   * Convierte el valor de entrada a mayúsculas.\n   * @param {Event} event - Evento de entrada.\n   * @returns {void}\n   */\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  /**\n   * Verifica la existencia del código del producto.\n   * @returns {void}\n   */\n  checkProductCode(): void {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  /**\n   * Realiza la búsqueda de un producto.\n   * @param {Event} event - Evento de búsqueda.\n   * @returns {void}\n   */\n  onSearchProduct(event: any): void {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  /**\n   * Abre el modal del usuario.\n   * @returns {void}\n   */\n  openUserModal(): void {\n    const userModal = new bootstrap.Modal(document.getElementById('userModal')!);\n    userModal.show();\n  }\n\n  /**\n   * Alterna la visibilidad de la contraseña.\n   * @returns {void}\n   */\n  togglePasswordVisibility(): void {\n    const passwordField = document.getElementById('editPassword') as HTMLInputElement;\n    if (passwordField.type === 'password') {\n      passwordField.type = 'text';\n    } else {\n      passwordField.type = 'password';\n    }\n  }\n\n  /**\n   * Abre el modal de confirmación para eliminar un producto.\n   * @param {number} index - Índice del producto a eliminar.\n   * @returns {void}\n   */\n  onDeleteProduct(index: number): void {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  /**\n   * Confirma la eliminación de un producto.\n   * @returns {void}\n   */\n  onConfirmDelete(): void {\n    if (this.productToDelete) {\n      this.productService.deleteProductByCode(this.productToDelete.code);\n      this.productToDelete = null;\n      this.selectedProductIndexToDelete = -1;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  /**\n   * Actualiza un producto existente.\n   * @param {number} index - Índice del producto a actualizar.\n   * @param {Product} product - Datos del producto actualizados.\n   * @returns {void}\n   */\n  onUpdateProduct(index: number, product: Product): void {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  /**\n   * Visualiza la información de un producto.\n   * @param {number} index - Índice del producto a visualizar.\n   * @returns {void}\n   */\n  onViewProductInfo(index: number): void {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  /**\n   * Edita un producto existente.\n   * @param {number} index - Índice del producto a editar.\n   * @returns {void}\n   */\n  onEditProduct(index: number): void {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n\n  /**\n   * Carga las bodegas del almacenamiento local.\n   * @returns {void}\n   */\n  loadBodegas(): void {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas).map((bodega: Bodega) => ({\n        ...bodega,\n        name: bodega.name.toUpperCase()\n      }));\n    } else {\n      this.bodegas = [];\n    }\n    this.updateBodegaProducts();\n  }\n\n  /**\n   * Guarda las bodegas en el almacenamiento local.\n   * @returns {void}\n   */\n  saveBodegas(): void {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  /**\n   * Actualiza los productos de cada bodega.\n   * @returns {void}\n   */\n  updateBodegaProducts(): void {\n    this.bodegas.forEach(bodega => {\n      bodega.products = this.products.filter(product => product.bodega === bodega.name);\n    });\n    this.filteredProducts = this.selectedBodega.products;\n  }\n\n  /**\n   * Añade un producto a una bodega.\n   * @param {Product} product - Producto a añadir.\n   * @returns {void}\n   */\n  addProductToBodega(product: Product): void {\n    const targetBodega = this.bodegas.find(b => b.name === product.bodega);\n    if (targetBodega && !targetBodega.products.some(p => p.code === product.code)) {\n      targetBodega.products.push(product);\n      this.saveBodegas();\n    }\n  }\n\n  /**\n   * Carga todos los productos de todas las bodegas.\n   * @returns {void}\n   */\n  loadAllProducts(): void {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  /**\n   * Selecciona una bodega.\n   * @param {Bodega} bodega - Bodega seleccionada.\n   * @returns {void}\n   */\n  selectBodega(bodega: Bodega): void {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  /**\n   * Guarda los cambios en un producto editado.\n   * @returns {void}\n   */\n  onSaveEditProduct(): void {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      this.selectedProductToEdit.bodega = this.selectedBodega.name;\n      this.selectedBodega.products[this.selectedProductIndexToEdit] = this.selectedProductToEdit;\n      this.saveBodegas();\n      this.selectedProductToEdit = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.selectedProductIndexToEdit = -1;\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      editProductModal?.hide();\n    }\n  }\n\n  /**\n   * Añade un nuevo producto.\n   * @param {NgForm} form - Formulario de producto.\n   * @returns {void}\n   */\n  onAddProduct(form: NgForm): void {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.productService.addProduct(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts();\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Añade una nueva bodega.\n   * @param {NgForm} form - Formulario de bodega.\n   * @returns {void}\n   */\n  addBodega(form: NgForm): void {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  /**\n   * Restablece el formulario especificado.\n   * @param {NgForm} form - Formulario a restablecer.\n   * @param {'user' | 'product'} type - Tipo de formulario.\n   * @returns {void}\n   */\n  resetForm(form: NgForm, type: 'user' | 'product'): void {\n    form.resetForm();\n    if (type === 'user') {\n      this.registerError = '';\n      this.registerSuccess = '';\n    } else if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  /**\n   * Añade un producto a la lista de ingreso.\n   * @returns {void}\n   */\n  onAddProductoToIngreso(): void {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  /**\n   * Elimina un ítem de la lista de ingreso.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItem(index: number): void {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el ingreso de productos.\n   * @returns {void}\n   */\n  onConfirmarIngreso(): void {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.saveBodegas();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n      const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n      if (ingresoBodegaModal) {\n        ingresoBodegaModal.hide();\n        setTimeout(() => ingresoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Muestra el modal para agregar una nueva bodega.\n   * @returns {void}\n   */\n  openAddBodegaModal(): void {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  /**\n   * Añade un producto a la lista de salida.\n   * @returns {void}\n   */\n  onAddProductoToSalida(): void {\n    if (!this.selectedProductSalida) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.salidaItems.find(item => item.product.code === this.selectedProductSalida!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.salidaItems.push({\n      product: this.selectedProductSalida,\n      cantidad: this.cantidadSalida,\n      tipoDocumento: this.tipoDocumento,\n      numeroDocumento: this.numeroDocumento\n    });\n    this.cantidadSalida = 1;\n  }\n\n  /**\n   * Confirma la salida de productos.\n   * @returns {void}\n   */\n  onConfirmarSalida(): void {\n    this.salidaItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        if (product.stock >= item.cantidad) {\n          product.stock -= item.cantidad;\n          this.productService.updateProduct(product.code, product);\n          this.productService.addMovimiento({\n            tipo: 'Salida',\n            numero: this.registroNumeroSalida,\n            fecha: this.today,\n            documento: `${item.tipoDocumento} ${item.numeroDocumento}`,\n            detalles: this.motivoSalida,\n            items: [{\n              code: item.product.code,\n              name: item.product.name,\n              description: item.product.description,\n              cantidad: item.cantidad\n            }],\n            usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n          });\n        } else {\n          alert(`La cantidad a retirar supera el stock disponible de ${product.name}.`);\n        }\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.saveBodegas();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n      const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n      if (salidaBodegaModal) {\n        salidaBodegaModal.hide();\n        setTimeout(() => salidaBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Elimina un ítem de la lista de salida.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemSalida(index: number): void {\n    this.salidaItems.splice(index, 1);\n  }\n\n  /**\n   * Abre el historial de movimientos.\n   * @returns {void}\n   */\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Visualiza los detalles de un movimiento.\n   * @param {Movimiento} movimiento - Movimiento a visualizar.\n   * @returns {void}\n   */\n  onVerDetallesMovimiento(movimiento: Movimiento): void {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  /**\n   * Carga los proyectos del almacenamiento local.\n   * @returns {void}\n   */\n  loadProjects(): void {\n    const storedProjects = localStorage.getItem('projects');\n    if (storedProjects) {\n      this.projects = JSON.parse(storedProjects);\n    }\n  }\n\n  /**\n   * Realiza la búsqueda en el historial.\n   * @returns {void}\n   */\n  onSearchHistorial(): void {\n    this.relatedProject = null;\n    const searchTerm = this.searchHistorialTerm.toLowerCase();\n    console.log('Search Term:', searchTerm);\n\n    if (searchTerm) {\n      this.filteredHistorial = this.historial.filter((movimiento) => {\n        const matchesTerm = movimiento.tipo.toLowerCase().includes(searchTerm) ||\n          String(movimiento.numero).toLowerCase().includes(searchTerm) ||\n          (movimiento.tipo === 'Salida' && movimiento.documento && movimiento.documento.toLowerCase().includes(searchTerm));\n\n        const matchesFilter = (this.filterIngreso && movimiento.tipo === 'Ingreso') ||\n          (this.filterSalida && movimiento.tipo === 'Salida') ||\n          (this.filterTraslado && movimiento.tipo === 'Traslado');\n\n        return matchesTerm && matchesFilter;\n      });\n\n      console.log('Filtered Historial:', this.filteredHistorial);\n\n      this.relatedProject = this.projects.find((project: Proyecto) =>\n        project.numero.toLowerCase().includes(searchTerm)\n      ) || null;\n\n      console.log('Related Project:', this.relatedProject);\n    } else {\n      this.filteredHistorial = this.historial.filter((movimiento) => {\n        return (this.filterIngreso && movimiento.tipo === 'Ingreso') ||\n          (this.filterSalida && movimiento.tipo === 'Salida') ||\n          (this.filterTraslado && movimiento.tipo === 'Traslado');\n      });\n\n      console.log('Filtered Historial (no search term):', this.filteredHistorial);\n    }\n  }\n\n  /**\n   * Vuelve al historial de movimientos.\n   * @returns {void}\n   */\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Añade un producto a la lista de traslado.\n   * @returns {void}\n   */\n  onAddProductoToTraslado(): void {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n\n  /**\n   * Elimina un ítem de la lista de traslado.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemTraslado(index: number): void {\n    this.trasladoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el traslado de productos.\n   * @returns {void}\n   */\n  onConfirmarTraslado(): void {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n\n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n\n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n\n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n\n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n\n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                email\n                            \n                            \n                                emailError\n                            \n                            \n                                emailValid\n                            \n                            \n                                fullName\n                            \n                            \n                                isAdult\n                            \n                            \n                                loginError\n                            \n                            \n                                password\n                            \n                            \n                                recoveryEmail\n                            \n                            \n                                supervisor\n                            \n                            \n                                workArea\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                resetModal\n                            \n                            \n                                sendNotification\n                            \n                            \n                                showStep\n                            \n                            \n                                validateAge\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de autenticación.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Maneja el evento de envío del formulario de inicio de sesión.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl formulario de inicio de sesión.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetModal\n                        \n                    \n                \n            \n            \n                \nresetModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Reinicia el modal de recuperación de cuenta.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendNotification\n                        \n                    \n                \n            \n            \n                \nsendNotification(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Envía una notificación para la recuperación de cuenta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl formulario de recuperación de cuenta.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showStep\n                        \n                    \n                \n            \n            \n                \nshowStep(step: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Muestra el paso actual en el proceso de recuperación de cuenta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                step\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl paso actual a mostrar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAge\n                        \n                    \n                \n            \n            \n                \nvalidateAge(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Valida si la edad del usuario es mayor o igual a 18 años.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl evento de cambio de fecha de nacimiento.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \nverifyEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Verifica si el correo electrónico de recuperación es válido.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:27\n                        \n                    \n\n            \n                \n                    Fecha de nacimiento del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n            \n                \n                    Correo electrónico del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:33\n                        \n                    \n\n            \n                \n                    Mensaje de error relacionado con el correo electrónico\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:37\n                        \n                    \n\n            \n                \n                    Indica si el correo electrónico es válido\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:25\n                        \n                    \n\n            \n                \n                    Nombre completo del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:39\n                        \n                    \n\n            \n                \n                    Indica si el usuario es mayor de edad\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:35\n                        \n                    \n\n            \n                \n                    Mensaje de error relacionado con el inicio de sesión\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n            \n                \n                    Contraseña del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:23\n                        \n                    \n\n            \n                \n                    Correo electrónico para la recuperación de la cuenta\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        supervisor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:31\n                        \n                    \n\n            \n                \n                    Supervisor del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:29\n                        \n                    \n\n            \n                \n                    Área de trabajo del usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\n/**\n * Componente de inicio de sesión.\n * @class\n */\nexport class LoginComponent {\n  /** Correo electrónico del usuario */\n  email: string = '';\n  /** Contraseña del usuario */\n  password: string = '';\n  /** Correo electrónico para la recuperación de la cuenta */\n  recoveryEmail: string = '';\n  /** Nombre completo del usuario */\n  fullName: string = '';\n  /** Fecha de nacimiento del usuario */\n  birthDate: string = '';\n  /** Área de trabajo del usuario */\n  workArea: string = '';\n  /** Supervisor del usuario */\n  supervisor: string = '';\n  /** Mensaje de error relacionado con el correo electrónico */\n  emailError: string = '';\n  /** Mensaje de error relacionado con el inicio de sesión */\n  loginError: string = '';\n  /** Indica si el correo electrónico es válido */\n  emailValid: boolean = true;\n  /** Indica si el usuario es mayor de edad */\n  isAdult: boolean = true;\n\n  /**\n   * Constructor del componente.\n   * @param {AuthService} authService - Servicio de autenticación.\n   */\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Maneja el evento de envío del formulario de inicio de sesión.\n   * \n   * @param {NgForm} form - El formulario de inicio de sesión.\n   * @returns {void}\n   */\n  onSubmit(form: NgForm): void {\n    if (form.valid) {\n      const success = this.authService.login(this.email, this.password);\n      if (!success) {\n        this.loginError = 'Credenciales incorrectas';\n      } else {\n        this.loginError = 'Credenciales inválidas. Por favor, intente de nuevo.';\n      }\n    }\n  }\n\n  /**\n   * Verifica si el correo electrónico de recuperación es válido.\n   * @returns {void}\n   */\n  verifyEmail(): void {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const user = users.find((user: any) => user.email === this.recoveryEmail);\n\n    if (user) {\n      this.showStep(2);\n    } else {\n      this.emailError = 'Este correo no pertenece a la empresa.';\n      this.emailValid = false;\n    }\n  }\n\n  /**\n   * Envía una notificación para la recuperación de cuenta.\n   * \n   * @param {NgForm} form - El formulario de recuperación de cuenta.\n   * @returns {void}\n   */\n  sendNotification(form: NgForm): void {\n    if (form.valid && this.isAdult) {\n      const notifications = JSON.parse(localStorage.getItem('notifications') || '[]');\n      notifications.push({\n        id: Date.now(),\n        status: 'pending',\n        solicitadaPor: this.fullName,\n        email: this.recoveryEmail,\n        birthDate: this.birthDate,\n        workArea: this.workArea,\n        supervisor: this.supervisor\n      });\n      localStorage.setItem('notifications', JSON.stringify(notifications));\n\n      alert('Notificación enviada al administrador.');\n      this.showStep(3);\n    } else {\n      form.form.markAllAsTouched();\n    }\n  }\n\n  /**\n   * Muestra el paso actual en el proceso de recuperación de cuenta.\n   * \n   * @param {number} step - El paso actual a mostrar.\n   * @returns {void}\n   */\n  showStep(step: number): void {\n    for (let i = 1; i = 18;\n  }\n\n  /**\n   * Reinicia el modal de recuperación de cuenta.\n   * @returns {void}\n   */\n  resetModal(): void {\n    this.recoveryEmail = '';\n    this.fullName = '';\n    this.birthDate = '';\n    this.workArea = '';\n    this.supervisor = '';\n    this.emailError = '';\n    this.emailValid = true;\n    this.isAdult = true;\n    this.showStep(1);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          Correo electrónico\n          \n          \n            Por favor, ingrese su correo electrónico.\n          \n        \n        \n          Contraseña\n          \n          \n            Por favor, ingrese su contraseña.\n          \n        \n        Iniciar sesión\n        ¿Olvidaste tu contraseña?\n        {{ loginError }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                body {\n  font-family: Arial, sans-serif;\n}\n\n.login-container-wrapper {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(../../assets/img/fondos/Inicio.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n}\n\n.login-container {\n  background-color: #ffffffec;\n  padding: 2rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 50%;\n  max-width: 900px;\n  transition: all 0.3s ease;\n}\n\n.logo {\n  flex: 1;\n  text-align: center;\n}\n\n.logo img {\n  width: 250px;\n}\n\n.form-container {\n  flex: 2;\n}\n\n/* Step Indicator */\n.step-indicator {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.step-circle {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #d3d3d3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  color: #fff;\n  position: relative;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n}\n\n.step-circle.active {\n  background-color: #ee7712;\n  transform: scale(1.2);\n}\n\n.step-line {\n  flex-grow: 1;\n  height: 2px;\n  background-color: #d3d3d3;\n  margin: 0 10px;\n}\n\n.step {\n  display: none;\n}\n\n.step.active {\n  display: block;\n}\n\n/* Confirmation */\n.confirmation-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: 20px;\n}\n\n.icon-container {\n  font-size: 50px;\n  color: #28a745;\n  margin-bottom: 20px;\n}\n\n.confirmation-message h4 {\n  font-size: 1.5em;\n  font-weight: bold;\n  color: #28a745;\n  margin-bottom: 10px;\n}\n\n.confirmation-message p {\n  font-size: 1em;\n  color: #555;\n}\n\n/* Buttons */\n.custom-btn {\n  background-color: #ee7712;\n  border: none;\n  color: white;\n  transition: background-color 0.3s ease;\n}\n\n.custom-btn:hover {\n  background-color: #cc6600;\n}\n\n.custom-link {\n  color: #ee7712;\n  transition: color 0.3s ease;\n}\n\n.custom-link:hover {\n  color: #cc6600;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .login-container {\n    flex-direction: column;\n    align-items: center;\n    width: 80%;\n  }\n\n  .logo {\n    margin-bottom: 20px;\n  }\n\n  .logo img {\n    width: 150px;\n  }\n\n  .form-container {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Correo electrónico                                Por favor, ingrese su correo electrónico.                                    Contraseña                                Por favor, ingrese su contraseña.                          Iniciar sesión        ¿Olvidaste tu contraseña?        {{ loginError }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                currentOpenDropdown\n                            \n                            \n                                isSidebarCollapsed\n                            \n                            \n                                pendingNotificationsCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkScreenSize\n                            \n                            \n                                closeAllDropdowns\n                            \n                            \n                                isInicioPage\n                            \n                            \n                                isLoginPage\n                            \n                            \n                                isOnDashboard\n                            \n                            \n                                isRoleAllowed\n                            \n                            \n                                logout\n                            \n                            \n                                navigateToHome\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleDropdown\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor del componente NavbarComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de autenticación.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de enrutamiento.\n\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de notificaciones.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \ncheckScreenSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Verifica el tamaño de la pantalla y ajusta el estado de la barra lateral.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeAllDropdowns\n                        \n                    \n                \n            \n            \n                \ncloseAllDropdowns()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Cierra todos los dropdowns abiertos.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInicioPage\n                        \n                    \n                \n            \n            \n                \nisInicioPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario está en la página de inicio.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Verdadero si el usuario está en la página de inicio, falso en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoginPage\n                        \n                    \n                \n            \n            \n                \nisLoginPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario está en la página de inicio de sesión.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Verdadero si el usuario está en la página de inicio de sesión, falso en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOnDashboard\n                        \n                    \n                \n            \n            \n                \nisOnDashboard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario está en alguna página de dashboard.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Verdadero si el usuario está en una página de dashboard, falso en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRoleAllowed\n                        \n                    \n                \n            \n            \n                \nisRoleAllowed(allowedRoles: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Verifica si el rol del usuario está permitido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                allowedRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLista de roles permitidos.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Verdadero si el rol del usuario está permitido, falso en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Cierra sesión y redirige al usuario a la página de inicio de sesión.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToHome\n                        \n                    \n                \n            \n            \n                \nnavigateToHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Navega a la página de inicio.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura los suscriptores.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown(dropdownId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:138\n                        \n                    \n\n\n            \n                \n                        Alterna el estado de un dropdown (abierto/cerrado).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dropdownId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID del dropdown a alternar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSidebar\n                        \n                    \n                \n            \n            \n                \ntoggleSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Alterna el estado de la barra lateral (expandida/colapsada).\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:26\n                        \n                    \n\n            \n                \n                    - Servicio de autenticación.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentOpenDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSidebarCollapsed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingNotificationsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Router } from '@angular/router';\nimport { NotificationService } from '../service/notificacion.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  standalone: true,\n  imports: [CommonModule, RouterModule]\n})\nexport class NavbarComponent implements OnInit {\n  pendingNotificationsCount: number = 0;\n  isSidebarCollapsed = false;\n  currentOpenDropdown: string | null = null;\n\n  /**\n   * Constructor del componente NavbarComponent.\n   * @param {AuthService} authService - Servicio de autenticación.\n   * @param {Router} router - Servicio de enrutamiento.\n   * @param {NotificationService} notificationService - Servicio de notificaciones.\n   */\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private notificationService: NotificationService \n  ) {}\n\n  /**\n   * Inicializa el componente y configura los suscriptores.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.notificationService.pendingCount$.subscribe(count => {\n      this.pendingNotificationsCount = count;\n    });\n\n    this.checkScreenSize();\n    window.addEventListener('resize', this.checkScreenSize.bind(this));\n  }\n\n  /**\n   * Verifica el tamaño de la pantalla y ajusta el estado de la barra lateral.\n   * @returns {void}\n   */\n  checkScreenSize(): void {\n    const screenWidth = window.innerWidth;\n    this.isSidebarCollapsed = screenWidth  dropdown.classList.remove('show'));\n    this.currentOpenDropdown = null;\n  }\n\n  /**\n   * Cierra sesión y redirige al usuario a la página de inicio de sesión.\n   * @returns {void}\n   */\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Verifica si el rol del usuario está permitido.\n   * @param {string[]} allowedRoles - Lista de roles permitidos.\n   * @returns {boolean} Verdadero si el rol del usuario está permitido, falso en caso contrario.\n   */\n  isRoleAllowed(allowedRoles: string[]): boolean {\n    return this.authService.isRoleAllowed(allowedRoles);\n  }\n\n  /**\n   * Verifica si el usuario está en alguna página de dashboard.\n   * @returns {boolean} Verdadero si el usuario está en una página de dashboard, falso en caso contrario.\n   */\n  isOnDashboard(): boolean {\n    const currentUrl = this.router.url;\n    return (\n      currentUrl.includes('/admin-dashboard') ||\n      currentUrl.includes('/area-dashboard') ||\n      currentUrl.includes('/bodega-dashboard')\n    );\n  }\n\n  /**\n   * Navega a la página de inicio.\n   * @returns {void}\n   */\n  navigateToHome(): void {\n    this.router.navigate(['/inicio']);\n  }\n\n  /**\n   * Verifica si el usuario está en la página de inicio de sesión.\n   * @returns {boolean} Verdadero si el usuario está en la página de inicio de sesión, falso en caso contrario.\n   */\n  isLoginPage(): boolean {\n    return this.router.url === '/login';\n  }\n\n  /**\n   * Verifica si el usuario está en la página de inicio.\n   * @returns {boolean} Verdadero si el usuario está en la página de inicio, falso en caso contrario.\n   */\n  isInicioPage(): boolean {\n    return this.router.url === '/inicio';\n  }\n\n  /**\n   * Alterna el estado de un dropdown (abierto/cerrado).\n   * @param {string} dropdownId - ID del dropdown a alternar.\n   * @returns {void}\n   */\n  toggleDropdown(dropdownId: string): void {\n    if (this.currentOpenDropdown && this.currentOpenDropdown !== dropdownId) {\n      const currentDropdown = document.getElementById(this.currentOpenDropdown);\n      currentDropdown?.classList.remove('show');\n    }\n  \n    const dropdown = document.getElementById(dropdownId);\n    if (dropdown) {\n      dropdown.classList.toggle('show');\n      this.currentOpenDropdown = dropdown.classList.contains('show') ? dropdownId : null;\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    ERP\n    \n      \n        \n         0\" class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\n          {{ pendingNotificationsCount }}\n          unread messages\n        \n      \n    \n    \n    \n      \n        \n        \n          {{ authService.getCurrentUser()?.firstName }} {{ authService.getCurrentUser()?.lastName }}\n          {{ authService.getCurrentUser()?.role }}\n        \n      \n    \n  \n\n\n\n  \n    \n    PRAXA INGENIERIA SPA\n  \n  \n    \n      \n         Inicio\n      \n    \n    \n      \n         Bodega\n      \n      \n    \n    \n      \n         Crear Producto\n      \n      \n         Ingreso a Bodega\n      \n      \n         Salida de Bodega\n      \n      \n         Traslado de Bodega\n      \n      \n         Historial\n      \n      \n         Carga Masiva\n      \n    \n    \n      \n         Compras\n      \n      \n    \n    \n      \n         Órdenes de Compra\n      \n      \n         Estado Ordenes de Compra\n      \n      \n         Proveedores\n      \n    \n    \n      \n         Reportes\n      \n    \n    \n      \n         Proyectos\n      \n    \n    \n      \n         Usuarios\n      \n    \n    \n      \n         Cuenta\n      \n    \n    \n      \n         Salir\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .custom-navbar {\n  background-color: #ffffff;\n  border-bottom: 1px solid #e5e5e5;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.navbar-brand {\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.nav-item .nav-link {\n  color: #000;\n}\n\n.nav-item .nav-link .bi-bell {\n  font-size: 1.5rem;\n}\n\n.dropdown-toggle::after {\n  display: none;\n}\n\n.vr {\n  border-left: 1px solid #e5e5e5;\n  height: 40px;\n}\n\n.company-logo {\n  width: 50px;\n  height: auto;\n}\n\n.sidebar-header h4 {\n  margin: 0;\n}\n\n.list-group-item-action {\n  cursor: pointer;\n}\n\n.list-group-item-action i {\n  margin-right: 10px;\n}\n\n#sidebar {\n  width: 60px;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  padding-top: 70px;\n  transition: width 0.3s ease-in-out;\n  overflow-x: hidden;\n  background-color: #f5f7fa; /* Fondo similar al de Chipax */\n}\n\n#sidebar:hover {\n  width: 280px;\n}\n\n#sidebar .sidebar-header {\n  background-color: #354a5f; /* Color del encabezado */\n  color: #ffffff; /* Color del texto en el encabezado */\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#sidebar .sidebar-header img {\n  margin-right: 10px;\n}\n\n#sidebar .sidebar-header h6 {\n  display: none;\n}\n\n#sidebar:hover .sidebar-header h6 {\n  display: block;\n}\n\n#sidebar .list-group-item {\n  text-align: center;\n  padding: 1rem;\n  border: none; /* Quitar líneas divisorias */\n}\n\n#sidebar .list-group-item:hover,\n#sidebar .list-group-item.active {\n  background-color: #e9ecef; /* Fondo similar al de Chipax */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Sombreado */\n  border-radius: 4px; /* Bordes redondeados */\n}\n\n#sidebar:hover .list-group-item {\n  text-align: left;\n}\n\n#sidebar .list-group-item i {\n  font-size: 1.25rem;\n  margin-right: 0;\n}\n\n#sidebar .list-group-item .bi-chevron-down {\n  display: none;\n}\n\n#sidebar:hover .list-group-item i {\n  margin-right: 10px;\n}\n\n#sidebar:hover .list-group-item .bi-chevron-down {\n  display: inline-block;\n}\n\n#sidebar .list-group-item span {\n  display: none;\n}\n\n#sidebar:hover .list-group-item span {\n  display: inline;\n  font-family: 'Roboto', sans-serif; /* Fuente similar a la de Chipax */\n  font-size: 0.9rem;\n  color: #4a4a4a;\n}\n\n.navbar-text {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n}\n\n.navbar-text .text-success {\n  margin-top: -5px;\n}\n\n.dropdown-menu-end {\n  min-width: 200px;\n}\n\n#page-content-wrapper {\n  margin-left: 90px;\n  transition: margin-left 0.3s ease-in-out;\n}\n\n#sidebar:hover ~ #page-content-wrapper {\n  margin-left: 280px;\n}\n\n.sidebar-header {\n  transition: all 0.3s ease-in-out;\n  border-bottom: none;\n}\n\n.sidebar:hover .sidebar-header {\n  display: flex;\n  justify-content: center;\n}\n\n.sidebar-header img {\n  width: 40px;\n  height: auto;\n  margin-left: 5px;\n}\n\n.sidebar:hover .sidebar-header img {\n  width: 50px;\n  height: auto;\n}\n\n.main-content {\n  margin-left: 90px;\n  transition: margin-left 0.3s ease-in-out;\n}\n\n.sidebar:hover ~ .main-content {\n  margin-left: 280px;\n}\n\n#sidebar .list-group-item {\n  position: relative;\n}\n\n#sidebar .list-group-item i {\n  width: 100%;\n  text-align: center;\n}\n\n#sidebar:hover .list-group-item i {\n  width: auto;\n  text-align: left;\n}\n\n#sidebar .list-group-item .bi-chevron-down {\n  position: absolute;\n  right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ERP                           0\" class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">          {{ pendingNotificationsCount }}          unread messages                                                          {{ authService.getCurrentUser()?.firstName }} {{ authService.getCurrentUser()?.lastName }}          {{ authService.getCurrentUser()?.role }}                              PRAXA INGENIERIA SPA                       Inicio                             Bodega                                   Crear Producto                     Ingreso a Bodega                     Salida de Bodega                     Traslado de Bodega                     Historial                     Carga Masiva                             Compras                                   Órdenes de Compra                     Estado Ordenes de Compra                     Proveedores                             Reportes                             Proyectos                             Usuarios                             Cuenta                             Salir            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificacionesComponent.html":{"url":"components/NotificacionesComponent.html","title":"component - NotificacionesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificacionesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notificaciones/notificaciones.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notificaciones\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./notificaciones.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notificaciones.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isBodega\n                            \n                            \n                                notifications\n                            \n                            \n                                pendingNotificationsCount\n                            \n                            \n                                selectedNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptModification\n                            \n                            \n                                closeModal\n                            \n                            \n                                getStatusClass\n                            \n                            \n                                hasChanged\n                            \n                            \n                                loadNotifications\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                rejectModification\n                            \n                            \n                                saveNotifications\n                            \n                            \n                                translateStatus\n                            \n                            \n                                updatePendingNotificationsCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, productService: ProductService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notificaciones/notificaciones.component.ts:89\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de autenticación.\n\n\n                                                        \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                    ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de productos.\n\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de notificaciones.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptModification\n                        \n                    \n                \n            \n            \n                \nacceptModification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Acepta la modificación del producto en la notificación seleccionada.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:193\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de notificación.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatusClass\n                        \n                    \n                \n            \n            \n                \ngetStatusClass(status: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:227\n                        \n                    \n\n\n            \n                \n                        Obtiene la clase CSS correspondiente al estado de la notificación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEstado de la notificación.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nClase CSS.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasChanged\n                        \n                    \n                \n            \n            \n                \nhasChanged(field)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:184\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo específico ha cambiado en la notificación seleccionada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCampo a verificar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nVerdadero si el campo ha cambiado, falso en caso contrario.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNotifications\n                        \n                    \n                \n            \n            \n                \nloadNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Carga las notificaciones desde el servicio de productos.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(notification: Notification)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Abre el modal de notificación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                notification\n                                            \n                                                            Notification\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNotificación a mostrar en el modal.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rejectModification\n                        \n                    \n                \n            \n            \n                \nrejectModification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Rechaza la modificación del producto en la notificación seleccionada.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveNotifications\n                        \n                    \n                \n            \n            \n                \nsaveNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Guarda las notificaciones actualizadas.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateStatus\n                        \n                    \n                \n            \n            \n                \ntranslateStatus(status: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:208\n                        \n                    \n\n\n            \n                \n                        Traduce el estado de la notificación al español.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEstado de la notificación.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nEstado traducido.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePendingNotificationsCount\n                        \n                    \n                \n            \n            \n                \nupdatePendingNotificationsCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Actualiza el contador de notificaciones pendientes.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isBodega\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:82\n                        \n                    \n\n            \n                \n                    Indica si es bodega.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Notification[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:68\n                        \n                    \n\n            \n                \n                    Lista de notificaciones.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingNotificationsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:89\n                        \n                    \n\n            \n                \n                    Contador de notificaciones pendientes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Notification | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:75\n                        \n                    \n\n            \n                \n                    Notificación seleccionada.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product } from '../service/product.service';\nimport { NotificationService } from '../service/notificacion.service';\nimport { Modal } from 'bootstrap';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Interfaz para representar una notificación.\n * @interface\n */\ninterface Notification {\n  /**\n   * Identificador único de la notificación.\n   * @type {number}\n   */\n  id: number;\n\n  /**\n   * Estado de la notificación (e.g., pending, accepted, rejected).\n   * @type {string}\n   */\n  status: string;\n\n  /**\n   * Mensaje descriptivo de la notificación.\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * Nombre de la persona que solicitó la notificación.\n   * @type {string}\n   */\n  solicitadaPor: string;\n\n  /**\n   * Producto original antes de la modificación.\n   * @type {Partial}\n   */\n  productoOriginal: Partial;\n\n  /**\n   * Cambios solicitados en el producto.\n   * @type {Partial}\n   */\n  cambiosSolicitados: Partial;\n}\n\n@Component({\n  selector: 'app-notificaciones',\n  templateUrl: './notificaciones.component.html',\n  styleUrls: ['./notificaciones.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\n/**\n * Componente para gestionar las notificaciones.\n * @class\n * @implements {OnInit}\n */\nexport class NotificacionesComponent implements OnInit {\n  /**\n   * Lista de notificaciones.\n   * @type {Notification[]}\n   * @memberof NotificacionesComponent\n   */\n  notifications: Notification[] = [];\n\n  /**\n   * Notificación seleccionada.\n   * @type {(Notification | null)}\n   * @memberof NotificacionesComponent\n   */\n  selectedNotification: Notification | null = null;\n\n  /**\n   * Indica si es bodega.\n   * @type {boolean}\n   * @memberof NotificacionesComponent\n   */\n  isBodega: boolean = false;\n\n  /**\n   * Contador de notificaciones pendientes.\n   * @type {number}\n   * @memberof NotificacionesComponent\n   */\n  pendingNotificationsCount: number = 0;\n\n  /**\n   * Constructor del componente.\n   * @param {AuthService} authService - Servicio de autenticación.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {NotificationService} notificationService - Servicio de notificaciones.\n   */\n  constructor(private authService: AuthService, private productService: ProductService, private notificationService: NotificationService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.loadNotifications();\n    this.isBodega = this.authService.isBodega();\n  }\n\n  /**\n   * Carga las notificaciones desde el servicio de productos.\n   * @returns {void}\n   */\n  loadNotifications(): void {\n    this.notifications = this.productService.getNotifications();\n    this.updatePendingNotificationsCount();\n  }\n\n  /**\n   * Actualiza el contador de notificaciones pendientes.\n   * @returns {void}\n   */\n  updatePendingNotificationsCount(): void {\n    const count = this.notifications.filter(notification => notification.status === 'pending').length;\n    this.pendingNotificationsCount = count;\n    this.notificationService.setPendingCount(count);\n  }\n\n  /**\n   * Abre el modal de notificación.\n   * @param {Notification} notification - Notificación a mostrar en el modal.\n   * @returns {void}\n   */\n  openModal(notification: Notification): void {\n    this.selectedNotification = notification;\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = new Modal(modalElement);\n      modal.show();\n    }\n  }\n\n  /**\n   * Acepta la modificación del producto en la notificación seleccionada.\n   * @returns {void}\n   */\n  acceptModification(): void {\n    if (this.selectedNotification) {\n      const productCode = this.selectedNotification.productoOriginal.code as string;\n      this.productService.updateProduct(productCode, this.selectedNotification.cambiosSolicitados);\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'accepted');\n      this.selectedNotification.status = 'accepted';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  /**\n   * Rechaza la modificación del producto en la notificación seleccionada.\n   * @returns {void}\n   */\n  rejectModification(): void {\n    if (this.selectedNotification) {\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'rejected');\n      this.selectedNotification.status = 'rejected';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  /**\n   * Guarda las notificaciones actualizadas.\n   * @returns {void}\n   */\n  saveNotifications(): void {\n    this.productService.updateNotifications(this.notifications);\n  }\n\n  /**\n   * Verifica si un campo específico ha cambiado en la notificación seleccionada.\n   * @param {keyof Product} field - Campo a verificar.\n   * @returns {boolean} - Verdadero si el campo ha cambiado, falso en caso contrario.\n   */\n  hasChanged(field: keyof Product): boolean {\n    if (!this.selectedNotification) return false;\n    return this.selectedNotification.productoOriginal[field] !== this.selectedNotification.cambiosSolicitados[field];\n  }\n\n  /**\n   * Cierra el modal de notificación.\n   * @returns {void}\n   */\n  closeModal(): void {\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = Modal.getInstance(modalElement);\n      if (modal) {\n        modal.hide();\n      }\n    }\n  }\n\n  /**\n   * Traduce el estado de la notificación al español.\n   * @param {string | undefined} status - Estado de la notificación.\n   * @returns {string} - Estado traducido.\n   */\n  translateStatus(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'Pendiente';\n      case 'accepted':\n        return 'Aceptado';\n      case 'rejected':\n        return 'Rechazado';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Obtiene la clase CSS correspondiente al estado de la notificación.\n   * @param {string | undefined} status - Estado de la notificación.\n   * @returns {string} - Clase CSS.\n   */\n  getStatusClass(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'text-warning';\n      case 'accepted':\n        return 'text-success';\n      case 'rejected':\n        return 'text-danger';\n      default:\n        return '';\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Solicitado por\n            Estado\n            Acciones\n          \n        \n        \n          \n            {{ notification.solicitadaPor }}\n            {{ translateStatus(notification.status) }}\n            Ver solicitud\n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n        \n          Solicitado por: {{ selectedNotification?.solicitadaPor }}\n          Estado:  {{ translateStatus(selectedNotification?.status) }}\n\n          Producto original:\n          \n            Código: {{ selectedNotification?.productoOriginal?.code }}\n            Nombre: {{ selectedNotification?.productoOriginal?.name }}\n            Descripción: {{ selectedNotification?.productoOriginal?.description }}\n            Modelo: {{ selectedNotification?.productoOriginal?.model }}\n            Marca: {{ selectedNotification?.productoOriginal?.brand }}\n            Material: {{ selectedNotification?.productoOriginal?.material }}\n            Color: {{ selectedNotification?.productoOriginal?.color }}\n            Familia: {{ selectedNotification?.productoOriginal?.family }}\n            Valor: {{ selectedNotification?.productoOriginal?.value }}\n            Moneda: {{ selectedNotification?.productoOriginal?.currency }}\n            Unidad: {{ selectedNotification?.productoOriginal?.unit }}\n            Ubicación: {{ selectedNotification?.productoOriginal?.location }}\n          \n\n          Cambios solicitados:\n          \n            Nombre: {{ selectedNotification?.cambiosSolicitados?.name }}\n            Descripción: {{ selectedNotification?.cambiosSolicitados?.description }}\n            Modelo: {{ selectedNotification?.cambiosSolicitados?.model }}\n            Marca: {{ selectedNotification?.cambiosSolicitados?.brand }}\n            Material: {{ selectedNotification?.cambiosSolicitados?.material }}\n            Color: {{ selectedNotification?.cambiosSolicitados?.color }}\n            Familia: {{ selectedNotification?.cambiosSolicitados?.family }}\n            Valor: {{ selectedNotification?.cambiosSolicitados?.value }}\n            Moneda: {{ selectedNotification?.cambiosSolicitados?.currency }}\n            Unidad: {{ selectedNotification?.cambiosSolicitados?.unit }}\n            Ubicación: {{ selectedNotification?.cambiosSolicitados?.location }}\n          \n        \n        \n          Aceptar\n          Rechazar\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./notificaciones.component.css\n                \n                @import 'bootstrap-icons/font/bootstrap-icons.css';\n@import 'bootstrap/dist/css/bootstrap.min.css';\n\nth, td {\n  text-align: center;\n}\n\n.inventory-table-container {\n  margin: 80px 15px 15px 15px;\n  padding: 1em;\n  background-color: #ffffff;\n  border: 1px solid #ccc;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  max-height: 850px;\n  overflow-y: auto;\n}\n\n.caption-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n\n.caption-title {\n  flex: 1;\n}\n\n.search-bar {\n  flex: 2;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.search-bar input {\n  flex: 1;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\n.add-button {\n  flex: 1;\n  text-align: right;\n}\n\ntable {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\ntable thead th {\n  background-color: #343a40;\n  color: #ffffff;\n  border-bottom: 2px solid #dee2e6;\n}\n\ntable tbody tr {\n  border-bottom: 1px solid #dee2e6;\n}\n\ntable td {\n  padding: 10px;\n  border-right: 1px solid #dee2e6;\n}\n\ntable td:last-child {\n  border-right: none;\n}\n\ntable tr:last-child td {\n  border-bottom: none;\n}\n\n.table-striped tbody tr:nth-of-type(odd) {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n#cuentaModal .modal-body {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#cuentaModal .modal-body .d-flex {\n  width: 100%;\n}\n\n#cuentaModal .modal-body .mb-3 h5 {\n  margin-bottom: 0.5rem;\n}\n\n@media (max-width: 576px) {\n  #cuentaModal .modal-body .d-flex {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  #cuentaModal .modal-body .d-flex img {\n    margin-bottom: 1rem;\n  }\n}\n\n@media (max-width: 768px) {\n  .caption-container {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .add-button {\n    margin-top: 10px;\n    justify-content: flex-start;\n  }\n}\n\n@media (max-width: 767px) {\n  .caption-container {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .add-button {\n    margin-top: 10px;\n    justify-content: flex-start;\n  }\n\n  .table thead {\n    display: none;\n  }\n\n  .table tbody, .table tr, .table td {\n    display: block;\n    width: 100%;\n  }\n\n  .table tr {\n    margin-bottom: 1rem;\n    border-bottom: 1px solid #dee2e6;\n  }\n\n  .table td {\n    text-align: right;\n    padding-left: 50%;\n    position: relative;\n  }\n\n  .table td::before {\n    content: attr(data-label);\n    position: absolute;\n    left: 0;\n    width: 50%;\n    padding-left: 1rem;\n    font-weight: bold;\n    text-align: left;\n  }\n}\n\n#page-content-wrapper .table {\n  margin-top: 80px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n}\n\n#page-content-wrapper .table th, #page-content-wrapper .table td {\n  border: none;\n  padding: 15px;\n}\n\n#page-content-wrapper .table th {\n  background-color: #ee7712;\n  color: #ecf0f1;\n}\n\n#page-content-wrapper .table tr:nth-child(odd) {\n  background-color: #f2f2f2;\n}\n\n#page-content-wrapper .table tr:hover {\n  background-color: #dcdcdc;\n}\n\n#page-content-wrapper .btn-primary {\n  background-color: #ee7712;\n  border: none;\n}\n\n#page-content-wrapper .btn-primary:hover {\n  background-color: #d3550c;\n}\n\n#notificationModal .modal-header {\n  border-bottom: none;\n}\n\n#notificationModal .modal-header .btn-close {\n  background-color: transparent;\n}\n\n#notificationModal .modal-body p {\n  margin-bottom: 10px;\n}\n\n#notificationModal .modal-body ul {\n  padding-left: 20px;\n}\n\n#notificationModal .modal-footer {\n  border-top: none;\n}\n\n#notificationModal .btn-success {\n  background-color: #27ae60;\n  border: none;\n}\n\n#notificationModal .btn-danger {\n  background-color: #c0392b;\n  border: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Solicitado por            Estado            Acciones                                                {{ notification.solicitadaPor }}            {{ translateStatus(notification.status) }}            Ver solicitud                                                                                      Solicitado por: {{ selectedNotification?.solicitadaPor }}          Estado:  {{ translateStatus(selectedNotification?.status) }}          Producto original:                      Código: {{ selectedNotification?.productoOriginal?.code }}            Nombre: {{ selectedNotification?.productoOriginal?.name }}            Descripción: {{ selectedNotification?.productoOriginal?.description }}            Modelo: {{ selectedNotification?.productoOriginal?.model }}            Marca: {{ selectedNotification?.productoOriginal?.brand }}            Material: {{ selectedNotification?.productoOriginal?.material }}            Color: {{ selectedNotification?.productoOriginal?.color }}            Familia: {{ selectedNotification?.productoOriginal?.family }}            Valor: {{ selectedNotification?.productoOriginal?.value }}            Moneda: {{ selectedNotification?.productoOriginal?.currency }}            Unidad: {{ selectedNotification?.productoOriginal?.unit }}            Ubicación: {{ selectedNotification?.productoOriginal?.location }}                    Cambios solicitados:                      Nombre: {{ selectedNotification?.cambiosSolicitados?.name }}            Descripción: {{ selectedNotification?.cambiosSolicitados?.description }}            Modelo: {{ selectedNotification?.cambiosSolicitados?.model }}            Marca: {{ selectedNotification?.cambiosSolicitados?.brand }}            Material: {{ selectedNotification?.cambiosSolicitados?.material }}            Color: {{ selectedNotification?.cambiosSolicitados?.color }}            Familia: {{ selectedNotification?.cambiosSolicitados?.family }}            Valor: {{ selectedNotification?.cambiosSolicitados?.value }}            Moneda: {{ selectedNotification?.cambiosSolicitados?.currency }}            Unidad: {{ selectedNotification?.cambiosSolicitados?.unit }}            Ubicación: {{ selectedNotification?.cambiosSolicitados?.location }}                                    Aceptar          Rechazar                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificacionesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notificaciones/notificaciones.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para representar una notificación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cambiosSolicitados\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            productoOriginal\n                                        \n                                \n                                \n                                        \n                                            solicitadaPor\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cambiosSolicitados\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cambiosSolicitados:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cambios solicitados en el producto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador único de la notificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mensaje descriptivo de la notificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productoOriginal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productoOriginal:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Producto original antes de la modificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solicitadaPor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        solicitadaPor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la persona que solicitó la notificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la notificación (e.g., pending, accepted, rejected).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product } from '../service/product.service';\nimport { NotificationService } from '../service/notificacion.service';\nimport { Modal } from 'bootstrap';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Interfaz para representar una notificación.\n * @interface\n */\ninterface Notification {\n  /**\n   * Identificador único de la notificación.\n   * @type {number}\n   */\n  id: number;\n\n  /**\n   * Estado de la notificación (e.g., pending, accepted, rejected).\n   * @type {string}\n   */\n  status: string;\n\n  /**\n   * Mensaje descriptivo de la notificación.\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * Nombre de la persona que solicitó la notificación.\n   * @type {string}\n   */\n  solicitadaPor: string;\n\n  /**\n   * Producto original antes de la modificación.\n   * @type {Partial}\n   */\n  productoOriginal: Partial;\n\n  /**\n   * Cambios solicitados en el producto.\n   * @type {Partial}\n   */\n  cambiosSolicitados: Partial;\n}\n\n@Component({\n  selector: 'app-notificaciones',\n  templateUrl: './notificaciones.component.html',\n  styleUrls: ['./notificaciones.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\n/**\n * Componente para gestionar las notificaciones.\n * @class\n * @implements {OnInit}\n */\nexport class NotificacionesComponent implements OnInit {\n  /**\n   * Lista de notificaciones.\n   * @type {Notification[]}\n   * @memberof NotificacionesComponent\n   */\n  notifications: Notification[] = [];\n\n  /**\n   * Notificación seleccionada.\n   * @type {(Notification | null)}\n   * @memberof NotificacionesComponent\n   */\n  selectedNotification: Notification | null = null;\n\n  /**\n   * Indica si es bodega.\n   * @type {boolean}\n   * @memberof NotificacionesComponent\n   */\n  isBodega: boolean = false;\n\n  /**\n   * Contador de notificaciones pendientes.\n   * @type {number}\n   * @memberof NotificacionesComponent\n   */\n  pendingNotificationsCount: number = 0;\n\n  /**\n   * Constructor del componente.\n   * @param {AuthService} authService - Servicio de autenticación.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {NotificationService} notificationService - Servicio de notificaciones.\n   */\n  constructor(private authService: AuthService, private productService: ProductService, private notificationService: NotificationService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.loadNotifications();\n    this.isBodega = this.authService.isBodega();\n  }\n\n  /**\n   * Carga las notificaciones desde el servicio de productos.\n   * @returns {void}\n   */\n  loadNotifications(): void {\n    this.notifications = this.productService.getNotifications();\n    this.updatePendingNotificationsCount();\n  }\n\n  /**\n   * Actualiza el contador de notificaciones pendientes.\n   * @returns {void}\n   */\n  updatePendingNotificationsCount(): void {\n    const count = this.notifications.filter(notification => notification.status === 'pending').length;\n    this.pendingNotificationsCount = count;\n    this.notificationService.setPendingCount(count);\n  }\n\n  /**\n   * Abre el modal de notificación.\n   * @param {Notification} notification - Notificación a mostrar en el modal.\n   * @returns {void}\n   */\n  openModal(notification: Notification): void {\n    this.selectedNotification = notification;\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = new Modal(modalElement);\n      modal.show();\n    }\n  }\n\n  /**\n   * Acepta la modificación del producto en la notificación seleccionada.\n   * @returns {void}\n   */\n  acceptModification(): void {\n    if (this.selectedNotification) {\n      const productCode = this.selectedNotification.productoOriginal.code as string;\n      this.productService.updateProduct(productCode, this.selectedNotification.cambiosSolicitados);\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'accepted');\n      this.selectedNotification.status = 'accepted';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  /**\n   * Rechaza la modificación del producto en la notificación seleccionada.\n   * @returns {void}\n   */\n  rejectModification(): void {\n    if (this.selectedNotification) {\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'rejected');\n      this.selectedNotification.status = 'rejected';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  /**\n   * Guarda las notificaciones actualizadas.\n   * @returns {void}\n   */\n  saveNotifications(): void {\n    this.productService.updateNotifications(this.notifications);\n  }\n\n  /**\n   * Verifica si un campo específico ha cambiado en la notificación seleccionada.\n   * @param {keyof Product} field - Campo a verificar.\n   * @returns {boolean} - Verdadero si el campo ha cambiado, falso en caso contrario.\n   */\n  hasChanged(field: keyof Product): boolean {\n    if (!this.selectedNotification) return false;\n    return this.selectedNotification.productoOriginal[field] !== this.selectedNotification.cambiosSolicitados[field];\n  }\n\n  /**\n   * Cierra el modal de notificación.\n   * @returns {void}\n   */\n  closeModal(): void {\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = Modal.getInstance(modalElement);\n      if (modal) {\n        modal.hide();\n      }\n    }\n  }\n\n  /**\n   * Traduce el estado de la notificación al español.\n   * @param {string | undefined} status - Estado de la notificación.\n   * @returns {string} - Estado traducido.\n   */\n  translateStatus(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'Pendiente';\n      case 'accepted':\n        return 'Aceptado';\n      case 'rejected':\n        return 'Rechazado';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Obtiene la clase CSS correspondiente al estado de la notificación.\n   * @param {string | undefined} status - Estado de la notificación.\n   * @returns {string} - Clase CSS.\n   */\n  getStatusClass(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'text-warning';\n      case 'accepted':\n        return 'text-success';\n      case 'rejected':\n        return 'text-danger';\n      default:\n        return '';\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Proyecto.html":{"url":"interfaces/Proyecto.html","title":"interface - Proyecto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Proyecto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un proyecto en la aplicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            estado\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        estado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estado:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    El estado actual del proyecto (opcional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    El nombre del proyecto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    El número de identificación del proyecto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    El tipo de proyecto.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product, Movimiento } from '../service/product.service';\nimport { ProyectosService } from '../service/proyecto.service';\nimport { BulkUploadComponent } from '../bulk-upload/bulk-upload.component';\nimport * as bootstrap from 'bootstrap';\n\n/**\n * Representa una bodega en la aplicación.\n * @interface Bodega\n */\ninterface Bodega {\n  /** El nombre de la bodega. */\n  name: string;\n  /** Lista de productos en la bodega. */\n  products: Product[];\n}\n\n/**\n * Representa un proyecto en la aplicación.\n * @interface Proyecto\n */\ninterface Proyecto {\n  /** El tipo de proyecto. */\n  tipo: string;\n  /** El número de identificación del proyecto. */\n  numero: string;\n  /** El nombre del proyecto. */\n  nombre: string;\n  /** El estado actual del proyecto (opcional). */\n  estado?: string;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, CommonModule, BulkUploadComponent]\n})\n/**\n * Componente del panel de control del dashboard.\n * @class\n * @implements {OnInit}\n */\nexport class DashboardComponent implements OnInit {\n  /** Lista de todos los productos. */\n  products: Product[] = [];\n  /** Lista de todos los productos combinados de todas las bodegas. */\n  allProducts: Product[] = [];\n  /** Lista de productos filtrados para mostrar. */\n  filteredProducts: Product[] = [];\n  /** Historial de movimientos de productos. */\n  historial: Movimiento[] = [];\n  /** Índice del producto seleccionado para eliminar. */\n  selectedProductIndexToDelete: number = -1;\n  /** Índice del producto seleccionado para editar. */\n  selectedProductIndexToEdit: number = -1;\n  /** Producto seleccionado actualmente. */\n  selectedProduct: Product | null = null;\n  /** Producto seleccionado actualmente para salida. */\n  selectedProductSalida: Product | null = null;\n  /** Lista de todas las bodegas. */\n  bodegas: Bodega[] = [];\n  /** Bodega seleccionada actualmente. */\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n  /** Nombre de la nueva bodega a agregar. */\n  newBodegaName: string = '';\n  /** Término de búsqueda para filtrar productos. */\n  searchProductTerm: string = '';\n  /** Nuevo producto a agregar. */\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n  /** Lista de ítems de ingreso. */\n  ingresoItems: any[] = [];\n  /** Lista de ítems de salida. */\n  salidaItems: any[] = [];\n  /** Cantidad de ingreso. */\n  cantidadIngreso: number = 1;\n  /** Cantidad de salida. */\n  cantidadSalida: number = 1;\n  /** Tipo de documento para la salida. */\n  tipoDocumento: string = '';\n  /** Número de documento para la salida. */\n  numeroDocumento: string = '';\n  /** Motivo de la salida. */\n  motivoSalida: string = '';\n  /** Número de registro de ingreso. */\n  registroNumeroIngreso: number = 0;\n  /** Número de registro de salida. */\n  registroNumeroSalida: number = 0;\n  /** Fecha actual en formato de cadena. */\n  today: string = '';\n  /** Movimiento seleccionado actualmente. */\n  selectedMovimiento: Movimiento | null = null;\n  /** Producto seleccionado actualmente para edición. */\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n  /** Producto a eliminar. */\n  productToDelete: Product | null = null;\n  /** Indica si el código del producto ya existe. */\n  productCodeExists: boolean = false;\n  /** Mensaje de error en el registro. */\n  registerError: string = '';\n  /** Mensaje de éxito en el registro. */\n  registerSuccess: string = '';\n  /** Lista de ítems de traslado. */\n  trasladoItems: any[] = [];\n  /** Bodega de origen seleccionada para traslado. */\n  selectedBodegaOrigen: Bodega | null = null;\n  /** Bodega de destino seleccionada para traslado. */\n  selectedBodegaDestino: Bodega | null = null;\n  /** Producto seleccionado actualmente para traslado. */\n  selectedProductTraslado: Product | null = null;\n  /** Término de búsqueda en el historial. */\n  searchHistorialTerm: string = '';\n  /** Lista de movimientos filtrados en el historial. */\n  filteredHistorial: Movimiento[] = [];\n  /** Filtro para mostrar ingresos en el historial. */\n  filterIngreso: boolean = true;\n  /** Filtro para mostrar salidas en el historial. */\n  filterSalida: boolean = true;\n  /** Filtro para mostrar traslados en el historial. */\n  filterTraslado: boolean = true;\n  /** Proyecto relacionado actualmente. */\n  relatedProject: Proyecto | null = null;\n  /** Lista de proyectos. */\n  projects: Proyecto[] = [];\n  /**\n   * Constructor del componente.\n   * @param {ProductService} productService - Servicio de productos.\n   * @param {AuthService} authService - Servicio de autenticación.\n   * @param {ProyectosService} proyectosService - Servicio de proyectos.\n   */\n  constructor(\n    private productService: ProductService,\n    private authService: AuthService,\n    private proyectosService: ProyectosService) {}\n\n  /**\n   * Método de inicialización del componente.\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.updateBodegaProducts();\n    });\n\n    this.proyectosService.proyectos$.subscribe(projects => {\n      this.projects = projects;\n      console.log('Projects loaded:', this.projects);\n    });\n\n    this.productService.historial$.subscribe(historial => {\n      this.historial = historial;\n      this.filteredHistorial = historial;\n    });\n\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'BODEGA PRINCIPAL', products: [] }); // Normalize name to uppercase\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n    this.selectedBodegaOrigen = this.bodegas.length > 0 ? this.bodegas[0] : null;\n    this.selectedBodegaDestino = this.bodegas.length > 1 ? this.bodegas[1] : null; // Ensure there are at least 2 bodegas\n  }\n\n  /**\n   * Normaliza el código del producto.\n   * @param {any} code - Código del producto.\n   * @returns {string} - Código normalizado.\n   */\n  normalizeCode(code: any): string {\n    return typeof code === 'string' ? code.trim().toUpperCase() : '';\n  }\n\n  /**\n   * Verifica si un producto existe en la bodega seleccionada.\n   * @param {string} code - Código del producto.\n   * @returns {boolean} - Verdadero si el producto existe, falso en caso contrario.\n   */\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  /**\n   * Convierte el valor de entrada a mayúsculas.\n   * @param {Event} event - Evento de entrada.\n   * @returns {void}\n   */\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  /**\n   * Verifica la existencia del código del producto.\n   * @returns {void}\n   */\n  checkProductCode(): void {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  /**\n   * Realiza la búsqueda de un producto.\n   * @param {Event} event - Evento de búsqueda.\n   * @returns {void}\n   */\n  onSearchProduct(event: any): void {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  /**\n   * Abre el modal del usuario.\n   * @returns {void}\n   */\n  openUserModal(): void {\n    const userModal = new bootstrap.Modal(document.getElementById('userModal')!);\n    userModal.show();\n  }\n\n  /**\n   * Alterna la visibilidad de la contraseña.\n   * @returns {void}\n   */\n  togglePasswordVisibility(): void {\n    const passwordField = document.getElementById('editPassword') as HTMLInputElement;\n    if (passwordField.type === 'password') {\n      passwordField.type = 'text';\n    } else {\n      passwordField.type = 'password';\n    }\n  }\n\n  /**\n   * Abre el modal de confirmación para eliminar un producto.\n   * @param {number} index - Índice del producto a eliminar.\n   * @returns {void}\n   */\n  onDeleteProduct(index: number): void {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  /**\n   * Confirma la eliminación de un producto.\n   * @returns {void}\n   */\n  onConfirmDelete(): void {\n    if (this.productToDelete) {\n      this.productService.deleteProductByCode(this.productToDelete.code);\n      this.productToDelete = null;\n      this.selectedProductIndexToDelete = -1;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  /**\n   * Actualiza un producto existente.\n   * @param {number} index - Índice del producto a actualizar.\n   * @param {Product} product - Datos del producto actualizados.\n   * @returns {void}\n   */\n  onUpdateProduct(index: number, product: Product): void {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  /**\n   * Visualiza la información de un producto.\n   * @param {number} index - Índice del producto a visualizar.\n   * @returns {void}\n   */\n  onViewProductInfo(index: number): void {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  /**\n   * Edita un producto existente.\n   * @param {number} index - Índice del producto a editar.\n   * @returns {void}\n   */\n  onEditProduct(index: number): void {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n\n  /**\n   * Carga las bodegas del almacenamiento local.\n   * @returns {void}\n   */\n  loadBodegas(): void {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas).map((bodega: Bodega) => ({\n        ...bodega,\n        name: bodega.name.toUpperCase()\n      }));\n    } else {\n      this.bodegas = [];\n    }\n    this.updateBodegaProducts();\n  }\n\n  /**\n   * Guarda las bodegas en el almacenamiento local.\n   * @returns {void}\n   */\n  saveBodegas(): void {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  /**\n   * Actualiza los productos de cada bodega.\n   * @returns {void}\n   */\n  updateBodegaProducts(): void {\n    this.bodegas.forEach(bodega => {\n      bodega.products = this.products.filter(product => product.bodega === bodega.name);\n    });\n    this.filteredProducts = this.selectedBodega.products;\n  }\n\n  /**\n   * Añade un producto a una bodega.\n   * @param {Product} product - Producto a añadir.\n   * @returns {void}\n   */\n  addProductToBodega(product: Product): void {\n    const targetBodega = this.bodegas.find(b => b.name === product.bodega);\n    if (targetBodega && !targetBodega.products.some(p => p.code === product.code)) {\n      targetBodega.products.push(product);\n      this.saveBodegas();\n    }\n  }\n\n  /**\n   * Carga todos los productos de todas las bodegas.\n   * @returns {void}\n   */\n  loadAllProducts(): void {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  /**\n   * Selecciona una bodega.\n   * @param {Bodega} bodega - Bodega seleccionada.\n   * @returns {void}\n   */\n  selectBodega(bodega: Bodega): void {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  /**\n   * Guarda los cambios en un producto editado.\n   * @returns {void}\n   */\n  onSaveEditProduct(): void {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      this.selectedProductToEdit.bodega = this.selectedBodega.name;\n      this.selectedBodega.products[this.selectedProductIndexToEdit] = this.selectedProductToEdit;\n      this.saveBodegas();\n      this.selectedProductToEdit = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.selectedProductIndexToEdit = -1;\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      editProductModal?.hide();\n    }\n  }\n\n  /**\n   * Añade un nuevo producto.\n   * @param {NgForm} form - Formulario de producto.\n   * @returns {void}\n   */\n  onAddProduct(form: NgForm): void {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.productService.addProduct(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts();\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  /**\n   * Añade una nueva bodega.\n   * @param {NgForm} form - Formulario de bodega.\n   * @returns {void}\n   */\n  addBodega(form: NgForm): void {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  /**\n   * Restablece el formulario especificado.\n   * @param {NgForm} form - Formulario a restablecer.\n   * @param {'user' | 'product'} type - Tipo de formulario.\n   * @returns {void}\n   */\n  resetForm(form: NgForm, type: 'user' | 'product'): void {\n    form.resetForm();\n    if (type === 'user') {\n      this.registerError = '';\n      this.registerSuccess = '';\n    } else if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  /**\n   * Añade un producto a la lista de ingreso.\n   * @returns {void}\n   */\n  onAddProductoToIngreso(): void {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  /**\n   * Elimina un ítem de la lista de ingreso.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItem(index: number): void {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el ingreso de productos.\n   * @returns {void}\n   */\n  onConfirmarIngreso(): void {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.saveBodegas();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n      const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n      if (ingresoBodegaModal) {\n        ingresoBodegaModal.hide();\n        setTimeout(() => ingresoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Muestra el modal para agregar una nueva bodega.\n   * @returns {void}\n   */\n  openAddBodegaModal(): void {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  /**\n   * Añade un producto a la lista de salida.\n   * @returns {void}\n   */\n  onAddProductoToSalida(): void {\n    if (!this.selectedProductSalida) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.salidaItems.find(item => item.product.code === this.selectedProductSalida!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.salidaItems.push({\n      product: this.selectedProductSalida,\n      cantidad: this.cantidadSalida,\n      tipoDocumento: this.tipoDocumento,\n      numeroDocumento: this.numeroDocumento\n    });\n    this.cantidadSalida = 1;\n  }\n\n  /**\n   * Confirma la salida de productos.\n   * @returns {void}\n   */\n  onConfirmarSalida(): void {\n    this.salidaItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        if (product.stock >= item.cantidad) {\n          product.stock -= item.cantidad;\n          this.productService.updateProduct(product.code, product);\n          this.productService.addMovimiento({\n            tipo: 'Salida',\n            numero: this.registroNumeroSalida,\n            fecha: this.today,\n            documento: `${item.tipoDocumento} ${item.numeroDocumento}`,\n            detalles: this.motivoSalida,\n            items: [{\n              code: item.product.code,\n              name: item.product.name,\n              description: item.product.description,\n              cantidad: item.cantidad\n            }],\n            usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n          });\n        } else {\n          alert(`La cantidad a retirar supera el stock disponible de ${product.name}.`);\n        }\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.saveBodegas();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n      const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n      if (salidaBodegaModal) {\n        salidaBodegaModal.hide();\n        setTimeout(() => salidaBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  /**\n   * Elimina un ítem de la lista de salida.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemSalida(index: number): void {\n    this.salidaItems.splice(index, 1);\n  }\n\n  /**\n   * Abre el historial de movimientos.\n   * @returns {void}\n   */\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Visualiza los detalles de un movimiento.\n   * @param {Movimiento} movimiento - Movimiento a visualizar.\n   * @returns {void}\n   */\n  onVerDetallesMovimiento(movimiento: Movimiento): void {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  /**\n   * Carga los proyectos del almacenamiento local.\n   * @returns {void}\n   */\n  loadProjects(): void {\n    const storedProjects = localStorage.getItem('projects');\n    if (storedProjects) {\n      this.projects = JSON.parse(storedProjects);\n    }\n  }\n\n  /**\n   * Realiza la búsqueda en el historial.\n   * @returns {void}\n   */\n  onSearchHistorial(): void {\n    this.relatedProject = null;\n    const searchTerm = this.searchHistorialTerm.toLowerCase();\n    console.log('Search Term:', searchTerm);\n\n    if (searchTerm) {\n      this.filteredHistorial = this.historial.filter((movimiento) => {\n        const matchesTerm = movimiento.tipo.toLowerCase().includes(searchTerm) ||\n          String(movimiento.numero).toLowerCase().includes(searchTerm) ||\n          (movimiento.tipo === 'Salida' && movimiento.documento && movimiento.documento.toLowerCase().includes(searchTerm));\n\n        const matchesFilter = (this.filterIngreso && movimiento.tipo === 'Ingreso') ||\n          (this.filterSalida && movimiento.tipo === 'Salida') ||\n          (this.filterTraslado && movimiento.tipo === 'Traslado');\n\n        return matchesTerm && matchesFilter;\n      });\n\n      console.log('Filtered Historial:', this.filteredHistorial);\n\n      this.relatedProject = this.projects.find((project: Proyecto) =>\n        project.numero.toLowerCase().includes(searchTerm)\n      ) || null;\n\n      console.log('Related Project:', this.relatedProject);\n    } else {\n      this.filteredHistorial = this.historial.filter((movimiento) => {\n        return (this.filterIngreso && movimiento.tipo === 'Ingreso') ||\n          (this.filterSalida && movimiento.tipo === 'Salida') ||\n          (this.filterTraslado && movimiento.tipo === 'Traslado');\n      });\n\n      console.log('Filtered Historial (no search term):', this.filteredHistorial);\n    }\n  }\n\n  /**\n   * Vuelve al historial de movimientos.\n   * @returns {void}\n   */\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  /**\n   * Añade un producto a la lista de traslado.\n   * @returns {void}\n   */\n  onAddProductoToTraslado(): void {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n\n  /**\n   * Elimina un ítem de la lista de traslado.\n   * @param {number} index - Índice del ítem a eliminar.\n   * @returns {void}\n   */\n  onEliminarItemTraslado(index: number): void {\n    this.trasladoItems.splice(index, 1);\n  }\n\n  /**\n   * Confirma el traslado de productos.\n   * @returns {void}\n   */\n  onConfirmarTraslado(): void {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n\n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n\n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n\n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n\n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n\n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/area-dashboard/area-dashboard.component.ts\n            \n            component\n            AreaDashboardComponent\n            \n                98 %\n                (66/67)\n            \n        \n        \n            \n                \n                src/app/area-dashboard/area-dashboard.component.ts\n            \n            interface\n            Bodega\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/auditor-dashboard/auditor-dashboard.component.ts\n            \n            component\n            AuditorDashboardComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/bodega-dashboard/bodega-dashboard.component.ts\n            \n            component\n            BodegaDashboardComponent\n            \n                98 %\n                (67/68)\n            \n        \n        \n            \n                \n                src/app/bodega-dashboard/bodega-dashboard.component.ts\n            \n            interface\n            Bodega\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                98 %\n                (79/80)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            interface\n            Bodega\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            interface\n            Proyecto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                src/app/notificaciones/notificaciones.component.ts\n            \n            component\n            NotificacionesComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/notificaciones/notificaciones.component.ts\n            \n            interface\n            Notification\n            \n                100 %\n                (7/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.6\n        \n            @angular/common : ^18.0.6\n        \n            @angular/compiler : ^18.0.6\n        \n            @angular/core : ^18.0.6\n        \n            @angular/fire : ^18.0.1\n        \n            @angular/forms : ^18.0.6\n        \n            @angular/platform-browser : ^18.0.6\n        \n            @angular/platform-browser-dynamic : ^18.0.6\n        \n            @angular/platform-server : ^18.0.6\n        \n            @angular/router : ^18.0.6\n        \n            @angular/ssr : ^18.0.7\n        \n            @ng-bootstrap/ng-bootstrap : ^17.0.0\n        \n            bootstrap : ^5.3.3\n        \n            bootstrap-icons : ^1.11.3\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            firebase : ^10.12.3\n        \n            html2canvas : ^1.4.1\n        \n            jspdf : ^2.5.1\n        \n            jspdf-autotable : ^3.8.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.6.3\n        \n            xlsx : ^0.18.5\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nErpPraxa\nThis project was generated with Angular CLI version 18.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
