var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.442,1,1.381]],["body/components/AppComponent.html",[0,0.794,1,2.485,2,2.418,3,0.509,4,0.446,5,2.172,6,2.172,7,0.446,8,3.501,9,2.172,10,1.898,11,1.588,12,1.845,13,1.548,14,0.974,15,1.548,16,4.639,17,2.485,18,2.662,19,5.58,20,0.035,21,5.049,22,0.272,23,0.624,24,0.327,25,0.645,26,1.379,27,0.795,28,4.29,29,4.29,30,1.379,31,4.211,32,0.674,33,0.446,34,2.172,35,4.211,36,0.509,37,0.509,38,2.172,39,2.662,40,2.662,41,2.172,42,3,43,2.172,44,0.79,45,2.172,46,1.799,47,1.973,48,3,49,1.799,50,1.799,51,1.799,52,0.575,53,1.644,54,1.799,55,2.172,56,2.172,57,1.644,58,2.172,59,1.644,60,0.964,61,1.799,62,2.172,63,2.172,64,0.028,65,0.028]],["title/components/AuditorDashboardComponent.html",[0,0.442,49,1.381]],["body/components/AuditorDashboardComponent.html",[0,0.682,1,1.217,2,1.87,3,0.344,4,0.302,5,1.47,6,1.47,7,0.302,9,1.47,10,1.781,11,1.49,13,1.197,14,0.754,15,1.197,17,1.217,18,1.47,20,0.035,22,0.257,23,0.482,24,0.435,25,0.611,26,1.635,27,0.943,30,1.869,32,0.635,33,0.302,36,0.344,37,0.344,38,1.47,39,2.059,40,2.059,41,1.47,42,2.575,43,1.47,44,0.805,45,1.47,46,1.217,47,1.335,48,2.575,49,2.133,50,2.439,51,1.217,52,0.389,53,1.113,54,1.217,55,1.47,56,1.47,57,1.113,58,1.47,59,1.113,60,0.652,61,1.217,62,1.47,63,1.47,64,0.021,65,0.021,66,1.816,67,4.822,68,4.822,69,1.816,70,1.197,71,1.647,72,1.87,73,1.509,74,1.969,75,1.705,76,2.631,77,1.307,78,2.279,79,2.631,80,2.053,81,2.631,82,2.631,83,1.427,84,1.785,85,3.992,86,3.992,87,0.933,88,2.85,89,1.495,90,3.992,91,1.647,92,1.382,93,2.85,94,1.509,95,0.682,96,2.279,97,2.85,98,1.47,99,2.279,100,1.055,101,2.85,102,1.535,103,2.85,104,2.85,105,2.85,106,2.133,107,0.855,108,1.113,109,1.335,110,1.427,111,0.782,112,1.627,113,2.279,114,2.631,115,2.279,116,1.627,117,2.85,118,1.627,119,1.627,120,1.627,121,1.627,122,2.85,123,0.436,124,1.627,125,0.593,126,1.627,127,1.627,128,3.319,129,2.575,130,4.15,131,4.15,132,1.95,133,3.992,134,2.875,135,3.992,136,3.992,137,2.279,138,3.992,139,1.87,140,1.87,141,3.992,142,3.992,143,3.319,144,3.992,145,3.319,146,3.992,147,1.427,148,3.992,149,1.197,150,3.992,151,3.319,152,3.992,153,3.319,154,3.992,155,3.319,156,3.992,157,3.992,158,3.319,159,3.992,160,3.992,161,3.319,162,3.319,163,1.87,164,2.936,165,2.544,166,2.85,167,2.369,168,2.369,169,3.786,170,2.875,171,2.544,172,2.052,173,2.544,174,1.816,175,2.052,176,3.318,177,2.875,178,2.85,179,2.052,180,2.052,181,2.369,182,2.85,183,2.052,184,2.85,185,2.85,186,2.369,187,2.544,188,1.816,189,2.544,190,1.816,191,0.855,192,2.052,193,2.052,194,2.052,195,3.992,196,2.052,197,2.369,198,2.936,199,2.85,200,2.369,201,2.85,202,1.816]],["title/guards/AuthGuard.html",[203,2.329,204,2.329]],["body/guards/AuthGuard.html",[3,0.53,4,0.464,7,0.464,12,1.568,14,0.828,20,0.035,22,0.283,24,0.411,30,1.732,32,0.686,33,0.464,34,2.262,36,0.53,37,0.53,44,0.81,64,0.028,65,0.028,70,1.315,83,1.891,87,1.436,91,1.891,92,1.586,94,1.436,111,1.204,123,0.81,204,3.81,205,4.386,206,3.646,207,5.897,208,2.504,209,1.403,210,3.953,211,4.386,212,5.29,213,5.897,214,5.68,215,5.897,216,4.386,217,4.386,218,1.452,219,1.327,220,4.386,221,1.713,222,1.1,223,5.68,224,4.386,225,3.159,226,3.159,227,4.386,228,4.386,229,1.327,230,3.159,231,1.204]],["title/injectables/AuthService.html",[209,0.74,219,0.811]],["body/injectables/AuthService.html",[3,0.36,4,0.315,7,0.315,12,1.064,14,0.562,20,0.035,22,0.192,24,0.429,25,0.951,30,2.025,32,0.497,33,0.315,34,1.536,36,0.36,37,0.36,44,0.845,50,1.758,52,0.562,60,1.415,64,0.022,65,0.022,72,2.384,83,1.471,87,0.975,91,1.974,92,1.656,94,2.015,95,0.754,100,1.165,111,0.817,123,0.947,209,0.942,210,3.52,218,1.68,219,1.033,221,1.163,229,1.503,230,2.144,231,0.817,232,1.7,233,2.144,234,4.23,235,4.23,236,2.625,237,4.23,238,4.23,239,4.23,240,4.23,241,4.23,242,3.242,243,3.421,244,3.421,245,3.665,246,4.115,247,3.421,248,4.115,249,2.977,250,2.977,251,2.977,252,2.977,253,2.977,254,1.602,255,2.977,256,2.977,257,2.977,258,2.977,259,2.977,260,2.977,261,2.964,262,2.977,263,2.475,264,3.421,265,2.282,266,2.977,267,2.21,268,2.977,269,3.421,270,2.977,271,2.123,272,2.086,273,2.977,274,2.123,275,3.421,276,2.977,277,3.421,278,0.192,279,1.13,280,1.163,281,1.163,282,1.163,283,1.163,284,2.475,285,2.21,286,2.21,287,3.421,288,3.421,289,3.421,290,3.421,291,3.421,292,0.857,293,1.536,294,4.23,295,1.536,296,2.475,297,1.536,298,2.475,299,2.35,300,3.421,301,2.475,302,2.475,303,2.475,304,2.475,305,3.421,306,2.964,307,4.797,308,2.475,309,3.421,310,2.475,311,2.475,312,2.475,313,4.592,314,2.475,315,2.475,316,2.475,317,2.475,318,2.475,319,3.421,320,2.475,321,2.475,322,2.475,323,2.475,324,3.421,325,2.475,326,2.475,327,1.272,328,2.475,329,2.475,330,1.536,331,1.897,332,1.536,333,2.475]],["title/interfaces/Bodega.html",[52,0.442,278,0.209]],["body/interfaces/Bodega.html",[0,0.385,3,0.216,4,0.189,7,0.189,10,0.537,11,0.449,13,0.537,14,0.338,15,0.537,20,0.036,22,0.225,23,0.341,24,0.308,25,0.831,27,0.814,32,0.554,33,0.189,36,0.216,37,0.216,44,0.863,46,0.764,47,1.636,52,0.81,64,0.015,65,0.015,69,1.14,70,0.537,71,1.008,72,0.838,73,0.924,74,1.205,75,0.764,76,1.022,77,0.586,78,1.022,79,1.022,80,1.997,81,1.022,82,1.022,84,0.64,89,0.959,95,0.541,96,1.022,98,0.923,99,1.022,100,1.261,102,1.672,106,2.473,107,0.537,108,0.699,109,0.838,110,1.008,111,0.491,112,1.022,113,1.022,114,2.463,115,1.611,116,1.022,118,1.022,119,1.022,120,1.022,121,1.994,123,0.946,124,1.022,125,1.035,126,1.022,127,1.022,129,1.455,132,1.79,134,1.289,137,1.994,139,0.838,140,2.147,147,1.542,149,1.294,191,1.047,209,0.799,218,0.774,222,0.449,229,1.314,231,0.774,278,0.115,285,0.838,286,0.838,292,1.161,334,0.586,335,1.488,336,1.488,337,1.857,338,1.542,339,0.64,340,1.14,341,1.102,342,1.14,343,1.14,344,1.14,345,2.526,346,1.14,347,3.057,348,1.14,349,1.14,350,1.941,351,2.124,352,1.843,353,1.684,354,1.542,355,2.202,356,1.843,357,1.684,358,1.843,359,1.14,360,1.14,361,1.14,362,1.14,363,1.14,364,1.14,365,1.14,366,1.14,367,1.14,368,1.14,369,1.14,370,1.14,371,1.14,372,1.14,373,1.14,374,1.14,375,1.14,376,1.14,377,2.225,378,1.14,379,1.14,380,2.526,381,1.14,382,1.14,383,1.14,384,1.14,385,1.205,386,1.798,387,1.14,388,2.225,389,1.798,390,2.225,391,2.225,392,1.14,393,1.14,394,1.798,395,1.14,396,1.798,397,2.225,398,1.798,399,3.057,400,1.14,401,1.14,402,1.14,403,1.798,404,1.14,405,1.14,406,1.14,407,1.14,408,1.022,409,1.14,410,1.14,411,1.14,412,1.14,413,1.14,414,1.798,415,1.798,416,1.14,417,1.14,418,1.14,419,2.225,420,1.798,421,2.526,422,1.798,423,1.14,424,1.14,425,1.14,426,1.14,427,1.14,428,1.14,429,1.14,430,1.14,431,2.225,432,2.526,433,1.798,434,1.14,435,1.14,436,1.14,437,1.14,438,1.798,439,1.14,440,1.14,441,1.14,442,1.14,443,1.14,444,1.14,445,1.14,446,1.14,447,1.14,448,1.14,449,1.14,450,1.289,451,1.289,452,1.289,453,1.289,454,1.289,455,1.14,456,1.14,457,1.14,458,1.14,459,0.838,460,1.14,461,1.14,462,1.798,463,1.14,464,1.14,465,1.14,466,1.14,467,1.798,468,1.798,469,2.92,470,1.798,471,2.225,472,1.798,473,2.225,474,1.14,475,1.14,476,1.022,477,1.798,478,1.14,479,2.021,480,1.14,481,1.14,482,0.699,483,2.526,484,2.526,485,1.14,486,0.923,487,1.994,488,1.022,489,2.225,490,1.14,491,1.14,492,1.14,493,2.225,494,1.798,495,1.14,496,1.14,497,1.14,498,1.488,499,1.14,500,1.14,501,1.798,502,1.798,503,2.92,504,1.14,505,3.167,506,1.14,507,2.225,508,2.225,509,1.801,510,1.801,511,1.994,512,1.14,513,2.749,514,1.798,515,1.14,516,1.14,517,1.14,518,1.14,519,1.14,520,1.694,521,2.225,522,1.798,523,2.225,524,1.492,525,1.611,526,1.492,527,1.492,528,1.492,529,1.14,530,1.14,531,1.14,532,1.798,533,1.798,534,1.798,535,1.798,536,1.492,537,2.225,538,2.225,539,1.14,540,1.14,541,1.798,542,1.14,543,1.798,544,1.14,545,1.14,546,2.225,547,1.14,548,2.225,549,1.14,550,3.295,551,1.488,552,1.14,553,2.903,554,1.488,555,1.14,556,1.798,557,1.14,558,1.14,559,1.14,560,1.14,561,1.14,562,1.14,563,1.14,564,1.488,565,1.022,566,0.764,567,1.14,568,1.14,569,1.14,570,1.488,571,1.14,572,1.14,573,1.798,574,1.14,575,1.798,576,1.14,577,1.14,578,1.14,579,1.14,580,2.225,581,1.798,582,1.798,583,1.14,584,1.14,585,1.798,586,1.14,587,1.14,588,1.14,589,1.14,590,1.14,591,1.14,592,1.14,593,1.14,594,2.225,595,1.14,596,1.14,597,1.14,598,1.14,599,1.14,600,1.14,601,2.225,602,2.225,603,1.14,604,1.14,605,1.14,606,1.798,607,1.14,608,1.798,609,1.14,610,1.14,611,2.225,612,1.14,613,1.14,614,1.14,615,1.14,616,1.611,617,1.798,618,1.798,619,0.764,620,0.764,621,1.14,622,1.14,623,1.14,624,1.14,625,1.14,626,1.798,627,1.14,628,1.798,629,1.14,630,1.14,631,1.14]],["title/interfaces/Bodega-1.html",[52,0.373,278,0.176,292,0.568]],["body/interfaces/Bodega-1.html",[0,0.368,3,0.204,4,0.179,7,0.179,10,0.507,11,0.424,13,0.507,14,0.319,15,0.507,20,0.036,22,0.217,23,0.326,24,0.298,25,0.819,27,0.725,32,0.54,33,0.179,36,0.204,37,0.204,44,0.843,51,0.723,52,0.807,64,0.014,65,0.014,69,1.078,70,0.507,71,0.964,72,0.793,73,0.883,74,1.153,76,0.966,77,0.554,78,0.966,79,0.966,80,1.961,81,0.966,82,0.966,84,0.605,89,0.924,95,0.524,96,0.966,98,0.872,99,0.966,100,1.244,102,1.666,106,2.482,107,0.507,108,0.661,109,0.793,110,0.964,111,0.464,112,0.966,113,0.966,114,2.396,115,1.54,116,0.966,118,0.966,119,0.966,120,0.966,121,1.922,123,0.947,124,0.966,125,1.046,126,0.966,127,0.966,129,1.392,132,1.639,134,1.218,137,1.922,139,0.793,140,2.283,147,1.373,149,1.152,191,1.009,209,0.77,218,0.741,222,0.424,229,1.319,231,0.741,272,0.661,278,0.109,279,0.464,280,0.661,281,0.661,282,0.661,283,1.314,285,0.793,286,0.793,292,1.132,334,0.554,337,1.8,338,1.5,339,0.605,340,1.078,341,1.054,342,1.078,343,1.078,344,1.078,345,2.447,346,1.078,347,2.85,348,1.078,349,1.078,350,1.833,351,2.005,352,1.641,353,1.5,354,1.373,355,2.122,356,1.641,357,1.5,358,1.641,359,1.078,360,1.078,361,1.078,362,1.078,363,1.078,364,1.078,365,1.078,366,1.078,367,1.078,368,1.078,369,1.078,370,1.078,371,1.078,372,1.078,373,1.078,374,1.078,375,1.078,376,1.078,377,2.145,378,1.078,379,1.078,380,2.447,381,1.078,382,1.078,383,1.078,384,1.078,385,1.153,386,1.719,387,1.078,388,2.145,389,1.719,390,2.145,391,2.145,392,1.078,393,1.078,394,1.719,395,1.078,396,1.719,397,2.145,398,1.719,399,2.85,400,1.078,401,1.078,402,1.078,403,1.719,404,1.078,405,1.078,406,1.078,407,1.078,408,0.966,409,1.078,410,1.078,411,1.078,412,1.078,413,1.078,414,1.719,415,1.719,416,1.078,417,1.078,418,1.078,419,2.145,420,1.719,421,2.674,422,1.719,423,1.078,424,1.078,425,1.078,426,1.078,427,1.078,428,1.078,429,1.078,430,1.078,431,1.719,432,1.719,433,2.447,434,1.078,435,1.078,436,1.078,437,1.078,438,1.719,439,1.078,440,1.078,441,1.078,442,1.078,443,1.078,444,1.078,445,1.078,446,1.078,447,1.078,448,1.078,449,1.078,455,1.719,456,1.078,457,1.078,458,1.078,459,0.793,460,1.078,461,1.078,462,1.719,463,1.078,464,1.078,465,1.078,466,1.078,467,1.719,468,1.719,469,2.85,470,1.719,471,2.145,472,1.719,473,2.145,474,1.078,475,1.078,476,0.966,477,1.719,478,1.078,479,2.199,480,1.078,481,1.078,482,0.661,483,2.447,484,2.447,485,1.078,486,0.872,487,1.922,488,0.966,489,2.145,490,1.078,491,1.078,492,1.078,493,2.145,494,1.719,495,1.078,496,1.078,497,1.078,498,1.406,499,1.078,500,1.078,501,1.719,502,1.719,503,2.85,504,1.078,505,3.105,506,1.078,507,2.145,508,2.145,509,1.736,510,1.736,511,1.922,512,1.078,513,2.674,514,1.719,515,1.078,516,1.078,517,1.078,518,1.078,519,1.078,520,1.641,521,2.145,522,1.719,523,2.145,524,1.438,525,1.54,526,1.438,527,1.438,528,1.438,529,1.078,530,1.078,531,1.078,532,1.719,533,1.719,534,1.719,535,1.719,536,1.438,537,2.447,538,2.447,539,1.078,540,1.078,541,1.719,542,1.078,543,1.719,544,1.078,545,1.078,546,2.447,547,1.078,548,2.447,549,1.078,550,3.193,551,1.406,552,1.078,553,2.798,554,1.406,555,1.078,556,1.719,557,1.078,558,1.078,559,1.078,560,1.078,561,1.078,562,1.078,563,1.078,564,1.406,565,0.966,566,0.723,567,1.078,568,1.078,569,1.078,570,1.406,571,1.078,572,1.078,573,1.719,574,1.078,575,1.719,576,1.078,577,1.078,578,1.078,579,1.078,580,2.145,581,1.719,582,1.719,583,1.078,584,1.078,585,1.719,586,1.078,587,1.078,588,1.078,589,1.078,590,1.078,591,1.078,592,1.078,593,1.078,594,2.145,595,1.078,596,1.078,597,1.078,598,1.078,599,1.078,600,1.078,601,2.145,602,2.145,603,1.078,604,1.078,605,1.078,606,1.719,607,1.078,608,1.719,609,1.078,610,1.078,611,2.145,612,1.078,613,1.078,614,1.078,615,1.078,616,1.54,617,1.719,618,1.719,619,0.723,620,0.723,621,1.078,622,1.078,623,1.078,624,1.078,625,1.078,626,1.719,627,1.078,628,1.719,629,1.078,630,1.078,631,1.078,632,1.406,633,1.406,634,3.841,635,2.698,636,1.392,637,1.218,638,1.691,639,1.691,640,1.691,641,1.691,642,1.691,643,3.366,644,2.698,645,1.691,646,1.691,647,2.698,648,1.691,649,1.691,650,2.698,651,1.691,652,1.691,653,2.698,654,1.691,655,1.691,656,2.698,657,1.691,658,1.691,659,2.698,660,1.691,661,1.691,662,2.698,663,1.691,664,1.691,665,2.698,666,1.691,667,1.691,668,2.698,669,1.691,670,1.691,671,2.698,672,1.691,673,1.691,674,2.698,675,1.691,676,1.691,677,1.691,678,1.691,679,1.218,680,1.406,681,1.691,682,1.691,683,1.406,684,0.966,685,1.406]],["title/interfaces/Bodega-2.html",[52,0.373,278,0.176,385,1.166]],["body/interfaces/Bodega-2.html",[0,0.326,3,0.176,4,0.154,7,0.154,10,0.436,11,0.365,13,0.436,14,0.274,15,0.436,20,0.036,22,0.284,23,0.288,24,0.324,25,0.877,27,0.733,32,0.504,33,0.154,36,0.176,37,0.176,44,0.823,52,0.782,53,0.568,60,1.272,64,0.013,65,0.013,70,0.436,71,0.853,72,0.681,73,0.781,74,1.02,75,0.621,76,0.83,77,0.476,78,0.83,79,0.83,80,1.861,81,0.83,82,0.83,84,0.52,89,0.833,95,0.53,96,0.83,98,0.75,99,0.83,100,1.195,102,1.634,106,2.414,107,0.436,108,0.568,109,0.681,110,0.853,111,0.399,112,0.83,113,0.83,114,2.216,115,1.363,116,0.83,118,0.83,119,0.83,120,0.83,121,1.734,123,0.946,124,0.83,125,1.068,126,0.83,127,0.83,129,1.231,132,1.721,137,2.007,139,0.681,140,2.065,147,1.387,149,1.164,163,0.681,191,0.911,209,0.695,218,0.655,222,0.365,229,1.331,231,0.655,265,1.782,267,1.819,278,0.154,279,0.965,285,1.647,286,0.681,292,1.146,293,1.813,295,1.813,297,1.813,299,2.007,334,0.476,337,2.065,338,1.387,339,0.52,340,0.926,341,0.932,342,0.926,343,0.926,344,0.926,345,2.239,346,0.926,347,2.808,348,0.926,349,0.926,350,1.797,351,1.966,352,1.658,353,1.516,354,1.387,355,2.149,356,1.658,357,1.516,358,1.658,359,0.926,360,0.926,361,0.926,362,0.926,363,1.521,364,1.521,365,0.926,366,0.926,367,0.926,368,0.926,369,0.926,370,0.926,371,0.926,372,0.926,373,0.926,374,0.926,375,0.926,376,0.926,377,1.935,378,0.926,379,0.926,380,2.239,381,0.926,382,0.926,383,0.926,384,0.926,385,1.02,386,1.521,387,0.926,388,1.935,389,1.521,390,1.935,391,1.935,392,2.473,393,0.926,394,1.521,395,1.935,396,1.521,397,1.935,398,1.935,399,3.037,400,0.926,401,0.926,402,0.926,403,1.521,404,0.926,405,0.926,406,0.926,407,0.926,408,0.83,409,0.926,410,1.521,411,0.926,412,0.926,413,0.926,414,1.521,415,1.521,416,0.926,417,0.926,418,0.926,419,1.935,420,1.521,421,2.239,422,1.521,423,0.926,424,0.926,425,0.926,426,0.926,427,0.926,428,0.926,429,0.926,430,0.926,431,1.935,432,2.239,433,1.521,434,0.926,435,0.926,436,0.926,437,0.926,438,1.521,439,0.926,440,0.926,441,0.926,442,0.926,443,0.926,444,0.926,445,0.926,446,0.926,447,0.926,448,0.926,449,0.926,450,1.047,451,1.047,452,1.047,453,1.047,454,1.047,455,0.926,456,0.926,457,0.926,458,1.521,459,1.647,460,0.926,461,0.926,462,1.521,463,0.926,464,0.926,465,0.926,466,0.926,467,1.935,468,1.521,469,2.932,470,1.935,471,2.239,472,1.521,473,2.239,474,1.521,475,1.521,476,1.363,477,1.935,478,0.926,479,2.156,480,0.926,481,0.926,482,0.568,483,2.239,484,2.658,485,1.935,486,1.813,487,2.516,488,0.83,489,2.239,490,0.926,491,1.521,492,0.926,493,1.935,494,1.521,495,0.926,496,0.926,497,0.926,499,0.926,500,0.926,501,1.935,502,1.935,503,2.658,504,0.926,505,3.037,506,0.926,507,1.935,508,1.935,509,1.813,510,1.813,511,1.734,512,0.926,513,2.658,514,1.521,515,0.926,516,0.926,517,0.926,518,0.926,519,1.521,520,1.501,521,2.473,522,1.521,523,1.935,524,1.501,525,1.363,526,1.297,527,1.297,528,1.297,529,0.926,530,1.521,531,0.926,532,0.926,533,0.926,534,0.926,535,0.926,536,1.883,537,1.935,538,1.935,539,0.926,540,0.926,541,1.521,542,0.926,543,1.521,544,0.926,545,0.926,546,1.935,547,0.926,548,1.935,549,0.926,552,0.926,555,0.926,556,1.521,557,0.926,558,0.926,559,0.926,560,0.926,561,0.926,562,0.926,563,0.926,565,0.83,566,0.621,567,0.926,568,0.926,569,0.926,571,0.926,572,0.926,573,1.521,574,0.926,575,1.521,576,0.926,577,0.926,578,0.926,579,0.926,580,1.935,581,1.521,582,1.521,583,0.926,584,0.926,585,1.521,586,0.926,587,0.926,588,0.926,589,0.926,590,0.926,591,0.926,592,0.926,593,0.926,594,1.935,595,0.926,596,0.926,597,0.926,598,0.926,599,0.926,600,0.926,601,2.239,602,2.239,603,0.926,604,0.926,605,0.926,606,1.521,607,0.926,608,1.521,609,0.926,610,0.926,611,1.935,612,0.926,613,0.926,614,0.926,615,0.926,616,1.363,617,1.521,618,1.521,619,0.621,620,0.621,621,0.926,622,1.521,623,1.521,624,0.926,625,0.926,626,1.521,627,0.926,628,1.521,629,0.926,630,0.926,631,0.926,684,2.216,686,1.047,687,1.208,688,1.208,689,1.208,690,1.208,691,1.208,692,1.208,693,1.208,694,1.208,695,1.208,696,1.208,697,1.984,698,2.524,699,3.825,700,1.231,701,1.208,702,1.984,703,2.922,704,1.719,705,1.984,706,1.984,707,1.719,708,1.984,709,1.984,710,3.226,711,1.719,712,2.524,713,2.531,714,1.984,715,1.984,716,1.984,717,1.208,718,1.208,719,1.984,720,2.524,721,1.208,722,1.208,723,1.208,724,1.208,725,1.208,726,1.208,727,1.208,728,1.208,729,1.208,730,1.208,731,1.208,732,1.208,733,1.208,734,1.208,735,1.208,736,1.208,737,0.926,738,1.208,739,1.208,740,1.208,741,1.208,742,1.208,743,1.208,744,1.208,745,1.208,746,1.208,747,2.922,748,1.208,749,1.208,750,1.208,751,1.208,752,1.984,753,1.208,754,1.208,755,1.208,756,1.984,757,1.984,758,1.984,759,1.208,760,1.208,761,1.208,762,1.208,763,1.984,764,1.208,765,1.208,766,1.208,767,1.208,768,1.208,769,1.208,770,1.208,771,1.208,772,1.208,773,2.524,774,1.984,775,1.208,776,1.208,777,1.208,778,1.208,779,1.208,780,1.208,781,1.208]],["title/components/LoginComponent.html",[0,0.442,54,1.381]],["body/components/LoginComponent.html",[0,0.727,1,1.421,2,2.079,3,0.402,4,0.352,5,1.715,6,1.715,7,0.352,9,1.715,10,1.831,11,1.532,13,1.33,14,0.838,15,1.33,17,1.421,18,1.715,20,0.035,22,0.214,23,0.536,24,0.431,25,0.874,26,1.635,27,0.943,30,1.817,32,0.67,33,0.352,36,0.402,37,0.402,38,1.715,39,2.288,40,2.288,41,1.715,42,2.747,43,1.715,44,0.815,45,1.715,46,1.421,47,1.558,48,2.747,49,1.421,50,1.421,51,1.421,52,0.454,53,1.298,54,2.276,55,1.715,56,1.715,57,1.298,58,1.715,59,1.298,60,0.761,61,1.421,62,1.715,63,1.715,64,0.024,65,0.024,66,2.119,73,1.635,74,2.133,75,1.895,77,1.453,83,1.586,87,1.089,91,1.586,92,1.33,94,1.089,95,0.454,107,0.997,108,1.732,111,0.913,123,0.509,149,0.997,163,1.558,164,3.181,165,3.536,170,3.596,171,2.119,173,2.119,174,2.119,183,2.395,187,2.827,188,2.827,189,3.394,190,2.827,191,1.33,198,3.181,202,2.119,208,1.898,209,1.306,244,4.428,265,2.133,267,2.339,292,0.692,337,2.496,339,1.189,354,1.189,355,1.95,385,1.421,459,1.558,479,1.558,482,1.298,486,2.862,487,3.168,488,3.041,707,2.395,737,3.394,782,2.764,783,4.992,784,4.436,785,5.549,786,4.436,787,4.436,788,4.436,789,3.325,790,3.688,791,3.325,792,3.325,793,2.827,794,3.325,795,3.325,796,4.436,797,4.436,798,3.325,799,3.325,800,5.326,801,5.326,802,5.326,803,3.688,804,4.436,805,2.764,806,2.395,807,3.325,808,2.764,809,2.764,810,2.395,811,2.395,812,2.764,813,3.996,814,3.325,815,3.325,816,4.436,817,2.764,818,3.325,819,2.395,820,3.325,821,3.325,822,3.688,823,2.395,824,2.395,825,2.395,826,2.395,827,2.395,828,2.764,829,2.764,830,3.688,831,2.395,832,3.325]],["title/interfaces/Movimiento.html",[278,0.209,338,1.156]],["body/interfaces/Movimiento.html",[3,0.387,4,0.339,7,0.339,12,1.146,20,0.035,22,0.207,23,0.523,24,0.467,25,0.992,27,0.605,32,0.523,33,0.339,36,0.634,37,0.387,44,0.491,52,0.438,64,0.023,65,0.023,80,1.252,87,1.05,89,0.88,92,1.694,95,0.438,100,1.399,102,1.504,123,0.839,125,1.021,132,1.252,147,1.146,149,0.962,191,1.574,219,1.086,221,1.252,222,1.522,229,1.317,236,1.654,254,1.644,271,1.654,272,1.914,274,1.654,278,0.316,279,0.88,280,1.252,281,1.252,282,1.252,283,1.252,292,1.141,327,1.85,330,1.654,332,1.654,334,1.05,338,1.876,341,1.691,350,1.691,351,1.37,352,1.37,353,1.252,354,1.146,356,1.37,357,1.252,358,1.37,482,1.252,520,1.37,524,2.242,526,2.242,527,2.242,528,2.242,536,2.242,566,2.242,619,2.242,620,2.242,636,2.707,700,1.654,833,1.654,834,3.123,835,2.997,836,1.654,837,1.831,838,1.654,839,2.043,840,2.043,841,2.043,842,2.043,843,2.043,844,2.043,845,2.043,846,2.043,847,2.043,848,2.043,849,2.043,850,2.043,851,2.759,852,2.043,853,2.043,854,2.043,855,2.043,856,2.043,857,2.043,858,2.043,859,2.043,860,2.043,861,2.043,862,3.123,863,3.123,864,2.043,865,3.123,866,2.043,867,2.043,868,2.043,869,2.759,870,2.759,871,2.043,872,2.759,873,2.043,874,2.759,875,2.043,876,2.759,877,2.043,878,2.043,879,2.043,880,2.043,881,2.043,882,2.043,883,2.043,884,2.043,885,2.043,886,2.043,887,2.043,888,2.043,889,2.043,890,2.043,891,2.043,892,2.043,893,2.043,894,2.028,895,2.043,896,2.043,897,3.123,898,2.759,899,2.043,900,2.043,901,2.043,902,2.043,903,2.043,904,2.043,905,1.831,906,2.043,907,2.043,908,1.654]],["title/components/NavbarComponent.html",[0,0.442,17,1.381]],["body/components/NavbarComponent.html",[0,0.594,1,0.912,2,1.515,3,0.258,4,0.226,5,1.101,6,1.101,7,0.226,9,1.101,10,1.675,11,1.401,13,0.97,14,0.61,15,0.97,16,3.244,17,1.86,18,1.101,20,0.035,22,0.208,23,0.391,24,0.382,25,0.753,26,1.278,27,0.737,28,2.688,29,2.688,30,1.894,32,0.565,33,0.226,34,1.101,36,0.258,37,0.258,38,1.101,39,1.668,40,1.668,41,1.101,42,2.246,43,1.101,44,0.716,45,1.101,46,0.912,47,1,48,2.246,49,0.912,50,0.912,51,0.912,52,0.736,53,0.833,54,0.912,55,1.101,56,1.101,57,0.833,58,1.101,59,0.833,60,0.488,61,0.912,62,1.101,63,1.101,64,0.017,65,0.017,66,1.36,70,0.97,71,1.395,73,1.278,75,1.381,77,1.059,83,1.156,84,1.556,87,1.059,91,1.395,92,1.17,94,1.765,95,0.719,100,0.74,106,1.86,107,0.64,123,0.327,139,1.515,140,1.515,149,1.617,163,2.396,164,3.137,165,2.981,167,2.688,171,2.487,172,1.537,173,2.981,174,1.36,175,3.135,176,1.537,177,1.537,179,2.328,180,2.328,186,2.688,187,3.137,188,3.503,189,2.774,190,2.06,191,0.97,192,2.811,193,4.125,194,4.023,196,3.369,197,1.774,198,3.436,202,2.487,208,1.219,209,1.234,210,3.258,218,1.071,222,0.811,231,0.887,243,2.688,245,2.811,261,1.537,263,1.774,339,0.763,341,1.262,353,0.833,354,0.763,355,2.297,476,1.219,479,2.684,509,1.668,510,1.668,525,1.846,565,1.846,616,1.846,684,2.486,793,1.36,803,1.774,806,3.545,808,1.774,809,1.774,810,2.328,811,3.369,812,1.774,813,3.135,817,3.619,819,2.811,823,2.328,824,2.328,825,1.537,826,2.328,827,2.328,830,1.774,831,2.811,894,1,909,1.774,910,4.922,911,3.902,912,3.233,913,3.902,914,3.902,915,3.902,916,3.369,917,4.353,918,3.902,919,3.902,920,3.902,921,3.233,922,3.902,923,2.637,924,3.233,925,2.134,926,2.134,927,2.134,928,2.134,929,2.134,930,2.134,931,2.134,932,2.134,933,2.134,934,2.134,935,2.134,936,2.134,937,2.134,938,2.134,939,1.537,940,2.134,941,2.134,942,2.134,943,1.537,944,2.134,945,2.134,946,2.134,947,1.537,948,1.36,949,2.134,950,2.134,951,2.134,952,3.902,953,2.134,954,2.134,955,2.134,956,3.233,957,2.134,958,3.233,959,3.244,960,3.233,961,3.233,962,3.233,963,3.233,964,3.233,965,2.328,966,3.233,967,3.233,968,3.233,969,3.233,970,3.233,971,3.233,972,3.233,973,3.233,974,3.233,975,3.233,976,3.233,977,3.233,978,3.233,979,3.233,980,3.233,981,3.233,982,2.134,983,2.688,984,2.688,985,3.233,986,2.688,987,3.244,988,1.774,989,1.774,990,2.134,991,4.353,992,5.883,993,3.233,994,2.134,995,4.353,996,2.134,997,2.134,998,3.233,999,2.134,1000,4.092,1001,2.134,1002,3.233,1003,2.134,1004,3.233,1005,3.619,1006,6.077,1007,4.482,1008,2.134,1009,5.883,1010,5.883,1011,3.233,1012,2.134,1013,2.134,1014,3.889,1015,2.134,1016,2.134,1017,2.134,1018,2.134,1019,4.353,1020,4.353,1021,4.353,1022,3.619,1023,2.134,1024,2.134,1025,3.233,1026,3.902,1027,3.902,1028,5.585,1029,3.902,1030,2.134,1031,3.233,1032,2.134,1033,3.233,1034,2.688,1035,2.134,1036,2.134,1037,2.134,1038,2.134,1039,2.134,1040,2.134,1041,2.134,1042,2.134,1043,2.134,1044,2.134,1045,3.902,1046,3.902,1047,3.233,1048,3.233,1049,2.134,1050,2.134,1051,2.134,1052,2.134,1053,1.774,1054,1.774,1055,2.688,1056,2.134,1057,1.774,1058,2.134,1059,2.134,1060,2.328,1061,3.233,1062,1.774]],["title/components/NotificacionesComponent.html",[0,0.442,57,1.263]],["body/components/NotificacionesComponent.html",[0,0.526,1,0.726,2,1.269,3,0.205,4,0.18,5,0.877,6,0.877,7,0.18,9,0.877,10,1.579,11,1.321,13,0.812,14,0.511,15,0.812,17,0.726,18,0.877,20,0.035,21,1.413,22,0.11,23,0.327,24,0.379,25,0.844,26,1.468,27,0.727,30,1.845,32,0.59,33,0.18,36,0.205,37,0.205,38,0.877,39,1.397,40,1.397,41,0.877,42,1.987,43,0.877,44,0.72,45,0.877,46,0.726,47,0.797,48,1.987,49,0.726,50,0.726,51,0.726,52,0.232,53,0.664,54,0.726,55,0.877,56,0.877,57,1.504,58,0.877,59,0.664,60,0.389,61,0.726,62,0.877,63,0.877,64,0.015,65,0.015,66,1.083,70,0.812,71,1.207,73,1.106,75,1.157,77,0.887,83,0.968,84,1.377,87,0.557,89,1.291,91,1.504,92,1.262,94,1.724,95,0.687,100,0.773,102,0.744,106,1.646,107,0.51,109,0.797,110,0.968,111,0.467,123,0.686,125,0.354,128,1.413,129,1.397,130,3.202,131,3.202,139,0.797,140,1.269,143,3.202,145,3.202,147,1.377,149,1.705,151,3.202,153,3.202,155,3.202,158,3.202,161,3.202,162,3.726,163,2.203,164,3.287,165,2.681,168,1.413,169,4.213,170,2.774,171,2.996,172,1.225,173,3.705,174,2.455,175,3.624,176,1.951,177,1.225,179,3.03,180,3.228,181,3.202,183,1.225,187,3.415,188,2.681,189,3.653,190,2.152,191,1.344,192,2.774,193,3.624,194,3.03,196,2.774,198,2.996,200,3.202,202,2.152,208,0.971,209,1.026,218,1.057,222,0.68,229,1.345,231,0.927,242,2.152,254,1.547,272,1.836,278,0.11,279,0.467,280,0.664,281,0.664,282,0.664,283,0.664,292,0.703,327,1.443,331,1.083,339,0.608,355,2.093,385,0.726,408,0.971,479,2.203,486,1.987,509,0.877,510,2.17,511,1.928,679,1.951,680,2.252,684,1.547,685,2.252,793,1.726,805,3.909,806,1.225,810,3.516,811,1.225,813,3.792,819,1.951,822,1.413,823,1.951,824,1.951,825,2.432,826,2.432,827,1.951,828,1.413,829,2.252,831,1.225,837,0.971,838,0.877,894,1.805,905,2.402,908,0.877,916,2.432,923,2.425,939,1.225,943,1.951,947,1.225,948,1.726,959,1.413,965,1.951,983,2.252,984,4.288,986,1.413,987,2.252,988,1.413,989,1.413,1000,4.183,1005,1.413,1007,2.252,1014,3.202,1034,1.413,1053,3.202,1054,3.202,1055,2.252,1060,3.516,1062,1.413,1063,1.225,1064,2.808,1065,2.252,1066,2.808,1067,3.202,1068,3.202,1069,2.709,1070,2.709,1071,3.202,1072,2.709,1073,3.202,1074,3.202,1075,2.709,1076,3.202,1077,2.709,1078,1.7,1079,1.7,1080,2.252,1081,3.726,1082,1.7,1083,2.252,1084,1.7,1085,1.7,1086,1.7,1087,1.7,1088,2.252,1089,1.7,1090,1.7,1091,1.7,1092,2.252,1093,1.7,1094,1.7,1095,1.7,1096,1.7,1097,1.7,1098,4.684,1099,2.252,1100,1.413,1101,1.413,1102,1.413,1103,1.413,1104,2.808,1105,1.413,1106,1.413,1107,1.413,1108,3.202,1109,3.202,1110,2.252,1111,1.413,1112,1.413,1113,1.413,1114,1.413,1115,1.413,1116,1.413,1117,2.252,1118,3.202,1119,2.252,1120,2.252,1121,2.252,1122,3.202,1123,1.413,1124,1.413,1125,1.413,1126,1.413,1127,1.413,1128,2.252,1129,3.726,1130,1.413,1131,1.413,1132,1.413,1133,1.413,1134,3.852,1135,3.852,1136,2.709,1137,2.709,1138,2.709,1139,2.709,1140,2.709,1141,2.709,1142,2.709,1143,3.852,1144,2.709,1145,2.709,1146,2.709,1147,2.709,1148,2.709,1149,2.709,1150,2.709,1151,2.709,1152,2.709,1153,2.709,1154,2.709,1155,2.709,1156,2.709,1157,2.709,1158,2.709,1159,2.709,1160,2.709,1161,2.709,1162,2.709,1163,2.709,1164,2.709,1165,2.709,1166,2.709,1167,2.709,1168,2.709,1169,1.7,1170,1.7,1171,1.7,1172,4.207,1173,1.7,1174,2.709,1175,2.709,1176,3.852,1177,1.7,1178,2.709,1179,2.709,1180,1.7,1181,3.377,1182,2.709,1183,2.709,1184,2.709,1185,3.852,1186,2.709,1187,2.709,1188,1.7,1189,2.808,1190,3.377,1191,1.7,1192,1.7,1193,1.7,1194,2.709,1195,1.7,1196,3.377,1197,3.377,1198,1.7,1199,2.709,1200,1.7,1201,1.7,1202,2.709,1203,1.7,1204,1.7,1205,4.207,1206,3.377,1207,1.7,1208,1.7,1209,1.7,1210,3.377,1211,1.7,1212,2.709,1213,2.709,1214,2.709,1215,1.7,1216,1.7,1217,1.7,1218,1.7,1219,1.7,1220,1.7,1221,1.7,1222,2.709,1223,1.7,1224,1.7,1225,1.7,1226,1.7,1227,1.7,1228,4.207,1229,1.7,1230,1.7,1231,1.7,1232,4.702,1233,1.7,1234,1.7,1235,1.7,1236,1.7,1237,1.7,1238,1.7]],["title/interfaces/Notification.html",[254,0.97,278,0.209]],["body/interfaces/Notification.html",[3,0.406,4,0.355,7,0.355,12,1.201,14,0.634,20,0.035,22,0.217,23,0.54,24,0.445,25,0.953,32,0.54,33,0.355,34,1.733,36,0.406,37,0.406,50,1.908,52,0.61,60,1.431,64,0.024,65,0.024,72,2.506,95,0.459,100,1.224,111,0.922,123,0.961,209,0.769,210,3.198,218,1.604,219,1.121,221,1.312,229,1.534,230,2.419,231,0.922,233,2.419,234,2.793,235,2.793,236,1.733,237,2.793,238,2.793,239,2.793,240,2.793,241,2.793,242,2.141,245,2.419,254,1.67,261,2.419,264,2.793,265,2.144,267,2.093,269,2.793,271,1.733,272,2.236,274,1.733,275,2.793,277,2.793,278,0.217,279,1.528,280,2.088,281,2.088,282,2.088,283,2.088,284,2.793,285,2.351,286,2.351,287,3.713,288,3.713,289,3.713,290,3.713,291,3.713,292,0.93,293,1.733,294,4.446,295,1.733,296,2.793,297,1.733,298,2.793,299,2.55,300,3.713,301,2.793,302,2.793,303,2.793,304,2.793,305,3.713,306,3.217,307,4.933,308,2.793,309,3.713,310,2.793,311,2.793,312,2.793,313,4.759,314,2.793,315,2.793,316,2.793,317,2.793,318,2.793,319,3.713,320,2.793,321,2.793,322,2.793,323,2.793,324,3.713,325,2.793,326,2.793,327,1.435,328,2.793,329,2.793,330,1.733,331,2.141,332,1.733,333,2.793,334,1.1]],["title/interfaces/Notification-1.html",[254,0.819,278,0.176,292,0.568]],["body/interfaces/Notification-1.html",[0,0.623,3,0.419,4,0.367,7,0.367,10,1.041,11,0.871,13,1.041,14,0.655,15,1.041,20,0.035,22,0.224,23,0.551,24,0.449,25,0.957,26,1.494,32,0.698,33,0.367,36,0.419,37,0.419,57,1.355,64,0.024,65,0.024,70,1.041,71,1.631,73,1.494,75,1.482,77,1.136,84,1.24,89,1.4,95,0.474,100,1.24,102,1.253,106,1.95,107,1.041,109,1.626,110,1.24,111,0.952,123,0.884,125,0.722,163,2.389,209,1.167,218,1.253,222,1.145,229,1.553,231,1.253,242,2.211,254,1.732,272,2.333,278,0.224,279,1.487,280,2.115,281,2.115,282,2.115,283,2.115,327,1.482,331,2.211,334,1.136,339,1.24,355,1.355,679,3.286,793,2.211,838,1.79,894,1.626,908,1.79,916,2.499,923,2.63,939,2.499,947,2.499,948,2.908,965,2.499,1063,2.499,1064,2.884,1065,2.884,1066,2.884,1067,2.884,1068,2.884,1071,2.884,1073,2.884,1074,2.884,1076,2.884,1080,2.884,1081,3.793,1083,2.884,1088,2.884,1092,2.884,1098,4.503,1099,4.802,1100,2.884,1101,2.884,1102,2.884,1103,2.884,1104,4.239,1105,2.884,1106,2.884,1107,2.884,1108,4.503,1109,4.503,1110,3.793,1111,2.884,1112,2.884,1113,2.884,1114,2.884,1115,2.884,1116,2.884,1117,3.793,1118,4.503,1119,3.793,1120,3.793,1121,3.793,1122,4.503,1123,2.884,1124,2.884,1125,2.884,1126,2.884,1127,2.884,1128,3.793,1129,4.802,1130,2.884,1131,2.884,1132,2.884,1133,2.884]],["title/interfaces/Notification-2.html",[254,0.819,278,0.176,385,1.166]],["body/interfaces/Notification-2.html",[3,0.397,4,0.348,7,0.348,12,1.174,20,0.035,22,0.212,23,0.532,24,0.451,25,0.987,27,0.62,32,0.532,33,0.348,36,0.64,37,0.397,44,0.503,52,0.449,64,0.024,65,0.024,80,1.283,87,1.076,89,0.902,95,0.449,100,1.405,102,1.517,123,0.846,125,1.033,132,1.283,147,1.174,149,0.985,191,0.985,219,1.104,221,1.283,222,1.529,229,1.33,236,1.695,254,1.706,271,1.695,272,2.221,274,1.695,278,0.32,279,1.455,280,2.07,281,2.07,282,2.07,283,2.07,292,1.151,327,1.88,330,1.695,332,1.695,334,1.076,338,1.774,341,1.719,350,1.719,351,1.404,352,1.404,353,1.283,354,1.174,356,1.404,357,1.283,358,1.404,482,1.283,520,1.404,524,1.404,526,1.404,527,1.404,528,1.404,536,1.404,566,1.404,619,1.404,620,1.404,636,3.045,700,1.695,833,1.695,834,2.094,835,3.026,836,1.695,837,1.876,838,1.695,839,2.094,840,2.094,841,2.094,842,2.094,843,2.094,844,2.094,845,2.094,846,2.094,847,2.094,848,2.094,849,2.094,850,2.094,851,2.804,852,2.094,853,2.094,854,2.094,855,2.094,856,2.094,857,2.094,858,2.094,859,2.094,860,2.094,861,2.094,862,3.162,863,3.162,864,2.094,865,3.162,866,2.094,867,2.094,868,2.094,869,2.804,870,2.804,871,2.094,872,2.804,873,2.094,874,2.804,875,2.094,876,2.804,877,2.094,878,2.094,879,2.094,880,2.094,881,2.094,882,2.094,883,2.094,884,2.094,885,2.094,886,2.094,887,2.094,888,2.094,889,2.094,890,2.094,891,2.094,892,2.094,893,2.094,894,2.062,895,2.094,896,2.094,897,3.162,898,2.804,899,2.094,900,2.094,901,2.094,902,2.094,903,2.094,904,2.094,905,1.876,906,2.094,907,2.094,908,1.695]],["title/injectables/NotificationService.html",[219,0.811,923,1.668]],["body/injectables/NotificationService.html",[3,0.553,4,0.484,7,0.484,12,1.636,20,0.035,22,0.295,23,0.656,24,0.356,26,1.777,27,1.024,30,1.894,32,0.656,33,0.484,36,0.553,37,0.553,44,0.7,64,0.029,65,0.029,83,1.94,91,1.636,92,1.372,94,1.498,95,0.625,100,1.324,125,1.13,219,1.361,221,1.787,222,1.451,232,2.613,835,2.613,836,2.36,923,2.799,948,2.916,1239,3.804,1240,6.192,1241,5.426,1242,5.426,1243,4.576,1244,5.426,1245,4.576,1246,5.426,1247,4.576,1248,4.576]],["title/interfaces/Product.html",[102,0.888,278,0.209]],["body/interfaces/Product.html",[3,0.378,4,0.331,7,0.331,12,1.117,20,0.035,22,0.202,23,0.514,24,0.481,25,0.997,27,0.98,32,0.514,33,0.331,36,0.627,37,0.378,44,0.795,52,0.709,64,0.023,65,0.023,80,1.22,87,1.023,89,0.858,95,0.427,100,1.411,102,1.539,123,0.832,125,1.007,132,2.028,147,1.856,149,1.557,191,0.937,219,1.067,221,1.22,222,1.516,229,1.303,236,1.612,254,1.629,271,1.612,272,1.889,274,1.612,278,0.312,279,0.858,280,1.22,281,1.22,282,1.22,283,1.22,292,1.131,327,1.818,330,1.612,332,1.612,334,1.023,338,1.729,341,1.661,350,2.122,351,2.219,352,2.219,353,2.028,354,1.856,356,2.219,357,2.028,358,2.219,482,1.22,520,1.335,524,1.335,526,1.335,527,1.335,528,1.335,536,1.335,566,1.335,619,1.335,620,1.335,636,2.679,700,1.612,833,1.612,834,1.991,835,2.965,836,1.612,837,1.784,838,1.612,839,1.991,840,1.991,841,1.991,842,1.991,843,1.991,844,1.991,845,1.991,846,1.991,847,1.991,848,1.991,849,1.991,850,1.991,851,2.711,852,1.991,853,1.991,854,1.991,855,1.991,856,1.991,857,1.991,858,1.991,859,1.991,860,1.991,861,1.991,862,3.083,863,3.083,864,1.991,865,3.083,866,1.991,867,1.991,868,1.991,869,2.711,870,2.711,871,1.991,872,2.711,873,1.991,874,2.711,875,1.991,876,2.711,877,1.991,878,1.991,879,1.991,880,1.991,881,1.991,882,1.991,883,1.991,884,1.991,885,1.991,886,1.991,887,1.991,888,1.991,889,1.991,890,1.991,891,1.991,892,1.991,893,1.991,894,1.994,895,1.991,896,1.991,897,3.083,898,2.711,899,1.991,900,1.991,901,1.991,902,1.991,903,1.991,904,1.991,905,1.784,906,1.991,907,1.991,908,1.612]],["title/injectables/ProductService.html",[89,0.888,219,0.811]],["body/injectables/ProductService.html",[3,0.31,4,0.272,7,0.272,12,0.917,20,0.035,22,0.239,23,0.448,24,0.471,25,0.967,26,1.853,27,1.085,30,2.064,32,0.448,33,0.272,36,0.575,37,0.31,44,0.866,52,0.35,64,0.02,65,0.02,80,1.86,83,1.325,87,1.424,89,1.017,91,1.986,92,1.666,94,2.004,95,0.822,100,1.401,102,1.597,123,0.773,125,1.096,132,1.002,147,0.917,149,0.77,191,0.77,219,0.93,221,1.002,222,1.595,229,1.195,232,1.465,236,2.456,247,3.08,254,1.764,271,1.911,272,1.972,274,1.911,278,0.28,279,0.704,280,1.002,281,1.002,282,1.002,283,1.002,292,1.13,327,2.158,330,1.324,332,1.324,338,1.939,341,2.055,350,1.698,351,1.096,352,1.096,353,1.002,354,0.917,356,1.096,357,1.002,358,1.096,482,1.002,520,1.096,524,1.096,526,1.096,527,1.096,528,1.096,536,1.096,566,1.096,619,1.096,620,1.096,636,2.715,700,1.324,833,1.324,834,1.635,835,3.098,836,1.324,837,1.465,838,1.324,839,1.635,840,1.635,841,2.771,842,2.361,843,2.361,844,2.771,845,2.361,846,2.771,847,2.361,848,2.361,849,2.771,850,2.361,851,2.771,852,2.771,853,2.361,854,2.361,855,3.035,856,1.635,857,2.361,858,1.635,859,1.635,860,1.635,861,2.361,862,2.771,863,2.771,864,1.635,865,2.771,866,2.361,867,1.635,868,2.361,869,3.035,870,2.361,871,1.635,872,2.361,873,3.035,874,2.361,875,3.035,876,2.361,877,3.035,878,1.635,879,3.035,880,1.635,881,3.035,882,1.635,883,1.635,884,3.035,885,1.635,886,1.635,887,2.361,888,1.635,889,1.635,890,3.035,891,1.635,892,1.635,893,1.635,894,1.736,895,2.361,896,1.635,897,2.771,898,2.361,899,1.635,900,1.635,901,3.035,902,1.635,903,1.635,904,1.635,905,1.465,906,1.635,907,2.361,908,1.324,1249,3.705,1250,3.705,1251,3.705,1252,3.705,1253,3.705,1254,3.705,1255,3.705,1256,3.705,1257,2.566,1258,2.566,1259,2.566,1260,2.566,1261,2.566,1262,2.566,1263,2.566,1264,2.566,1265,2.566,1266,2.566,1267,2.566,1268,2.566,1269,2.566,1270,2.566,1271,2.566,1272,2.566,1273,2.566,1274,2.566,1275,2.566,1276,2.566,1277,2.566,1278,2.566,1279,2.566,1280,2.566,1281,2.566,1282,2.566]],["title/interfaces/User.html",[60,0.74,278,0.209]],["body/interfaces/User.html",[0,0.323,3,0.174,4,0.152,7,0.152,10,0.431,11,0.361,13,0.431,14,0.271,15,0.431,20,0.036,22,0.283,23,0.286,24,0.38,25,0.916,27,0.728,32,0.501,33,0.152,36,0.174,37,0.174,44,0.783,52,0.776,53,0.561,60,1.28,64,0.013,65,0.013,70,0.431,71,0.845,72,0.673,73,0.774,74,1.01,75,0.614,76,0.821,77,0.471,78,0.821,79,0.821,80,1.62,81,0.821,82,0.821,84,0.514,89,0.827,95,0.527,96,0.821,98,0.741,99,0.821,100,1.192,102,1.619,106,2.409,107,0.431,108,0.561,109,0.673,110,0.845,111,0.395,112,0.821,113,0.821,114,2.203,115,1.35,116,0.821,118,0.821,119,0.821,120,0.821,121,1.72,123,0.945,124,0.821,125,1.065,126,0.821,127,0.821,129,1.22,132,1.713,137,1.993,139,0.673,140,2.055,147,1.379,149,1.157,163,0.673,191,0.903,209,0.689,218,0.649,222,0.361,229,1.327,231,0.649,265,2.028,267,2.147,278,0.152,279,1.204,285,1.636,286,0.673,292,1.143,293,2.262,295,2.262,297,2.262,299,1.993,334,0.471,337,2.055,338,1.379,339,0.514,340,0.916,341,0.923,342,0.916,343,0.916,344,0.916,345,2.224,346,0.916,347,2.794,348,0.916,349,0.916,350,1.789,351,1.957,352,1.648,353,1.507,354,1.379,355,2.144,356,1.648,357,1.507,358,1.648,359,0.916,360,0.916,361,0.916,362,0.916,363,1.507,364,1.507,365,0.916,366,0.916,367,0.916,368,0.916,369,0.916,370,0.916,371,0.916,372,0.916,373,0.916,374,0.916,375,0.916,376,0.916,377,1.92,378,0.916,379,0.916,380,2.224,381,0.916,382,0.916,383,0.916,384,0.916,385,1.01,386,1.507,387,0.916,388,1.92,389,1.507,390,1.92,391,1.92,392,2.458,393,0.916,394,1.507,395,1.92,396,1.507,397,1.92,398,1.92,399,3.024,400,0.916,401,0.916,402,0.916,403,1.507,404,0.916,405,0.916,406,0.916,407,0.916,408,0.821,409,0.916,410,1.507,411,0.916,412,0.916,413,0.916,414,1.507,415,1.507,416,0.916,417,0.916,418,0.916,419,1.92,420,1.507,421,2.224,422,1.507,423,0.916,424,0.916,425,0.916,426,0.916,427,0.916,428,0.916,429,0.916,430,0.916,431,1.92,432,2.224,433,1.507,434,0.916,435,0.916,436,0.916,437,0.916,438,1.507,439,0.916,440,0.916,441,0.916,442,0.916,443,0.916,444,0.916,445,0.916,446,0.916,447,0.916,448,0.916,449,0.916,450,1.035,451,1.035,452,1.035,453,1.035,454,1.035,455,0.916,456,0.916,457,0.916,458,1.507,459,1.636,460,0.916,461,0.916,462,1.507,463,0.916,464,0.916,465,0.916,466,0.916,467,1.92,468,1.507,469,2.919,470,1.92,471,2.224,472,1.507,473,2.224,474,1.507,475,1.507,476,1.35,477,1.92,478,0.916,479,2.147,480,0.916,481,0.916,482,0.561,483,2.224,484,2.644,485,1.92,486,1.8,487,2.504,488,0.821,489,2.224,490,0.916,491,1.507,492,0.916,493,1.92,494,1.507,495,0.916,496,0.916,497,0.916,499,0.916,500,0.916,501,1.92,502,1.92,503,2.644,504,0.916,505,3.024,506,0.916,507,1.92,508,1.92,509,1.8,510,1.8,511,1.72,512,0.916,513,2.644,514,1.507,515,0.916,516,0.916,517,0.916,518,0.916,519,1.507,520,1.491,521,2.458,522,1.507,523,1.92,524,1.491,525,1.35,526,1.287,527,1.287,528,1.287,529,0.916,530,1.507,531,0.916,532,0.916,533,0.916,534,0.916,535,0.916,536,1.874,537,1.92,538,1.92,539,0.916,540,0.916,541,1.507,542,0.916,543,1.507,544,0.916,545,0.916,546,1.92,547,0.916,548,1.92,549,0.916,552,0.916,555,0.916,556,1.507,557,0.916,558,0.916,559,0.916,560,0.916,561,0.916,562,0.916,563,0.916,565,0.821,566,0.614,567,0.916,568,0.916,569,0.916,571,0.916,572,0.916,573,1.507,574,0.916,575,1.507,576,0.916,577,0.916,578,0.916,579,0.916,580,1.92,581,1.507,582,1.507,583,0.916,584,0.916,585,1.507,586,0.916,587,0.916,588,0.916,589,0.916,590,0.916,591,0.916,592,0.916,593,0.916,594,1.92,595,0.916,596,0.916,597,0.916,598,0.916,599,0.916,600,0.916,601,2.224,602,2.224,603,0.916,604,0.916,605,0.916,606,1.507,607,0.916,608,1.507,609,0.916,610,0.916,611,1.92,612,0.916,613,0.916,614,0.916,615,0.916,616,1.35,617,1.507,618,1.507,619,0.614,620,0.614,621,0.916,622,1.507,623,1.507,624,0.916,625,0.916,626,1.507,627,0.916,628,1.507,629,0.916,630,0.916,631,0.916,684,2.203,686,1.035,687,1.195,688,1.195,689,1.195,690,1.195,691,1.195,692,1.195,693,1.195,694,1.195,695,1.195,696,1.195,697,1.966,698,2.504,699,3.808,700,1.22,701,1.195,702,1.966,703,2.902,704,1.703,705,1.966,706,1.966,707,1.703,708,1.966,709,1.966,710,3.207,711,1.703,712,2.504,713,2.514,714,1.966,715,1.966,716,1.966,717,1.195,718,1.195,719,1.966,720,2.504,721,1.195,722,1.195,723,1.195,724,1.195,725,1.195,726,1.195,727,1.195,728,1.195,729,1.195,730,1.195,731,1.195,732,1.195,733,1.195,734,1.195,735,1.195,736,1.195,737,0.916,738,1.195,739,1.195,740,1.195,741,1.195,742,1.195,743,1.195,744,1.195,745,1.195,746,1.195,747,2.902,748,1.195,749,1.195,750,1.195,751,1.195,752,1.966,753,1.195,754,1.195,755,1.195,756,1.966,757,1.966,758,1.966,759,1.195,760,1.195,761,1.195,762,1.195,763,1.966,764,1.195,765,1.195,766,1.195,767,1.195,768,1.195,769,1.195,770,1.195,771,1.195,772,1.195,773,2.504,774,1.966,775,1.195,776,1.195,777,1.195,778,1.195,779,1.195,780,1.195,781,1.195]],["title/interfaces/User-1.html",[60,0.625,278,0.176,292,0.568]],["body/interfaces/User-1.html",[0,0.723,3,0.453,4,0.397,7,0.56,10,1.124,11,0.941,13,1.124,14,0.708,15,1.124,20,0.035,22,0.242,23,0.58,24,0.477,25,0.993,32,0.674,33,0.397,36,0.453,37,0.453,59,1.464,60,1.373,61,2.464,64,0.026,65,0.026,70,1.124,71,1.715,73,1.571,74,2.05,77,1.227,84,1.34,92,1.769,95,0.512,107,1.124,108,1.464,111,1.029,123,0.81,125,0.781,209,1.211,218,1.029,225,3.811,226,2.7,231,1.029,265,2.464,267,2.702,278,0.242,279,1.583,293,2.974,295,2.974,297,2.974,334,1.227,337,2.248,339,1.34,459,1.757,637,2.7,1283,2.7,1284,2.7,1285,2.7,1286,4.638,1287,4.638,1288,4.638,1289,3.116,1290,3.116,1291,3.116,1292,3.116,1293,3.116,1294,3.116,1295,3.116,1296,4.399,1297,3.116,1298,3.116,1299,3.116,1300,3.116,1301,3.989,1302,3.116,1303,3.116,1304,3.116,1305,3.116,1306,3.116,1307,3.116,1308,3.116,1309,3.116,1310,3.116,1311,3.116,1312,3.116,1313,3.116]],["title/components/UserProfileComponent.html",[0,0.442,59,1.263]],["body/components/UserProfileComponent.html",[0,0.765,1,1.331,2,1.989,3,0.376,4,0.33,5,1.606,6,1.606,7,0.511,9,1.606,10,1.811,11,1.515,13,1.273,14,0.801,15,1.273,17,1.331,18,1.606,20,0.035,22,0.201,23,0.513,24,0.435,25,0.931,26,1.581,27,0.912,30,1.936,32,0.627,33,0.33,36,0.376,37,0.376,38,1.606,39,2.189,40,2.189,41,1.606,42,2.675,43,1.606,44,0.831,45,1.606,46,1.331,47,1.459,48,2.675,49,1.331,50,1.331,51,1.331,52,0.425,53,1.216,54,1.331,55,1.606,56,1.606,57,1.216,58,1.606,59,2.025,60,1.402,61,2.731,62,1.606,63,1.606,64,0.023,65,0.023,70,1.273,71,1.726,73,1.581,74,2.063,77,1.39,83,1.517,84,1.854,87,1.02,91,1.726,92,1.448,94,1.777,95,0.765,98,1.606,107,0.934,108,1.216,111,0.855,123,0.739,125,0.648,208,1.778,209,1.282,218,1.165,225,3.478,226,2.243,231,1.165,265,2.063,267,2.263,278,0.201,279,1.325,293,2.491,295,2.491,297,2.491,337,2.43,339,1.113,459,1.459,637,3.057,683,3.529,737,2.705,790,2.589,943,3.057,1283,4.308,1284,4.308,1285,2.243,1286,2.589,1287,2.589,1288,2.589,1289,3.529,1290,3.529,1291,4.014,1292,4.014,1293,2.589,1294,4.311,1295,2.589,1296,4.014,1297,2.589,1298,2.589,1299,2.589,1300,4.311,1301,3.529,1302,3.529,1303,2.589,1304,2.589,1305,2.589,1306,3.529,1307,2.589,1308,2.589,1309,2.589,1310,2.589,1311,2.589,1312,2.589,1313,2.589,1314,4.245,1315,4.245,1316,4.245,1317,3.114,1318,3.114,1319,3.114,1320,3.114,1321,3.114,1322,3.114,1323,3.114,1324,4.245,1325,4.245,1326,4.245,1327,4.245,1328,4.245,1329,4.245,1330,4.245,1331,4.245,1332,4.245]],["title/injectables/UserService.html",[219,0.811,1333,2.329]],["body/injectables/UserService.html",[3,0.494,4,0.432,7,0.432,12,1.461,14,0.771,20,0.035,22,0.264,23,0.612,24,0.447,25,0.976,26,1.338,27,0.771,30,1.974,32,0.494,33,0.432,36,0.494,37,0.494,44,0.775,60,1.159,64,0.027,65,0.027,83,1.811,91,1.811,92,1.519,94,1.937,95,0.752,123,0.625,218,1.39,219,1.271,221,1.596,222,1.513,229,1.381,231,1.122,232,2.333,265,2.66,285,2.58,286,2.374,299,2.333,306,2.943,704,2.943,711,2.943,713,2.943,1333,3.648,1334,3.397,1335,5.066,1336,5.066,1337,5.755,1338,5.755,1339,5.755,1340,5.066,1341,4.086,1342,5.917,1343,5.066,1344,4.086,1345,4.086,1346,4.086,1347,4.086,1348,4.086,1349,4.086,1350,4.086,1351,4.086,1352,4.086,1353,4.086,1354,4.086,1355,4.086]],["title/coverage.html",[1356,3.62]],["body/coverage.html",[0,0.845,1,1.679,7,0.416,8,3.267,11,0.986,17,1.679,20,0.035,24,0.305,46,1.679,49,1.679,51,1.679,52,0.739,53,1.535,54,1.679,57,1.535,59,1.535,60,1.131,61,2.425,64,0.027,65,0.027,67,3.267,68,3.267,69,3.727,89,1.079,102,1.079,110,1.405,125,0.818,169,2.83,203,2.83,204,2.83,206,3.267,209,0.899,219,1.424,233,3.56,254,1.622,278,0.402,335,4.11,336,4.11,338,1.405,355,2.543,632,4.11,633,4.11,686,3.895,782,3.267,833,2.928,909,3.267,923,2.027,1063,3.56,1239,3.267,1283,3.56,1284,3.56,1285,3.56,1333,2.83,1334,3.267,1356,3.267,1357,3.929,1358,3.929,1359,3.929,1360,4.11,1361,4.943,1362,5.971,1363,2.83,1364,3.929,1365,4.11,1366,5.676,1367,3.267,1368,3.267,1369,3.267,1370,3.267,1371,3.929,1372,5.676,1373,3.929,1374,4.943,1375,5.849,1376,3.929,1377,3.929,1378,3.929,1379,4.943,1380,3.929,1381,3.929,1382,5.409,1383,3.267,1384,3.929]],["title/dependencies.html",[1385,1.966,1386,3.22]],["body/dependencies.html",[20,0.035,33,0.5,34,2.435,64,0.03,65,0.03,107,1.416,108,1.843,110,1.975,836,2.435,1386,3.924,1387,4.721,1388,6.371,1389,4.721,1390,5.859,1391,5.526,1392,4.721,1393,3.924,1394,4.721,1395,3.924,1396,4.721,1397,4.721,1398,4.721,1399,4.721,1400,4.721,1401,4.721,1402,4.721,1403,4.721,1404,4.721,1405,4.721]],["title/miscellaneous/functions.html",[1406,1.408,1407,3.22]],["body/miscellaneous/functions.html",[11,1.499,20,0.033,22,0.32,64,0.031,65,0.031,94,1.861,95,0.677,1360,4.968,1363,4.304,1406,2.556,1407,4.119,1408,4.955]],["title/index.html",[22,0.176,1409,2.73,1410,2.73]],["body/index.html",[0,0.78,4,0.47,20,0.029,44,0.68,64,0.029,65,0.029,70,1.332,125,0.925,350,1.734,357,2.081,1022,3.691,1057,5.112,1060,3.198,1189,3.691,1363,4.362,1385,3.198,1393,4.43,1395,3.691,1411,4.44,1412,5.329,1413,4.44,1414,5.71,1415,5.71,1416,3.691,1417,4.44,1418,6.218,1419,4.44,1420,4.44,1421,4.44,1422,4.44,1423,4.44,1424,4.44,1425,4.44,1426,4.44,1427,4.44,1428,4.44,1429,5.71,1430,5.71,1431,4.44,1432,5.922,1433,4.44,1434,4.44,1435,4.44,1436,4.44,1437,5.329,1438,5.922,1439,4.44,1440,5.329,1441,5.329,1442,4.44,1443,4.44,1444,4.44,1445,4.44,1446,5.329,1447,4.44,1448,4.44,1449,4.44,1450,4.44,1451,4.44,1452,5.71,1453,4.44,1454,4.44,1455,4.44,1456,3.198,1457,4.44]],["title/modules.html",[1458,3.62]],["body/modules.html",[20,0.031,64,0.031,65,0.031,1458,4.219]],["title/overview.html",[1456,3.136]],["body/overview.html",[2,2.351,20,0.031,64,0.031,65,0.031,203,3.614,232,2.865,292,1.045,334,1.643,1456,3.614,1459,5.018,1460,5.018,1461,5.018]],["title/properties.html",[23,0.468,1385,1.966]],["body/properties.html",[20,0.032,23,0.611,64,0.031,65,0.031,1416,4.201,1462,5.053]],["title/miscellaneous/typealiases.html",[1406,1.408,1463,3.873]],["body/miscellaneous/typealiases.html",[20,0.031,22,0.324,24,0.39,64,0.031,65,0.031,636,2.955,833,2.592,1406,2.592,1464,5.025,1465,5.025]],["title/miscellaneous/variables.html",[1406,1.408,1466,3.22]],["body/miscellaneous/variables.html",[14,0.888,20,0.035,22,0.303,24,0.428,26,1.976,27,1.139,64,0.03,65,0.03,110,1.971,1365,3.909,1367,4.863,1368,4.863,1369,3.909,1370,4.583,1383,3.909,1406,2.425,1466,3.909,1467,4.702,1468,4.702,1469,5.513,1470,5.513,1471,5.513,1472,4.702,1473,4.702,1474,4.702,1475,4.702,1476,4.702,1477,4.702,1478,4.702]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":355,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1462,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":1204,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.1",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["0.14.3",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1020,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.5rem",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["0.9rem",{"_index":1051,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0/1",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["0/66",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["0/68",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["0/84",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":994,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1",{"_index":292,"title":{"interfaces/Bodega-1.html":{},"interfaces/Notification-1.html":{},"interfaces/User-1.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"overview.html":{}}}],["1.11.3",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":1044,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.2rem",{"_index":990,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.5rem",{"_index":997,"title":{},"body":{"components/NavbarComponent.html":{}}}],["10",{"_index":1461,"title":{},"body":{"overview.html":{}}}],["100",{"_index":202,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["1000",{"_index":1018,"title":{},"body":{"components/NavbarComponent.html":{}}}],["100vh",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["10px",{"_index":175,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["15px",{"_index":1176,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["18.0.0",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":1395,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1em",{"_index":1177,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["1px",{"_index":179,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["1rem",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["2",{"_index":385,"title":{"interfaces/Bodega-2.html":{},"interfaces/Notification-2.html":{}},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["2.3.0",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":1059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["20px",{"_index":172,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["240px",{"_index":195,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["250px",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["27ae60",{"_index":1237,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["280px",{"_index":1029,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2px",{"_index":986,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["2rem",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["3",{"_index":1208,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["343a40",{"_index":1195,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["354a5f",{"_index":1030,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4",{"_index":1460,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":1002,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4a4a4a",{"_index":1052,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4px",{"_index":987,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["5.3.3",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["500",{"_index":548,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["50px",{"_index":1004,"title":{},"body":{"components/NavbarComponent.html":{}}}],["576px",{"_index":1211,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["5px",{"_index":1055,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["60px",{"_index":1015,"title":{},"body":{"components/NavbarComponent.html":{}}}],["7.8.0",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":197,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["767px",{"_index":1217,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["768px",{"_index":1215,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["80px",{"_index":1175,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["850px",{"_index":1180,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["8px",{"_index":1179,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["9",{"_index":1459,"title":{},"body":{"overview.html":{}}}],["90",{"_index":201,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["90px",{"_index":1061,"title":{},"body":{"components/NavbarComponent.html":{}}}],["absolute",{"_index":959,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["acc.concat(bodega.products",{"_index":446,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["accepted",{"_index":1118,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["acceptmodification",{"_index":1067,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["acciones",{"_index":1136,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["aceptado",{"_index":1131,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["aceptar",{"_index":1167,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["action",{"_index":1011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["activatedroutesnapshot",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["actualizar",{"_index":906,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["add",{"_index":1189,"title":{},"body":{"components/NotificacionesComponent.html":{},"index.html":{}}}],["addbodega(form",{"_index":492,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["addbodegamodal",{"_index":494,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["addbodegamodal.show",{"_index":559,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["addbodegamodal?.hide",{"_index":496,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["addmovimiento",{"_index":1249,"title":{},"body":{"injectables/ProductService.html":{}}}],["addmovimiento(movimiento",{"_index":887,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["addnotification",{"_index":1250,"title":{},"body":{"injectables/ProductService.html":{}}}],["addnotification(notification",{"_index":895,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["addproduct",{"_index":1251,"title":{},"body":{"injectables/ProductService.html":{}}}],["addproduct(product",{"_index":861,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["address",{"_index":1286,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["adicionales",{"_index":1221,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["admin",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["admin12345",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["admin@example.com",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["administrador",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["adminuser",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["agregar",{"_index":480,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ajuste",{"_index":687,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ajustes",{"_index":1212,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["al",{"_index":952,"title":{},"body":{"components/NavbarComponent.html":{}}}],["alert('el",{"_index":483,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["alert('por",{"_index":501,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["alert('seleccione",{"_index":603,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["alert(`la",{"_index":778,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["aliases",{"_index":1464,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":164,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["allowedroles",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["allowedroles.includes(user.role",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["allproducts",{"_index":340,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["angular",{"_index":1414,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":107,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":108,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["apellidos",{"_index":1327,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1423,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aqu",{"_index":453,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["area",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["areadashboardcomponent",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["arial",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["array",{"_index":834,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["artifacts",{"_index":1433,"title":{},"body":{"index.html":{}}}],["assets/img/fondos/profile",{"_index":1298,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["attr(data",{"_index":1219,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["auditor",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"components/UserProfileComponent.html":{}}}],["auditordashboardcomponent",{"_index":49,"title":{"components/AuditorDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["auth.service",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auth/auth.service",{"_index":339,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["authenticateuser",{"_index":1335,"title":{},"body":{"injectables/UserService.html":{}}}],["authenticateuser(username",{"_index":1340,"title":{},"body":{"injectables/UserService.html":{}}}],["authguard",{"_index":204,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":209,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["authservice.getcurrentuser()?.firstname",{"_index":968,"title":{},"body":{"components/NavbarComponent.html":{}}}],["authservice.getcurrentuser()?.lastname",{"_index":969,"title":{},"body":{"components/NavbarComponent.html":{}}}],["authservice.getcurrentuser()?.role",{"_index":970,"title":{},"body":{"components/NavbarComponent.html":{}}}],["auto",{"_index":1005,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["automatically",{"_index":1424,"title":{},"body":{"index.html":{}}}],["añadir",{"_index":635,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["b.name",{"_index":464,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["background",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["badge",{"_index":961,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bar",{"_index":1187,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["barra",{"_index":1183,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["behaviorsubject",{"_index":835,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["behaviorsubject(0",{"_index":1244,"title":{},"body":{"injectables/NotificationService.html":{}}}],["behaviorsubject(this.historial",{"_index":850,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["behaviorsubject(this.loadproductsfromlocalstorage",{"_index":842,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["behaviorsubject(this.notifications",{"_index":853,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["bell",{"_index":996,"title":{},"body":{"components/NavbarComponent.html":{}}}],["between",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bg",{"_index":964,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bi",{"_index":995,"title":{},"body":{"components/NavbarComponent.html":{}}}],["birthday",{"_index":1287,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["block",{"_index":1034,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bodega",{"_index":52,"title":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["bodega.products",{"_index":448,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bodegadashboardcomponent",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-1.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["bodegadestino",{"_index":620,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["bodegaorigen",{"_index":619,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["bodegas",{"_index":345,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["body",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bold",{"_index":989,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["boolean",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":110,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.modal(document.getelementbyid('addbodegamodal",{"_index":558,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('confirmdeletemodal",{"_index":423,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('confirmdeleteusermodal",{"_index":764,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('detallehistorialmodal",{"_index":581,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('detallemovimientomodal",{"_index":586,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('editproductmodal",{"_index":434,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('editusermodal",{"_index":753,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('productinfomodal",{"_index":126,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('userinfomodal",{"_index":749,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal(document.getelementbyid('usermodal",{"_index":733,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('addbodegamodal",{"_index":495,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('confirmdeletemodal",{"_index":427,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('confirmdeleteusermodal",{"_index":768,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('detallehistorialmodal",{"_index":588,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('detallemovimientomodal",{"_index":591,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('editproductmodal",{"_index":455,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('editusermodal",{"_index":760,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(document.getelementbyid('usermodal",{"_index":717,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(ingresobodegamodalelement",{"_index":544,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(salidabodegamodalelement",{"_index":576,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap.modal.getinstance(trasladobodegamodalelement",{"_index":629,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["bootstrap/dist/css/bootstrap.min.css",{"_index":1171,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":173,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["bordered",{"_index":178,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["bordes",{"_index":1042,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":984,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["box",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["brand",{"_index":353,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["browser",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":1228,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["build",{"_index":1432,"title":{},"body":{"index.html":{}}}],["button",{"_index":1190,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["búsqueda",{"_index":1184,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["c0392b",{"_index":1238,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["calc(100",{"_index":199,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["cambiar",{"_index":1324,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["cambios",{"_index":943,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["cambiossolicitados",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-1.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["cambiossolicitados.brand",{"_index":655,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.color",{"_index":661,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.currency",{"_index":670,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.description",{"_index":649,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.family",{"_index":664,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.location",{"_index":676,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.material",{"_index":658,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.model",{"_index":652,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.name",{"_index":646,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.unit",{"_index":673,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["cambiossolicitados.value",{"_index":667,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["campos",{"_index":744,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["canactivate",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancelar",{"_index":1332,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["cantidad",{"_index":513,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["cantidadingreso",{"_index":361,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["cantidadsalida",{"_index":362,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["capabilities",{"_index":1450,"title":{},"body":{"index.html":{}}}],["caption",{"_index":1185,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["case",{"_index":1129,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["ccc",{"_index":1178,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["center",{"_index":165,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["change",{"_index":1426,"title":{},"body":{"index.html":{}}}],["check",{"_index":1455,"title":{},"body":{"index.html":{}}}],["checkproductcode",{"_index":413,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["checkscreensize",{"_index":917,"title":{},"body":{"components/NavbarComponent.html":{}}}],["chevron",{"_index":1045,"title":{},"body":{"components/NavbarComponent.html":{}}}],["child",{"_index":1199,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["child(odd",{"_index":1224,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["chipax",{"_index":1027,"title":{},"body":{"components/NavbarComponent.html":{}}}],["choice",{"_index":1445,"title":{},"body":{"index.html":{}}}],["class",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["class=\"position",{"_index":958,"title":{},"body":{"components/NavbarComponent.html":{}}}],["claves",{"_index":736,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["cli",{"_index":1415,"title":{},"body":{"index.html":{}}}],["close",{"_index":1233,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["closemodal",{"_index":1068,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["code",{"_index":350,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"index.html":{}}}],["code.trim().touppercase",{"_index":401,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["coinciden",{"_index":702,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["collapse",{"_index":1191,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["color",{"_index":149,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["column",{"_index":1054,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["command",{"_index":1446,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":73,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["company",{"_index":1003,"title":{},"body":{"components/NavbarComponent.html":{}}}],["complete",{"_index":743,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["component.component.css",{"_index":1290,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["component.component.html",{"_index":1289,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["component.component.ts",{"_index":1285,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["component.component.ts:27",{"_index":1323,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["component.component.ts:35",{"_index":1322,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["component.component.ts:36",{"_index":1316,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["component.component.ts:40",{"_index":1318,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["component.component.ts:44",{"_index":1317,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["component.component.ts:52",{"_index":1321,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["component.component.ts:56",{"_index":1320,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["component.component.ts:64",{"_index":1319,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["component/user",{"_index":1284,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["compra",{"_index":977,"title":{},"body":{"components/NavbarComponent.html":{}}}],["compras",{"_index":975,"title":{},"body":{"components/NavbarComponent.html":{}}}],["con",{"_index":708,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["config",{"_index":1367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmdeletemodal",{"_index":422,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeletemodal.show",{"_index":424,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeletemodal?.hide",{"_index":428,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeleteusermodal",{"_index":763,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeleteusermodal.show",{"_index":765,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["confirmdeleteusermodal?.hide",{"_index":769,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["console.log('usuario",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["const",{"_index":123,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/UserProfileComponent.html":{}}}],["constructor(authservice",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(private",{"_index":111,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["constructor(productservice",{"_index":88,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["constructor(router",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["contador",{"_index":944,"title":{},"body":{"components/NavbarComponent.html":{}}}],["container",{"_index":170,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["contenedor",{"_index":1174,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["content",{"_index":187,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["contraseña",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["contraseñas",{"_index":701,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["correctamente",{"_index":745,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["corregido",{"_index":452,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["correo",{"_index":737,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["count",{"_index":948,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"injectables/NotificationService.html":{}}}],["cover",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverage",{"_index":1356,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creado",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["crear",{"_index":974,"title":{},"body":{"components/NavbarComponent.html":{}}}],["createdefaultadmin",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["createuser",{"_index":1336,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1343,"title":{},"body":{"injectables/UserService.html":{}}}],["credenciales",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["cuenta",{"_index":980,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cuentamodal",{"_index":1205,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["cumpleaños",{"_index":1328,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["currency",{"_index":356,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["currentopendropdown",{"_index":914,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currentproducts",{"_index":862,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["currentproducts.findindex(p",{"_index":871,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["currentproducts.push(product",{"_index":864,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["currentproducts.splice(index",{"_index":867,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["currentproducts[productindex",{"_index":872,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["currentuser",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["currentuser.profilepicture",{"_index":1297,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["currentuser.role",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cursor",{"_index":1012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["custom",{"_index":982,"title":{},"body":{"components/NavbarComponent.html":{}}}],["código",{"_index":129,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["d",{"_index":1206,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["d3550c",{"_index":1231,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["danger",{"_index":965,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["dashboard",{"_index":72,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{}}}],["dashboard'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["dashboard.component.css",{"_index":76,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dashboard.component.html",{"_index":78,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dashboard.component.ts",{"_index":69,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"coverage.html":{}}}],["dashboard.component.ts:15",{"_index":104,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:16",{"_index":103,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:17",{"_index":105,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:18",{"_index":90,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:22",{"_index":93,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:29",{"_index":97,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard.component.ts:42",{"_index":101,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["dashboard/area",{"_index":336,"title":{},"body":{"interfaces/Bodega.html":{},"coverage.html":{}}}],["dashboard/auditor",{"_index":68,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"coverage.html":{}}}],["dashboard/bodega",{"_index":633,"title":{},"body":{"interfaces/Bodega-1.html":{},"coverage.html":{}}}],["dashboardcomponent",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["date().gettime",{"_index":678,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["date().tolocaledatestring('en",{"_index":381,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["day",{"_index":387,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dcdcdc",{"_index":1227,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["de",{"_index":479,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["deben",{"_index":729,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dee2e6",{"_index":181,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["default",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultadmin",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["del",{"_index":139,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["deleteproduct",{"_index":1252,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct(index",{"_index":866,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["deleteuser(user",{"_index":762,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dependencies",{"_index":1386,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descripción",{"_index":130,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["description",{"_index":351,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["después",{"_index":478,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallehistorialmodal",{"_index":580,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallehistorialmodal.show",{"_index":582,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallehistorialmodal?.hide",{"_index":589,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallemovimientomodal",{"_index":585,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallemovimientomodal.show",{"_index":587,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detallemovimientomodal?.hide",{"_index":592,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["detalles",{"_index":528,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["dev",{"_index":1420,"title":{},"body":{"index.html":{}}}],["development",{"_index":1417,"title":{},"body":{"index.html":{}}}],["diferente",{"_index":490,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["digit",{"_index":386,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dirección",{"_index":1329,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["direction",{"_index":1053,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["directive",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1431,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1436,"title":{},"body":{"index.html":{}}}],["display",{"_index":188,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["disponible",{"_index":781,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["dispositivos",{"_index":1213,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["dist",{"_index":1435,"title":{},"body":{"index.html":{}}}],["divisorias",{"_index":1037,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid('editpassword",{"_index":772,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.getelementbyid('ingresobodegamodal",{"_index":542,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.getelementbyid('notificationmodal",{"_index":1110,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["document.getelementbyid('salidabodegamodal",{"_index":574,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.getelementbyid('trasladobodegamodal",{"_index":627,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.queryselector('form.needs",{"_index":470,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["document.queryselector(`form.needs",{"_index":499,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["documento",{"_index":566,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["down",{"_index":1046,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdown",{"_index":998,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdownid",{"_index":934,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dynamic",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1443,"title":{},"body":{"index.html":{}}}],["e5e5e5",{"_index":985,"title":{},"body":{"components/NavbarComponent.html":{}}}],["e9ecef",{"_index":1040,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ease",{"_index":1021,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ecf0f1",{"_index":1223,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["editar",{"_index":1330,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["editmode",{"_index":1291,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["editproductmodal",{"_index":433,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editproductmodal.dispose",{"_index":640,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["editproductmodal.hide",{"_index":639,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["editproductmodal.show",{"_index":435,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editproductmodal?.hide",{"_index":456,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["edituser(user",{"_index":751,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editusermodal",{"_index":752,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editusermodal.show",{"_index":754,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["editusermodal?.hide",{"_index":761,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ee7712",{"_index":1222,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["el",{"_index":684,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["electrónico",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["element",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["ellipsis",{"_index":185,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["email",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["en",{"_index":509,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["encabezado",{"_index":1031,"title":{},"body":{"components/NavbarComponent.html":{}}}],["encuentra",{"_index":508,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["end",{"_index":1057,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["erp",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["erppraxa",{"_index":1411,"title":{},"body":{"index.html":{}}}],["específicos",{"_index":1216,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["estado",{"_index":1135,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["estilos",{"_index":1172,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["event",{"_index":98,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["event.target",{"_index":409,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["event.target.files[0",{"_index":1307,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["event.target.value.tolowercase",{"_index":116,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1440,"title":{},"body":{"index.html":{}}}],["existe",{"_index":485,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["existingitem",{"_index":503,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["existinguser",{"_index":703,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["exitosamente",{"_index":715,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["expectedrole",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["express",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":1408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["f2f2f2",{"_index":1225,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["f5f7fa",{"_index":1024,"title":{},"body":{"components/NavbarComponent.html":{}}}],["facturas",{"_index":979,"title":{},"body":{"components/NavbarComponent.html":{}}}],["false",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["familia",{"_index":151,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["family",{"_index":354,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["favor",{"_index":487,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["fecha",{"_index":527,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["ffffff",{"_index":983,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ffffffec",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["field",{"_index":1085,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filereader",{"_index":1309,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["files",{"_index":1427,"title":{},"body":{"index.html":{}}}],["filteredproducts",{"_index":79,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["filteredusers",{"_index":692,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["first",{"_index":1448,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["fixed",{"_index":1016,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flex",{"_index":189,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["fondo",{"_index":1025,"title":{},"body":{"components/NavbarComponent.html":{}}}],["font",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["footer",{"_index":1236,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["form",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["form.form.markallastouched",{"_index":458,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["form.resetform",{"_index":467,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["form.valid",{"_index":459,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["formelement",{"_index":469,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["formelement.classlist.add('was",{"_index":491,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["formelement.classlist.remove('was",{"_index":472,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["formsmodule",{"_index":74,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["formulario",{"_index":742,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["foto",{"_index":1325,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["fuente",{"_index":1050,"title":{},"body":{"components/NavbarComponent.html":{}}}],["function",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1407,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1451,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1188,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["generales",{"_index":1173,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["generate",{"_index":1429,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1413,"title":{},"body":{"index.html":{}}}],["getauthenticateduser",{"_index":1337,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuser",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["getnextingresonumber",{"_index":873,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["getnextsalidanumber",{"_index":875,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["getnotifications",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["getstatusclass",{"_index":1069,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["getstatusclass(status",{"_index":1080,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["getting",{"_index":1409,"title":{"index.html":{}},"body":{}}],["getuserroles",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["go",{"_index":1454,"title":{},"body":{"index.html":{}}}],["group",{"_index":1010,"title":{},"body":{"components/NavbarComponent.html":{}}}],["guard",{"_index":203,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guardar",{"_index":683,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/UserProfileComponent.html":{}}}],["guards",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h4",{"_index":1008,"title":{},"body":{"components/NavbarComponent.html":{}}}],["h5",{"_index":1209,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["h6",{"_index":1033,"title":{},"body":{"components/NavbarComponent.html":{}}}],["haschanged",{"_index":1070,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["haschanged(field",{"_index":1083,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["header",{"_index":1007,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["height",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["hello",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":1452,"title":{},"body":{"index.html":{}}}],["herramientas",{"_index":133,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["hidden",{"_index":177,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["historial",{"_index":341,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["historialsubject",{"_index":849,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["htmlinputelement",{"_index":410,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["http://localhost:4200",{"_index":1422,"title":{},"body":{"index.html":{}}}],["i.cantidad",{"_index":535,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["i.product.code",{"_index":532,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["i.product.description",{"_index":534,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["i.product.name",{"_index":533,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["icons",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["icons.css",{"_index":1170,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["icons/font/bootstrap",{"_index":1169,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["id",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["identifier",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["img",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["implements",{"_index":70,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["incorrectas",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["incrementnextingresonumber",{"_index":877,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["incrementnextsalidanumber",{"_index":879,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["información",{"_index":138,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["ingenieria",{"_index":971,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ingrese",{"_index":488,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["ingreso",{"_index":525,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["ingresobodegamodal",{"_index":543,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ingresobodegamodal.dispose",{"_index":547,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ingresobodegamodal.hide",{"_index":545,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ingresobodegamodalelement",{"_index":541,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ingresoitems",{"_index":359,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["iniciar",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["inicio",{"_index":973,"title":{},"body":{"components/NavbarComponent.html":{}}}],["injectable",{"_index":219,"title":{"injectables/AuthService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1047,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input",{"_index":408,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["input.value",{"_index":411,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["input.value.touppercase",{"_index":412,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["intente",{"_index":707,"title":{},"body":{"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["interface",{"_index":278,"title":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":334,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"overview.html":{}}}],["inventario",{"_index":128,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["inventory",{"_index":168,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["inválidas",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["inyecta",{"_index":940,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isadmin",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["isarea",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["isauditor",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["isauthenticated",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["isbodega",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{}}}],["isloginpage",{"_index":918,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isondashboard",{"_index":919,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isroleallowed",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isroleallowed(allowedroles",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{}}}],["issidebarcollapsed",{"_index":915,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item",{"_index":992,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item.active",{"_index":1039,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item.cantidad",{"_index":521,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.numerodocumento",{"_index":777,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product",{"_index":613,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product.code",{"_index":505,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product.description",{"_index":623,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product.name",{"_index":622,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.product.stock",{"_index":624,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item.tipodocumento",{"_index":776,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["item:hover",{"_index":1038,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":191,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["json.parse(bodegas",{"_index":439,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["json.parse(localstorage.getitem('authenticateduser",{"_index":1355,"title":{},"body":{"injectables/UserService.html":{}}}],["json.parse(localstorage.getitem('currentuser",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["json.parse(localstorage.getitem('historial",{"_index":848,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["json.parse(localstorage.getitem('notifications",{"_index":851,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["json.parse(localstorage.getitem('products",{"_index":856,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["json.parse(localstorage.getitem('users",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.parse(storednotifications",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["json.stringify(notifications",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["json.stringify(products",{"_index":859,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["json.stringify(this.bodegas",{"_index":442,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["json.stringify(this.historial",{"_index":892,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["json.stringify(this.notifications",{"_index":902,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["json.stringify(this.users",{"_index":713,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.stringify(user",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{},"injectables/UserService.html":{}}}],["json.stringify(users",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["justify",{"_index":190,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["karma",{"_index":1442,"title":{},"body":{"index.html":{}}}],["key",{"_index":840,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["keyof",{"_index":838,"title":{},"body":{"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["la",{"_index":510,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["label",{"_index":1220,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["las",{"_index":700,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["lastname",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["left",{"_index":194,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["legend",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["link",{"_index":993,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list",{"_index":1009,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lista",{"_index":738,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["literal",{"_index":1348,"title":{},"body":{"injectables/UserService.html":{}}}],["loadallproducts",{"_index":443,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["loadbodegas",{"_index":436,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["loadnotifications",{"_index":1071,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["loadproductsfromlocalstorage",{"_index":855,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["loaduserdata",{"_index":1294,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["loadusers",{"_index":416,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["localstorage.getitem('bodegas",{"_index":437,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["localstorage.getitem('currentuser",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["localstorage.getitem('nextingresonumber",{"_index":845,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["localstorage.getitem('nextsalidanumber",{"_index":847,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["localstorage.getitem('notifications",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["localstorage.removeitem('authenticateduser",{"_index":1354,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.removeitem('currentuser",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["localstorage.setitem('authenticateduser",{"_index":1353,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('bodegas",{"_index":441,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["localstorage.setitem('currentuser",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["localstorage.setitem('historial",{"_index":891,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["localstorage.setitem('nextingresonumber",{"_index":882,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["localstorage.setitem('nextsalidanumber",{"_index":885,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["localstorage.setitem('notifications",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["localstorage.setitem('products",{"_index":858,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["localstorage.setitem('users",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["location",{"_index":358,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["login",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["login(email",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["login.component.css",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":54,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["loginerror",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["logout",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{}}}],["logoutuser",{"_index":1338,"title":{},"body":{"injectables/UserService.html":{}}}],["los",{"_index":476,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["líneas",{"_index":1036,"title":{},"body":{"components/NavbarComponent.html":{}}}],["main",{"_index":186,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["mantenerse",{"_index":730,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["marca",{"_index":145,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["margin",{"_index":193,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["matching",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":147,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["max",{"_index":200,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["mb",{"_index":1207,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["media",{"_index":1210,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["menu",{"_index":1056,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-1.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["messages",{"_index":967,"title":{},"body":{"components/NavbarComponent.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["methods",{"_index":83,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":167,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["min",{"_index":1058,"title":{},"body":{"components/NavbarComponent.html":{}}}],["miscellaneous",{"_index":1406,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":1098,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["modal(modalelement",{"_index":1111,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["modal.getinstance(modalelement",{"_index":1126,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["modal.hide",{"_index":1127,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["modal.show",{"_index":1112,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["modalelement",{"_index":1109,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["model",{"_index":352,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["modelo",{"_index":143,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["modificación",{"_index":681,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["modificationrequest",{"_index":677,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["modules",{"_index":1458,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moneda",{"_index":155,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["month",{"_index":384,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["more",{"_index":1453,"title":{},"body":{"index.html":{}}}],["motivosalida",{"_index":365,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["movimiento",{"_index":338,"title":{"interfaces/Movimiento.html":{}},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["método",{"_index":904,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["métodos",{"_index":728,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["móviles",{"_index":1214,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["n.id",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["nav",{"_index":991,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":910,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["navbar.component.css",{"_index":911,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":912,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":17,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1421,"title":{},"body":{"index.html":{}}}],["navigatetohome",{"_index":920,"title":{},"body":{"components/NavbarComponent.html":{}}}],["need",{"_index":1447,"title":{},"body":{"index.html":{}}}],["new",{"_index":125,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["newbodeganame",{"_index":348,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["newproduct",{"_index":349,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["newuser",{"_index":688,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["next",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{}}}],["next.data['role",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{}}}],["nextingresonumber",{"_index":844,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["nextsalidanumber",{"_index":846,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["ng",{"_index":1418,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":337,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["ngoninit",{"_index":84,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["nombre",{"_index":1143,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["nombres",{"_index":1326,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["none",{"_index":1000,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["normalizecode(code",{"_index":400,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["normalizedcode",{"_index":403,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["notificaciones",{"_index":894,"title":{},"body":{"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["notificaciones'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["notificaciones.component.css",{"_index":1064,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["notificaciones.component.html",{"_index":1065,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["notificacionescomponent",{"_index":57,"title":{"components/NotificacionesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["notification",{"_index":254,"title":{"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["notification.solicitadapor",{"_index":1137,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notification.status",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{}}}],["notificationid",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["notificationindex",{"_index":898,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["notificationmodal",{"_index":1232,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notifications",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["notifications.find(n",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["notificationservice",{"_index":923,"title":{"injectables/NotificationService.html":{}},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["notificationssubject",{"_index":852,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["nowrap",{"_index":184,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["nuevo",{"_index":482,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["null",{"_index":106,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{}}}],["number",{"_index":100,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["numeric",{"_index":383,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["numero",{"_index":526,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["numerodocumento",{"_index":364,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onabrirhistorial",{"_index":579,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onaddproduct(form",{"_index":457,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onaddproductotoingreso",{"_index":500,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onaddproductotosalida",{"_index":549,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onaddproductototraslado",{"_index":593,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmaringreso",{"_index":517,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmarsalida",{"_index":562,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmartraslado",{"_index":600,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmdelete",{"_index":425,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onconfirmdeleteuser",{"_index":766,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["ondeleteproduct(index",{"_index":418,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oneditproduct(index",{"_index":430,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oneliminaritem(index",{"_index":515,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oneliminaritemsalida(index",{"_index":560,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oneliminaritemtraslado(index",{"_index":598,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["oninit",{"_index":71,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["onprofilepicturechange",{"_index":1314,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["onprofilepicturechange(event",{"_index":1306,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["onregister(form",{"_index":696,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onrequestmodification",{"_index":642,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["onsaveeditproduct",{"_index":449,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsaveedituser(form",{"_index":755,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsaveuser(form",{"_index":735,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsaveuserprofile",{"_index":1315,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["onsaveuserprofile(form",{"_index":1302,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["onsearchproduct",{"_index":85,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["onsearchproduct(event",{"_index":96,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsearchuser",{"_index":721,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onsubmit",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(form",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{}}}],["onupdateproduct(index",{"_index":429,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onverdetallesmovimiento(movimiento",{"_index":583,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onviewproductinfo",{"_index":86,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["onviewproductinfo(index",{"_index":99,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["onvolverhistorial",{"_index":590,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["openaddbodegamodal",{"_index":557,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["openmodal",{"_index":1072,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["openmodal(notification",{"_index":1088,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["openusermodal",{"_index":732,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["optional",{"_index":92,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["original",{"_index":685,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{}}}],["originalproduct",{"_index":638,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["otro",{"_index":709,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["out",{"_index":1022,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["overflow",{"_index":176,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["overview",{"_index":1456,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":837,"title":{},"body":{"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["p.code",{"_index":520,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["package",{"_index":1385,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":171,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["page",{"_index":1060,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"index.html":{}}}],["pantalla",{"_index":951,"title":{},"body":{"components/NavbarComponent.html":{}}}],["para",{"_index":905,"title":{},"body":{"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["partial",{"_index":1099,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["partialproduct",{"_index":636,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"miscellaneous/typealiases.html":{}}}],["password",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["passwordfield",{"_index":771,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["passwordfield.type",{"_index":773,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["pendiente",{"_index":1130,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["pendientes",{"_index":945,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pending",{"_index":679,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["pending').length",{"_index":1106,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["pendingcount",{"_index":1240,"title":{},"body":{"injectables/NotificationService.html":{}}}],["pendingnotificationscount",{"_index":916,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["perfil",{"_index":1331,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["picture.webp",{"_index":1299,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["pill",{"_index":963,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1444,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1013,"title":{},"body":{"components/NavbarComponent.html":{}}}],["por",{"_index":486,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["position",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["praxa",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["primary",{"_index":1229,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["primary:hover",{"_index":1230,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["principal",{"_index":347,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["private",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["product",{"_index":102,"title":{"interfaces/Product.html":{}},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["product.code",{"_index":134,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["product.code.tolowercase().includes(this.searchproductterm",{"_index":118,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.description",{"_index":135,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["product.description.tolowercase().includes(this.searchproductterm",{"_index":119,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.name",{"_index":530,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.name.tolowercase().includes(this.searchproductterm",{"_index":120,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.stock",{"_index":137,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["product.unit",{"_index":136,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["product[p",{"_index":839,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["productcode",{"_index":1113,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["productcodeexists",{"_index":372,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productexists(code",{"_index":402,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productindestino",{"_index":608,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productindestino.stock",{"_index":610,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productindex",{"_index":870,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["productinfomodal",{"_index":124,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productinfomodal.show",{"_index":127,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productinorigen",{"_index":606,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["productinorigen.stock",{"_index":611,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["producto",{"_index":140,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["productooriginal",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-1.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["productos",{"_index":477,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["products",{"_index":80,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["productservice",{"_index":89,"title":{"injectables/ProductService.html":{}},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["productssubject",{"_index":841,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["producttoadd",{"_index":553,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["producttodelete",{"_index":371,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["profile",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profilepicture",{"_index":1288,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["profilepicturepreview",{"_index":1292,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["project",{"_index":1412,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provideclienthydration",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":913,"title":{},"body":{"components/NavbarComponent.html":{}}}],["quitar",{"_index":1035,"title":{},"body":{"components/NavbarComponent.html":{}}}],["radius",{"_index":174,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["rdenes",{"_index":976,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rea",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["reactiveformsmodule",{"_index":634,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["reader",{"_index":1308,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["reader.onload",{"_index":1310,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["reader.readasdataurl(file",{"_index":1313,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["reader.result",{"_index":1311,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["recargar",{"_index":474,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["recepción",{"_index":978,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rechazado",{"_index":1132,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["rechazar",{"_index":1168,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["redondeados",{"_index":1043,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reference",{"_index":1457,"title":{},"body":{"index.html":{}}}],["registererror",{"_index":690,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["registersuccess",{"_index":691,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["registrado",{"_index":714,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["registronumeroingreso",{"_index":366,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["registronumerosalida",{"_index":367,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["rejected",{"_index":1122,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["rejectmodification",{"_index":1073,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["relative",{"_index":1062,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["reload",{"_index":1425,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["repeatpassword",{"_index":689,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["resetear",{"_index":741,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["resetform(form",{"_index":497,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["results",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retirar",{"_index":779,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["return",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":94,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["right",{"_index":1014,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["roboto",{"_index":1049,"title":{},"body":{"components/NavbarComponent.html":{}}}],["role",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["rounded",{"_index":962,"title":{},"body":{"components/NavbarComponent.html":{}}}],["router",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/Notification.html":{}}}],["routermodule",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["routerstatesnapshot",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":1363,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1437,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":836,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["salida",{"_index":565,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["salidabodegamodal",{"_index":575,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salidabodegamodal.dispose",{"_index":578,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salidabodegamodal.hide",{"_index":577,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salidabodegamodalelement",{"_index":573,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salidaitems",{"_index":360,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["salir",{"_index":981,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sans",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["savebodegas",{"_index":440,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["savenextingresonumber",{"_index":881,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["savenextsalidanumber",{"_index":884,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["savenotifications",{"_index":1074,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["savenotificationstolocalstorage",{"_index":901,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["saveproductstolocalstorage",{"_index":1253,"title":{},"body":{"injectables/ProductService.html":{}}}],["saveproductstolocalstorage(products",{"_index":857,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["scaffolding",{"_index":1428,"title":{},"body":{"index.html":{}}}],["screenwidth",{"_index":956,"title":{},"body":{"components/NavbarComponent.html":{}}}],["se",{"_index":507,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["search",{"_index":1186,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["searchproductterm",{"_index":81,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["searchuserterm",{"_index":693,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["seleccione",{"_index":502,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectbodega(bodega",{"_index":447,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedbodega",{"_index":346,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedbodegadestino",{"_index":375,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedbodegaorigen",{"_index":374,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedmovimiento",{"_index":369,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectednotification",{"_index":1066,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["selectednotification?.cambiossolicitados?.brand",{"_index":1159,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.color",{"_index":1161,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.currency",{"_index":1164,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.description",{"_index":1157,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.family",{"_index":1162,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.location",{"_index":1166,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.material",{"_index":1160,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.model",{"_index":1158,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.name",{"_index":1156,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.unit",{"_index":1165,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.cambiossolicitados?.value",{"_index":1163,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.brand",{"_index":1147,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.code",{"_index":1142,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.color",{"_index":1149,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.currency",{"_index":1152,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.description",{"_index":1145,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.family",{"_index":1150,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.location",{"_index":1154,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.material",{"_index":1148,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.model",{"_index":1146,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.name",{"_index":1144,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.unit",{"_index":1153,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.productooriginal?.value",{"_index":1151,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectednotification?.solicitadapor",{"_index":1140,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["selectedproduct",{"_index":82,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproduct?.brand",{"_index":146,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.code",{"_index":141,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.color",{"_index":150,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.currency",{"_index":156,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.description",{"_index":142,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.family",{"_index":152,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.location",{"_index":159,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.material",{"_index":148,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.model",{"_index":144,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.stock",{"_index":160,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.unit",{"_index":157,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproduct?.value",{"_index":154,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["selectedproductcode",{"_index":550,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["selectedproductindextodelete",{"_index":342,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproductindextoedit",{"_index":343,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproductsalida",{"_index":344,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproducttoedit",{"_index":370,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selectedproducttraslado",{"_index":376,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selecteduser",{"_index":694,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["separados",{"_index":731,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["separate",{"_index":1192,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["serif",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["serve",{"_index":1419,"title":{},"body":{"index.html":{}}}],["server",{"_index":1393,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":1360,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":1368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/notificacion.service",{"_index":939,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["service/product.service",{"_index":109,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{}}}],["servicio",{"_index":941,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sesión",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{}}}],["setpendingcount",{"_index":1241,"title":{},"body":{"injectables/NotificationService.html":{}}}],["setpendingcount(count",{"_index":1242,"title":{},"body":{"injectables/NotificationService.html":{}}}],["settimeout",{"_index":546,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["shadow",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["sidebar",{"_index":1006,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sidebar:hover",{"_index":1028,"title":{},"body":{"components/NavbarComponent.html":{}}}],["similar",{"_index":1026,"title":{},"body":{"components/NavbarComponent.html":{}}}],["size",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["solicitadapor",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-1.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["solicitado",{"_index":1134,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["solicitados",{"_index":1155,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["solicitud",{"_index":680,"title":{},"body":{"interfaces/Bodega-1.html":{},"components/NotificacionesComponent.html":{}}}],["solid",{"_index":180,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["sombreado",{"_index":1041,"title":{},"body":{"components/NavbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spa",{"_index":972,"title":{},"body":{"components/NavbarComponent.html":{}}}],["space",{"_index":183,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{}}}],["spacing",{"_index":1193,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["span",{"_index":1048,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../product.service.ts",{"_index":1465,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/area",{"_index":335,"title":{},"body":{"interfaces/Bodega.html":{},"coverage.html":{}}}],["src/app/auditor",{"_index":67,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:11",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:8",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.service.ts",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:103",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:107",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:116",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:121",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:40",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:60",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:65",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:70",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:74",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:78",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:83",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:88",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:93",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:98",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/bodega",{"_index":632,"title":{},"body":{"interfaces/Bodega-1.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":686,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:15",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:17",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":909,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:100",{"_index":933,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:15",{"_index":938,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:16",{"_index":937,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:17",{"_index":924,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:20",{"_index":936,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":931,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:36",{"_index":925,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:45",{"_index":935,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:55",{"_index":929,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:60",{"_index":928,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:64",{"_index":927,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:73",{"_index":930,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:96",{"_index":926,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts",{"_index":1063,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"coverage.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:113",{"_index":1082,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:26",{"_index":1096,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:27",{"_index":1097,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:28",{"_index":1095,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:29",{"_index":1077,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:33",{"_index":1087,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:38",{"_index":1086,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:43",{"_index":1094,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:49",{"_index":1089,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:58",{"_index":1078,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:70",{"_index":1090,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:80",{"_index":1091,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:84",{"_index":1084,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:89",{"_index":1079,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/notificaciones/notificaciones.component.ts:99",{"_index":1093,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/service/notificacion.service.ts",{"_index":1239,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/service/notificacion.service.ts:10",{"_index":1247,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notificacion.service.ts:12",{"_index":1243,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/notificacion.service.ts:9",{"_index":1245,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/service/product.service.ts",{"_index":833,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/service/product.service.ts:103",{"_index":1262,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:107",{"_index":1264,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:112",{"_index":1265,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:117",{"_index":1267,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:121",{"_index":1268,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:125",{"_index":1257,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:130",{"_index":1271,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:136",{"_index":1258,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:141",{"_index":1263,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:145",{"_index":1273,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:153",{"_index":1269,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:159",{"_index":1272,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:57",{"_index":1282,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:58",{"_index":1281,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:59",{"_index":1277,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:60",{"_index":1278,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:61",{"_index":1275,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:62",{"_index":1276,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:63",{"_index":1279,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:64",{"_index":1280,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:65",{"_index":1256,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:69",{"_index":1266,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:73",{"_index":1270,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:78",{"_index":1259,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:84",{"_index":1260,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:90",{"_index":1274,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:99",{"_index":1261,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/user.service.ts",{"_index":1334,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/user.service.ts:14",{"_index":1341,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:23",{"_index":1346,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:27",{"_index":1345,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:31",{"_index":1347,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:7",{"_index":1349,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:9",{"_index":1344,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user",{"_index":1283,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["start",{"_index":192,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["started",{"_index":1410,"title":{"index.html":{}},"body":{}}],["state",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega-1.html":{},"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["stock",{"_index":132,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["stored",{"_index":1434,"title":{},"body":{"index.html":{}}}],["storednotifications",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["string",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["striped",{"_index":1201,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["styles",{"_index":66,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["styleurl",{"_index":637,"title":{},"body":{"interfaces/Bodega-1.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":75,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{}}}],["su",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["success",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["supera",{"_index":780,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["suscríbete",{"_index":942,"title":{},"body":{"components/NavbarComponent.html":{}}}],["switch",{"_index":1128,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["tabla",{"_index":511,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NotificacionesComponent.html":{},"interfaces/User.html":{}}}],["table",{"_index":169,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":950,"title":{},"body":{"components/NavbarComponent.html":{}}}],["targetbodega",{"_index":462,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["targetbodega.products.push(this.newproduct",{"_index":466,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["tbody",{"_index":1196,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["td",{"_index":162,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["td::before",{"_index":1218,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["td:last",{"_index":1198,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["template",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":77,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":1439,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1449,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1438,"title":{},"body":{"index.html":{}}}],["text",{"_index":163,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{}}}],["texto",{"_index":1032,"title":{},"body":{"components/NavbarComponent.html":{}}}],["th",{"_index":161,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["thead",{"_index":1194,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.allproducts",{"_index":444,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.authservice.getcurrentuser",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["this.authservice.getcurrentuser().firstname",{"_index":537,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.authservice.getcurrentuser().lastname",{"_index":538,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.authservice.isauthenticated",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.isbodega",{"_index":1102,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.authservice.login(this.email",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.updatecurrentuser(this.user",{"_index":1303,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["this.authservice.updateuserinlist(this.user",{"_index":1304,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["this.bodegas",{"_index":438,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas.find(b",{"_index":463,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas.length",{"_index":395,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas.push",{"_index":396,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas.reduce((acc",{"_index":445,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas[0",{"_index":398,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.bodegas[1",{"_index":695,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.cantidadingreso",{"_index":514,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.cantidadsalida",{"_index":556,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.checkscreensize",{"_index":953,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.checkscreensize.bind(this",{"_index":955,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.closemodal",{"_index":1121,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.createdefaultadmin",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["this.editmode",{"_index":1301,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["this.filteredproducts",{"_index":114,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.filteredusers",{"_index":720,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.getcurrentuser",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["this.getnotifications",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["this.historial",{"_index":379,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.historial.push(movimiento",{"_index":888,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.historialsubject.asobservable",{"_index":854,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.historialsubject.next(this.historial",{"_index":893,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.ingresoitems",{"_index":539,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.find(item",{"_index":504,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.foreach(item",{"_index":518,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.map(i",{"_index":531,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.push",{"_index":512,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.ingresoitems.splice(index",{"_index":516,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.isbodega",{"_index":1101,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.loadallproducts",{"_index":394,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.loadbodegas",{"_index":393,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.loadnotifications",{"_index":1100,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.loaduserdata",{"_index":1293,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["this.loadusers",{"_index":392,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.loginerror",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.motivosalida",{"_index":569,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newbodeganame",{"_index":493,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newproduct",{"_index":468,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newproduct.bodega",{"_index":465,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newproduct.code",{"_index":460,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newuser",{"_index":712,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newuser.email",{"_index":706,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.newuser.password",{"_index":697,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.nextingresonumber",{"_index":874,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.nextingresonumber.tostring",{"_index":883,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.nextsalidanumber",{"_index":876,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.nextsalidanumber.tostring",{"_index":886,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.normalizecode(code",{"_index":404,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.normalizecode(product.code",{"_index":406,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.normalizecode(this.newproduct.code",{"_index":461,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.notifications",{"_index":908,"title":{},"body":{"interfaces/Movimiento.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.notifications.filter(notification",{"_index":1105,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.notifications.findindex(n",{"_index":899,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.notifications.push(notification",{"_index":896,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.notifications[notificationindex].status",{"_index":900,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.notificationservice.pendingcount$.subscribe(count",{"_index":946,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.notificationservice.setpendingcount(count",{"_index":1107,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.notificationssubject.next(this.notifications",{"_index":903,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.numerodocumento",{"_index":568,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.onrequestmodification",{"_index":641,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct",{"_index":643,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.brand",{"_index":654,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.color",{"_index":660,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.currency",{"_index":669,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.description",{"_index":648,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.family",{"_index":663,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.location",{"_index":675,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.material",{"_index":657,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.model",{"_index":651,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.name",{"_index":645,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.unit",{"_index":672,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.originalproduct.value",{"_index":666,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.password",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.pendingcount.asobservable",{"_index":1246,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.pendingcount.next(count",{"_index":1248,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.pendingnotificationscount",{"_index":947,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.productcodeexists",{"_index":414,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productexists(this.newproduct.code",{"_index":415,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.products",{"_index":113,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.products.filter(product",{"_index":117,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["this.products.find(p",{"_index":564,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.products.find(product",{"_index":554,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.products[index",{"_index":122,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["this.productservice.addmovimiento",{"_index":523,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.addnotification(modificationrequest",{"_index":682,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.productservice.getnextingresonumber",{"_index":389,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.getnextsalidanumber",{"_index":391,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.getnotifications",{"_index":1103,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.productservice.historial$.subscribe(historial",{"_index":378,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.incrementnextingresonumber",{"_index":540,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.incrementnextsalidanumber",{"_index":572,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.products$.subscribe(products",{"_index":112,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.updatenotifications(this.notifications",{"_index":1123,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.productservice.updatenotificationstatus(this.selectednotification.id",{"_index":1117,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.productservice.updateproduct(product.code",{"_index":522,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.productservice.updateproduct(productcode",{"_index":1115,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.productssubject.asobservable",{"_index":843,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.productssubject.getvalue",{"_index":863,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.productssubject.next(products",{"_index":860,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.producttodelete",{"_index":420,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.profilepicturepreview",{"_index":1296,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["this.registererror",{"_index":699,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.registersuccess",{"_index":710,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.registronumeroingreso",{"_index":388,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.registronumerosalida",{"_index":390,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.repeatpassword",{"_index":698,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.resetform(form",{"_index":740,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.router.navigate(['/admin",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["this.router.navigate(['/area",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["this.router.navigate(['/auditor",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["this.router.navigate(['/bodega",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["this.router.navigate(['/login",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["this.salidaitems",{"_index":571,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.salidaitems.find(item",{"_index":552,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.salidaitems.foreach(item",{"_index":563,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.salidaitems.map(i",{"_index":570,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.salidaitems.push",{"_index":555,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.salidaitems.splice(index",{"_index":561,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.savebodegas",{"_index":399,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.savenextingresonumber",{"_index":878,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.savenextsalidanumber",{"_index":880,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.savenotifications",{"_index":1120,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.savenotificationstolocalstorage",{"_index":897,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.saveproductstolocalstorage(currentproducts",{"_index":865,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.searchproductterm",{"_index":115,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.searchuserterm",{"_index":722,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega",{"_index":397,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.name",{"_index":451,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products",{"_index":377,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products.filter(product",{"_index":417,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products.find(p",{"_index":519,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products.some(product",{"_index":405,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products.splice(this.selectedproductindextodelete",{"_index":426,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products[index",{"_index":421,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodega.products[this.selectedproductindextoedit",{"_index":454,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegadestino",{"_index":602,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegadestino!.products.find(p",{"_index":609,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegadestino!.products.push",{"_index":612,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegadestino.name",{"_index":618,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen",{"_index":601,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen!.products",{"_index":614,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen!.products.filter(product",{"_index":615,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen!.products.find(p",{"_index":607,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedbodegaorigen.name",{"_index":617,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedmovimiento",{"_index":584,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectednotification",{"_index":1108,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.selectednotification.cambiossolicitados",{"_index":1116,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.selectednotification.cambiossolicitados[field",{"_index":1125,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.selectednotification.productooriginal.code",{"_index":1114,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.selectednotification.productooriginal[field",{"_index":1124,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.selectednotification.status",{"_index":1119,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.selectedproduct",{"_index":121,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproduct!.code",{"_index":506,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductindextodelete",{"_index":419,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductindextoedit",{"_index":431,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductsalida",{"_index":774,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductsalida!.code",{"_index":775,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproductsalida?.code",{"_index":551,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit",{"_index":432,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproducttoedit.bodega",{"_index":450,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproducttoedit.brand",{"_index":653,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.color",{"_index":659,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.currency",{"_index":668,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.description",{"_index":647,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.family",{"_index":662,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.location",{"_index":674,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.material",{"_index":656,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.model",{"_index":650,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.name",{"_index":644,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.unit",{"_index":671,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttoedit.value",{"_index":665,"title":{},"body":{"interfaces/Bodega-1.html":{}}}],["this.selectedproducttraslado",{"_index":594,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selectedproducttraslado!.code",{"_index":596,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selecteduser",{"_index":747,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.selecteduser.id",{"_index":758,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.tipodocumento",{"_index":567,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.today",{"_index":380,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.toggleeditmode",{"_index":1305,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["this.trasladoitems",{"_index":625,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.find(item",{"_index":595,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.foreach(item",{"_index":605,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.map(item",{"_index":621,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.push",{"_index":597,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.trasladoitems.splice(index",{"_index":599,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.updatehistoriallocalstorage",{"_index":889,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["this.updatelocalstorage",{"_index":1350,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updatependingnotificationscount",{"_index":1104,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["this.user",{"_index":1295,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["this.user.profilepicture",{"_index":1312,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["this.users",{"_index":719,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users.filter(user",{"_index":723,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users.find(user",{"_index":704,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.users.findindex(u",{"_index":756,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users.push",{"_index":711,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.users.splice(index",{"_index":767,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["this.users[index",{"_index":759,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["tipo",{"_index":524,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["tipodocumento",{"_index":363,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/NotificacionesComponent.html":{}}}],["today",{"_index":368,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["todos",{"_index":475,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["toggle::after",{"_index":999,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggledropdown",{"_index":921,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggledropdown(dropdownid",{"_index":932,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggleeditmode",{"_index":1300,"title":{},"body":{"interfaces/User-1.html":{},"components/UserProfileComponent.html":{}}}],["togglepasswordvisibility",{"_index":770,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["togglesidebar",{"_index":922,"title":{},"body":{"components/NavbarComponent.html":{}}}],["top",{"_index":196,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["touppercase(event",{"_index":407,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["tr",{"_index":1197,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tr:hover",{"_index":1226,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tr:last",{"_index":1200,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["tr:nth",{"_index":1202,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["transition",{"_index":1019,"title":{},"body":{"components/NavbarComponent.html":{}}}],["translate",{"_index":960,"title":{},"body":{"components/NavbarComponent.html":{}}}],["translatestatus",{"_index":1075,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["translatestatus(notification.status",{"_index":1138,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["translatestatus(selectednotification?.status",{"_index":1141,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["translatestatus(status",{"_index":1092,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["transparent",{"_index":1234,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["traslado",{"_index":616,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{}}}],["trasladobodegamodal",{"_index":628,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["trasladobodegamodal.dispose",{"_index":631,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["trasladobodegamodal.hide",{"_index":630,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["trasladobodegamodalelement",{"_index":626,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["trasladoitems",{"_index":373,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(odd",{"_index":1203,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["type:'product",{"_index":498,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{}}}],["typealiases",{"_index":1463,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["título",{"_index":1182,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["u.email",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["u.id",{"_index":757,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["u.password",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["ubicación",{"_index":158,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ul",{"_index":1235,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["un",{"_index":489,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["undefined",{"_index":1081,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["unidad",{"_index":131,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["unidades",{"_index":529,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["unit",{"_index":357,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"index.html":{}}}],["uno",{"_index":481,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["unread",{"_index":966,"title":{},"body":{"components/NavbarComponent.html":{}}}],["updatecurrentuser",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatecurrentuser(user",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["updatedproduct",{"_index":869,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["updateduser",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["updateduser.id",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["updatehistoriallocalstorage",{"_index":890,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["updatelocalstorage",{"_index":1339,"title":{},"body":{"injectables/UserService.html":{}}}],["updatenotifications",{"_index":1254,"title":{},"body":{"injectables/ProductService.html":{}}}],["updatenotifications(notifications",{"_index":907,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["updatenotificationstatus",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["updatenotificationstatus(notificationid",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["updatependingnotificationscount",{"_index":1076,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["updateproduct",{"_index":1255,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproduct(code",{"_index":868,"title":{},"body":{"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{}}}],["updateuserinlist",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserinlist(updateduser",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["url(../../assets/img/fondos/inicio.png",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["use",{"_index":1430,"title":{},"body":{"index.html":{}}}],["user",{"_index":60,"title":{"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"injectables/AuthService.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.email",{"_index":705,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["user.email.tolowercase().includes(this.searchuserterm.tolowercase",{"_index":726,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["user.firstname.tolowercase().includes(this.searchuserterm.tolowercase",{"_index":724,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["user.id",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["user.lastname.tolowercase().includes(this.searchuserterm.tolowercase",{"_index":725,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["user.password",{"_index":1352,"title":{},"body":{"injectables/UserService.html":{}}}],["user.role",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["user.role.tolowercase().includes(this.searchuserterm.tolowercase",{"_index":727,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["user.roles",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["user.username",{"_index":1351,"title":{},"body":{"injectables/UserService.html":{}}}],["userindex",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["userinfomodal",{"_index":748,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["userinfomodal.show",{"_index":750,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["usermodal",{"_index":716,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["usermodal.show",{"_index":734,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["usermodal?.hide",{"_index":718,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["username",{"_index":1342,"title":{},"body":{"injectables/UserService.html":{}}}],["userprofilecomponent",{"_index":59,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["users",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Notification.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["users.find((u",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["users.findindex((user",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["users.push(defaultadmin",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["users[userindex",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Notification.html":{}}}],["userservice",{"_index":1333,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["usuario",{"_index":536,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/Movimiento.html":{},"interfaces/Notification-2.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{}}}],["usuarios",{"_index":739,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["validated",{"_index":473,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["validation",{"_index":471,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["valor",{"_index":153,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/NotificacionesComponent.html":{}}}],["value",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UserProfileComponent.html":{}}}],["variable",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1466,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":1139,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["verifica",{"_index":949,"title":{},"body":{"components/NavbarComponent.html":{}}}],["version",{"_index":1416,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":166,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["via",{"_index":1441,"title":{},"body":{"index.html":{}}}],["viewuser(user",{"_index":746,"title":{},"body":{"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["void",{"_index":95,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"injectables/AuthService.html":{},"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"components/LoginComponent.html":{},"interfaces/Movimiento.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Notification.html":{},"interfaces/Notification-1.html":{},"interfaces/Notification-2.html":{},"injectables/NotificationService.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["vr",{"_index":1001,"title":{},"body":{"components/NavbarComponent.html":{}}}],["válidas",{"_index":604,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["warning",{"_index":1133,"title":{},"body":{"components/NotificacionesComponent.html":{},"interfaces/Notification-1.html":{}}}],["weight",{"_index":988,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["white",{"_index":182,"title":{},"body":{"components/AuditorDashboardComponent.html":{}}}],["width",{"_index":198,"title":{},"body":{"components/AuditorDashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["window.addeventlistener('resize",{"_index":954,"title":{},"body":{"components/NavbarComponent.html":{}}}],["window.innerwidth",{"_index":957,"title":{},"body":{"components/NavbarComponent.html":{}}}],["wrapper",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["x",{"_index":1023,"title":{},"body":{"components/NavbarComponent.html":{}}}],["y",{"_index":1181,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["ya",{"_index":484,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["year",{"_index":382,"title":{},"body":{"interfaces/Bodega.html":{},"interfaces/Bodega-1.html":{},"interfaces/Bodega-2.html":{},"interfaces/User.html":{}}}],["z",{"_index":1017,"title":{},"body":{"components/NavbarComponent.html":{}}}],["zone.js",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                NavbarComponent\n                \n            \n\n\n\n            \n                template\n                \nHello, {{ title }}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'erp-praxa'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n    Hello, {{ title }}\n    \n  `,\n  standalone: true,\n  imports: [RouterModule, NavbarComponent]\n})\nexport class AppComponent {\n  title = 'erp-praxa';\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Hello, {{ title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuditorDashboardComponent.html":{"url":"components/AuditorDashboardComponent.html","title":"component - AuditorDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuditorDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auditor-dashboard/auditor-dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auditor-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./auditor-dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auditor-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredProducts\n                            \n                            \n                                products\n                            \n                            \n                                searchProductTerm\n                            \n                            \n                                selectedProduct\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSearchProduct\n                            \n                            \n                                onViewProductInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchProduct\n                        \n                    \n                \n            \n            \n                \nonSearchProduct(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onViewProductInfo\n                        \n                    \n                \n            \n            \n                \nonViewProductInfo(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredProducts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchProductTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auditor-dashboard/auditor-dashboard.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ProductService, Product } from '../service/product.service';\nimport * as bootstrap from 'bootstrap';\n\n@Component({\n  selector: 'app-auditor-dashboard',\n  templateUrl: './auditor-dashboard.component.html',\n  styleUrls: ['./auditor-dashboard.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\nexport class AuditorDashboardComponent implements OnInit {\n  products: Product[] = [];\n  filteredProducts: Product[] = [];\n  searchProductTerm: string = '';\n  selectedProduct: Product | null = null;\n\n  constructor(private productService: ProductService) {}\n\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = products;\n    });\n  }\n\n  onSearchProduct(event: any) {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.products;\n    }\n  }\n\n  onViewProductInfo(index: number) {\n    this.selectedProduct = this.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n}\n\n    \n\n    \n        \n\n    \n    Inventario\n    \n    \n    \n    \n        \n        CÓDIGO\n        DESCRIPCIÓN\n        UNIDAD\n        STOCK\n        HERRAMIENTAS\n        \n    \n    \n        \n        {{ product.code }}\n        {{ product.description }}\n        {{ product.unit }}\n        {{ product.stock }}\n        \n            \n            \n                \n            \n            \n        \n        \n    \n    \n\n  \n  \n\n\n    \n    \n        Información del Producto\n        \n    \n    \n        Código: {{ selectedProduct?.code }}\n        Descripción: {{ selectedProduct?.description }}\n        Modelo: {{ selectedProduct?.model }}\n        Marca: {{ selectedProduct?.brand }}\n        Material: {{ selectedProduct?.material }}\n        Color: {{ selectedProduct?.color }}\n        Familia: {{ selectedProduct?.family }}\n        Valor: {{ selectedProduct?.value }}\n        Moneda: {{ selectedProduct?.currency }}\n        Unidad: {{ selectedProduct?.unit }}\n        Ubicación: {{ selectedProduct?.location }}\n        Stock: {{ selectedProduct?.stock }}\n    \n    \n\n\n\n    \n\n    \n                \n                    ./auditor-dashboard.component.css\n                \n                th, td \n{\n  text-align: center;\n  vertical-align: middle;\n}\n\n.inventory-table-container {\n  padding: 20px;\n}\n\n.table {\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.table-bordered {\n  border: 1px solid #dee2e6;\n}\n\n.table th, .table td {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.main-content {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-left: 240px;\n  padding-top: 70px;\n  width: calc(100% - 240px);\n  }\n  \n  .container {\n  max-width: 90%;\n  width: 100%;\n  }\n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Inventario                                CÓDIGO        DESCRIPCIÓN        UNIDAD        STOCK        HERRAMIENTAS                                {{ product.code }}        {{ product.description }}        {{ product.unit }}        {{ product.stock }}                                                                                                                    Información del Producto                        Código: {{ selectedProduct?.code }}        Descripción: {{ selectedProduct?.description }}        Modelo: {{ selectedProduct?.model }}        Marca: {{ selectedProduct?.brand }}        Material: {{ selectedProduct?.material }}        Color: {{ selectedProduct?.color }}        Familia: {{ selectedProduct?.family }}        Valor: {{ selectedProduct?.value }}        Moneda: {{ selectedProduct?.currency }}        Unidad: {{ selectedProduct?.unit }}        Ubicación: {{ selectedProduct?.location }}        Stock: {{ selectedProduct?.stock }}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuditorDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                next\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const expectedRole = next.data['role'];\n    const currentUser = this.authService.getCurrentUser();\n\n    if (this.authService.isAuthenticated() && (!expectedRole || currentUser.role === expectedRole)) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDefaultAdmin\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                getNotifications\n                            \n                            \n                                getUserRoles\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isArea\n                            \n                            \n                                isAuditor\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isBodega\n                            \n                            \n                                isRoleAllowed\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                updateCurrentUser\n                            \n                            \n                                updateNotificationStatus\n                            \n                            \n                                updateUserInList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDefaultAdmin\n                        \n                    \n                \n            \n            \n                \ncreateDefaultAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotifications\n                        \n                    \n                \n            \n            \n                \ngetNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Notification[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRoles\n                        \n                    \n                \n            \n            \n                \ngetUserRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isArea\n                        \n                    \n                \n            \n            \n                \nisArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuditor\n                        \n                    \n                \n            \n            \n                \nisAuditor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBodega\n                        \n                    \n                \n            \n            \n                \nisBodega()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRoleAllowed\n                        \n                    \n                \n            \n            \n                \nisRoleAllowed(allowedRoles: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                allowedRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCurrentUser\n                        \n                    \n                \n            \n            \n                \nupdateCurrentUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNotificationStatus\n                        \n                    \n                \n            \n            \n                \nupdateNotificationStatus(notificationId: number, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notificationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserInList\n                        \n                    \n                \n            \n            \n                \nupdateUserInList(updatedUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\ninterface Notification {\n  id: number;\n  status: string;\n  message: string;\n  solicitadaPor: string;\n  productoOriginal: any;\n  cambiosSolicitados: any;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private router: Router) {\n    this.createDefaultAdmin();\n  }\n\n  createDefaultAdmin() {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const adminUser = users.find((u: any) => u.email === 'admin@example.com');\n\n    if (!adminUser) {\n      const defaultAdmin = {\n        id: '1',\n        firstName: 'Admin',\n        lastName: 'User',\n        email: 'admin@example.com',\n        password: 'Admin12345',\n        role: 'Admin'\n      };\n      users.push(defaultAdmin);\n      localStorage.setItem('users', JSON.stringify(users));\n      console.log('Usuario administrador creado:', defaultAdmin);\n    }\n  }\n\n  login(email: string, password: string): boolean {\n    const users = JSON.parse(localStorage.getItem('users')!);\n    const user = users.find((u: any) => u.email === email && u.password === password);\n\n    if (user) {\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      if (user.role === 'Admin') {\n        this.router.navigate(['/admin-dashboard']);\n      } else if (user.role === 'Área') {\n        this.router.navigate(['/area-dashboard']);\n      } else if (user.role === 'Auditor') {\n        this.router.navigate(['/auditor-dashboard']);\n      } else if (user.role === 'Bodega') {\n        this.router.navigate(['/bodega-dashboard']);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  getUserRoles(): string[] {\n    const user = this.getCurrentUser();\n    return user ? user.roles : [];\n  }\n\n  logout(): void {\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['/login']);\n  }\n\n  isAuthenticated(): boolean {\n    return !!localStorage.getItem('currentUser');\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('currentUser')!);\n  }\n\n  isAdmin(): boolean {\n    const user = this.getCurrentUser();\n    return user && user.role === 'Admin';\n  }\n\n  isArea(): boolean {\n    const user = this.getCurrentUser();\n    return user && user.role === 'Área';\n  }\n\n  isAuditor(): boolean {\n    const user = this.getCurrentUser();\n    return user && user.role === 'Auditor';\n  }\n\n  isBodega(): boolean {\n    const user = this.getCurrentUser();\n    return user && user.role === 'Bodega';\n  }\n\n  isRoleAllowed(allowedRoles: string[]): boolean {\n    const user = this.getCurrentUser();\n    return user && allowedRoles.includes(user.role);\n  }\n\n  updateCurrentUser(user: any) {\n    localStorage.setItem('currentUser', JSON.stringify(user));\n  }\n\n  updateUserInList(updatedUser: any) {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const userIndex = users.findIndex((user: any) => user.id === updatedUser.id);\n    if (userIndex !== -1) {\n      users[userIndex] = updatedUser;\n      localStorage.setItem('users', JSON.stringify(users));\n    }\n  }\n\n  getNotifications(): Notification[] {\n    const storedNotifications = localStorage.getItem('notifications');\n    return storedNotifications ? JSON.parse(storedNotifications) : [];\n  }\n\n  updateNotificationStatus(notificationId: number, status: string) {\n    const notifications = this.getNotifications();\n    const notification = notifications.find(n => n.id === notificationId);\n    if (notification) {\n      notification.status = status;\n      localStorage.setItem('notifications', JSON.stringify(notifications));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bodega.html":{"url":"interfaces/Bodega.html","title":"interface - Bodega","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bodega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/area-dashboard/area-dashboard.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as bootstrap from 'bootstrap';\nimport { ProductService, Product, Movimiento } from '../service/product.service';\nimport { AuthService } from '../auth/auth.service';\n\ninterface Bodega {\n  name: string;\n  products: Product[];\n}\n\n@Component({\n  selector: 'app-area-dashboard',\n  templateUrl: './area-dashboard.component.html',\n  styleUrls: ['./area-dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, CommonModule]\n})\nexport class AreaDashboardComponent  implements OnInit {\n  products: Product[] = [];\n  allProducts: Product[] = [];\n  filteredProducts: Product[] = [];\n  historial: Movimiento[] = [];\n  selectedProductIndexToDelete: number = -1;\n  selectedProductIndexToEdit: number = -1;\n  selectedProduct: Product | null = null;\n  selectedProductSalida: Product | null = null;\n  bodegas: Bodega[] = [];\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n  newBodegaName: string = '';\n  searchProductTerm: string = '';\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n  ingresoItems: any[] = [];\n  salidaItems: any[] = [];\n  cantidadIngreso: number = 1;\n  cantidadSalida: number = 1;\n  tipoDocumento: string = '';\n  numeroDocumento: string = '';\n  motivoSalida: string = '';\n  registroNumeroIngreso: number = 0;\n  registroNumeroSalida: number = 0;\n  today: string = '';\n  selectedMovimiento: Movimiento | null = null;\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  productToDelete: Product | null = null;\n  productCodeExists: boolean = false;\n\n  trasladoItems: any[] = [];\n  selectedBodegaOrigen: Bodega | null = null;\n  selectedBodegaDestino: Bodega | null = null;\n  selectedProductTraslado: Product | null = null;\n\n  constructor(private productService: ProductService, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = this.selectedBodega.products;\n    });\n    this.productService.historial$.subscribe(historial => this.historial = historial);\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadUsers();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'Bodega Principal', products: [] });\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n  }\n\n  normalizeCode(code: string): string {\n    return code.trim().toUpperCase();\n  }\n\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  checkProductCode() {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  loadUsers() {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n  }\n\n  onSearchProduct(event: any) {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  onDeleteProduct(index: number) {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  onConfirmDelete() {\n    if (this.selectedProductIndexToDelete !== -1) {\n      this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n      this.saveBodegas();\n      this.selectedProductIndexToDelete = -1;\n      this.productToDelete = null;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  onUpdateProduct(index: number, product: Product) {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  onViewProductInfo(index: number) {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  onEditProduct(index: number) {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n\n  loadBodegas() {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas);\n    } else {\n      this.bodegas = [];\n    }\n  } \n\n  saveBodegas() {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  loadAllProducts() {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  selectBodega(bodega: Bodega) {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  onSaveEditProduct() {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      this.selectedProductToEdit.bodega = this.selectedBodega.name; // Corregido aquí\n      this.selectedBodega.products[this.selectedProductIndexToEdit] = this.selectedProductToEdit;\n      this.saveBodegas();\n      this.selectedProductToEdit = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.selectedProductIndexToEdit = -1;\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      editProductModal?.hide();\n    }\n  }\n\n  onAddProduct(form: NgForm) {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts(); // Recargar todos los productos después de agregar uno nuevo\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  addBodega(form: NgForm) {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  resetForm(form: NgForm, type:'product') {\n    form.resetForm();\n    if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  onAddProductoToIngreso() {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  onEliminarItem(index: number) {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  onConfirmarIngreso() {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n        const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n        if (ingresoBodegaModal) {\n            ingresoBodegaModal.hide();\n            setTimeout(() => ingresoBodegaModal.dispose(), 500);\n        }\n    }\n  }\n\n  onAddProductoToSalida() {\n    const selectedProductCode = this.selectedProductSalida?.code;\n    if (!selectedProductCode) return;\n\n    const existingItem = this.salidaItems.find(item => item.product.code === selectedProductCode);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    const productToAdd = this.products.find(product => product.code === selectedProductCode);\n    if (productToAdd) {\n      this.salidaItems.push({\n        product: productToAdd,\n        cantidad: this.cantidadSalida\n      });\n      this.cantidadSalida = 1;\n    }\n  }\n\n  openAddBodegaModal() {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  onEliminarItemSalida(index: number) {\n    this.salidaItems.splice(index, 1);\n  }\n\n  onConfirmarSalida() {\n    this.salidaItems.forEach(item => {\n      const product = this.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock -= item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Salida',\n          numero: this.registroNumeroSalida,\n          fecha: this.today,\n          documento: `${this.tipoDocumento} ${this.numeroDocumento}`,\n          detalles: this.motivoSalida,\n          items: this.salidaItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n        const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n        if (salidaBodegaModal) {\n            salidaBodegaModal.hide();\n            setTimeout(() => salidaBodegaModal.dispose(), 500);\n        }\n    }\n  }\n\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  onVerDetallesMovimiento(movimiento: Movimiento) {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  onAddProductoToTraslado() {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n  \n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n  \n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n  \n  onEliminarItemTraslado(index: number) {\n    this.trasladoItems.splice(index, 1);\n  }\n  \n  onConfirmarTraslado() {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n  \n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n  \n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n  \n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n  \n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n  \n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }  \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bodega-1.html":{"url":"interfaces/Bodega-1.html","title":"interface - Bodega-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bodega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/bodega-dashboard/bodega-dashboard.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule, ReactiveFormsModule } from '@angular/forms'; // Añadir ReactiveFormsModule\nimport { CommonModule } from '@angular/common';\nimport * as bootstrap from 'bootstrap';\nimport { ProductService, Product, Movimiento, PartialProduct } from '../service/product.service';\nimport { AuthService } from '../auth/auth.service';\n\ninterface Bodega {\n  name: string;\n  products: Product[];\n}\n\n@Component({\n  selector: 'app-bodega-dashboard',\n  templateUrl: './bodega-dashboard.component.html',\n  styleUrl: './bodega-dashboard.component.css',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, CommonModule] // Añadir ReactiveFormsModule\n})\nexport class BodegaDashboardComponent implements OnInit {\n  products: Product[] = [];\n  allProducts: Product[] = [];\n  filteredProducts: Product[] = [];\n  historial: Movimiento[] = [];\n  selectedProductIndexToDelete: number = -1;\n  selectedProductIndexToEdit: number = -1;\n  selectedProduct: Product | null = null;\n  selectedProductSalida: Product | null = null;\n  bodegas: Bodega[] = [];\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n  newBodegaName: string = '';\n  searchProductTerm: string = '';\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n  ingresoItems: any[] = [];\n  salidaItems: any[] = [];\n  cantidadIngreso: number = 1;\n  cantidadSalida: number = 1;\n  tipoDocumento: string = '';\n  numeroDocumento: string = '';\n  motivoSalida: string = '';\n  registroNumeroIngreso: number = 0;\n  registroNumeroSalida: number = 0;\n  today: string = '';\n  selectedMovimiento: Movimiento | null = null;\n  selectedProductToEdit: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n\n  productToDelete: Product | null = null;\n  productCodeExists: boolean = false;\n\n  trasladoItems: any[] = [];\n  selectedBodegaOrigen: Bodega | null = null;\n  selectedBodegaDestino: Bodega | null = null;\n  selectedProductTraslado: Product | null = null;\n\n  originalProduct: Product | null = null;\n\n  constructor(private productService: ProductService, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.productService.products$.subscribe(products => {\n      this.products = products;\n      this.filteredProducts = this.selectedBodega.products;\n    });\n    this.productService.historial$.subscribe(historial => this.historial = historial);\n    this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n    this.loadUsers();\n    this.loadBodegas();\n    this.loadAllProducts();\n\n    if (this.bodegas.length === 0) {\n      this.bodegas.push({ name: 'Bodega Principal', products: [] });\n      this.selectedBodega = this.bodegas[0];\n      this.saveBodegas();\n    } else {\n      this.selectedBodega = this.bodegas[0];\n    }\n    this.filteredProducts = this.selectedBodega.products;\n  }\n\n  normalizeCode(code: string): string {\n    return code.trim().toUpperCase();\n  }\n\n  productExists(code: string): boolean {\n    const normalizedCode = this.normalizeCode(code);\n    return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n  }\n\n  toUpperCase(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    input.value = input.value.toUpperCase();\n  }\n\n  checkProductCode() {\n    this.productCodeExists = this.productExists(this.newProduct.code);\n  }\n\n  loadUsers() {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n  }\n\n  onSearchProduct(event: any) {\n    this.searchProductTerm = event.target.value.toLowerCase();\n    if (this.searchProductTerm) {\n      this.filteredProducts = this.selectedBodega.products.filter(product =>\n        product.code.toLowerCase().includes(this.searchProductTerm) ||\n        product.description.toLowerCase().includes(this.searchProductTerm) ||\n        product.name.toLowerCase().includes(this.searchProductTerm)\n      );\n    } else {\n      this.filteredProducts = this.selectedBodega.products;\n    }\n  }\n\n  onDeleteProduct(index: number) {\n    this.selectedProductIndexToDelete = index;\n    this.productToDelete = this.selectedBodega.products[index];\n    const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal.show();\n  }\n\n  onConfirmDelete() {\n    if (this.selectedProductIndexToDelete !== -1) {\n      this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n      this.saveBodegas();\n      this.selectedProductIndexToDelete = -1;\n      this.productToDelete = null;\n      const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n      confirmDeleteModal?.hide();\n    }\n  }\n\n  onUpdateProduct(index: number, product: Product) {\n    this.selectedBodega.products[index] = product;\n    this.saveBodegas();\n  }\n\n  onViewProductInfo(index: number) {\n    this.selectedProduct = this.selectedBodega.products[index];\n    const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n    productInfoModal.show();\n  }\n\n  loadBodegas() {\n    const bodegas = localStorage.getItem('bodegas');\n    if (bodegas) {\n      this.bodegas = JSON.parse(bodegas);\n    } else {\n      this.bodegas = [];\n    }\n  } \n\n  saveBodegas() {\n    localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n  }\n\n  loadAllProducts() {\n    this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n      return acc.concat(bodega.products);\n    }, []);\n  }\n\n  selectBodega(bodega: Bodega) {\n    this.selectedBodega = bodega;\n    this.filteredProducts = bodega.products;\n  }\n\n  onSaveEditProduct() {\n    if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n      const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n      if (editProductModal) {\n          editProductModal.hide();\n          setTimeout(() => editProductModal.dispose(), 500);\n      }\n      this.onRequestModification();\n    }\n  }\n\n  onAddProduct(form: NgForm) {\n    form.form.markAllAsTouched();\n    if (form.valid) {\n      if (!this.productExists(this.newProduct.code)) {\n        this.newProduct.code = this.normalizeCode(this.newProduct.code);\n        const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n        if (targetBodega) {\n          targetBodega.products.push(this.newProduct);\n          this.saveBodegas();\n        }\n        form.resetForm();\n        this.newProduct = {\n          code: '',\n          name: '',\n          description: '',\n          model: '',\n          brand: '',\n          material: '',\n          color: '',\n          family: '',\n          value: 0,\n          currency: '',\n          unit: '',\n          location: '',\n          stock: 0,\n          bodega: 'Bodega Principal'\n        };\n        const formElement = document.querySelector('form.needs-validation-product');\n        if (formElement) {\n          formElement.classList.remove('was-validated');\n        }\n        this.loadAllProducts(); // Recargar todos los productos después de agregar uno nuevo\n      } else {\n        alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n      }\n    } else {\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.add('was-validated');\n      }\n    }\n  }\n\n  addBodega(form: NgForm) {\n    if (this.newBodegaName) {\n      this.bodegas.push({ name: this.newBodegaName, products: [] });\n      this.newBodegaName = '';\n      this.saveBodegas();\n      const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n      addBodegaModal?.hide();\n    }\n  }\n\n  resetForm(form: NgForm, type:'product') {\n    form.resetForm();\n    if (type === 'product') {\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      this.productCodeExists = false;\n    }\n    const formElement = document.querySelector(`form.needs-validation-${type}`);\n    if (formElement) {\n      formElement.classList.remove('was-validated');\n    }\n  }\n\n  onAddProductoToIngreso() {\n    if (!this.selectedProduct) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n\n    const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    this.ingresoItems.push({\n      product: this.selectedProduct,\n      cantidad: this.cantidadIngreso\n    });\n    this.cantidadIngreso = 1;\n  }\n\n  onEliminarItem(index: number) {\n    this.ingresoItems.splice(index, 1);\n  }\n\n  onConfirmarIngreso() {\n    this.ingresoItems.forEach(item => {\n      const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock += item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Ingreso',\n          numero: this.registroNumeroIngreso,\n          fecha: this.today,\n          detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n          items: this.ingresoItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.ingresoItems = [];\n    this.productService.incrementNextIngresoNumber();\n    this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n\n    const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n    if (ingresoBodegaModalElement) {\n        const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n        if (ingresoBodegaModal) {\n            ingresoBodegaModal.hide();\n            setTimeout(() => ingresoBodegaModal.dispose(), 500);\n        }\n    }\n  }\n\n  onAddProductoToSalida() {\n    const selectedProductCode = this.selectedProductSalida?.code;\n    if (!selectedProductCode) return;\n\n    const existingItem = this.salidaItems.find(item => item.product.code === selectedProductCode);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n\n    const productToAdd = this.products.find(product => product.code === selectedProductCode);\n    if (productToAdd) {\n      this.salidaItems.push({\n        product: productToAdd,\n        cantidad: this.cantidadSalida\n      });\n      this.cantidadSalida = 1;\n    }\n  }\n\n  openAddBodegaModal() {\n    const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n    addBodegaModal.show();\n  }\n\n  onEliminarItemSalida(index: number) {\n    this.salidaItems.splice(index, 1);\n  }\n\n  onConfirmarSalida() {\n    this.salidaItems.forEach(item => {\n      const product = this.products.find(p => p.code === item.product.code);\n      if (product) {\n        product.stock -= item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Salida',\n          numero: this.registroNumeroSalida,\n          fecha: this.today,\n          documento: `${this.tipoDocumento} ${this.numeroDocumento}`,\n          detalles: this.motivoSalida,\n          items: this.salidaItems.map(i => ({\n            code: i.product.code,\n            name: i.product.name,\n            description: i.product.description,\n            cantidad: i.cantidad\n          })),\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      }\n    });\n    this.salidaItems = [];\n    this.productService.incrementNextSalidaNumber();\n    this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n\n    const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n    if (salidaBodegaModalElement) {\n        const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n        if (salidaBodegaModal) {\n            salidaBodegaModal.hide();\n            setTimeout(() => salidaBodegaModal.dispose(), 500);\n        }\n    }\n  }\n\n  onAbrirHistorial(): void {\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  onVerDetallesMovimiento(movimiento: Movimiento) {\n    this.selectedMovimiento = movimiento;\n    const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal.show();\n    const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal?.hide();\n  }\n\n  onVolverHistorial(): void {\n    const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n    detalleMovimientoModal?.hide();\n    const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n    detalleHistorialModal.show();\n  }\n\n  onAddProductoToTraslado() {\n    if (!this.selectedProductTraslado) {\n      alert('Por favor, seleccione un producto.');\n      return;\n    }\n  \n    const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n    if (existingItem) {\n      alert('El producto ya se encuentra en la tabla.');\n      return;\n    }\n  \n    this.trasladoItems.push({\n      product: this.selectedProductTraslado,\n    });\n    this.selectedProductTraslado = null;\n  }\n  \n  onEliminarItemTraslado(index: number) {\n    this.trasladoItems.splice(index, 1);\n  }\n  \n  onConfirmarTraslado() {\n    if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n      alert('Seleccione bodegas válidas.');\n      return;\n    }\n  \n    this.trasladoItems.forEach(item => {\n      const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n      if (productInOrigen) {\n        const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n        if (productInDestino) {\n          productInDestino.stock += productInOrigen.stock;\n        } else {\n          this.selectedBodegaDestino!.products.push({\n            ...item.product,\n            stock: productInOrigen.stock\n          });\n        }\n        productInOrigen.stock = 0;\n      }\n    });\n  \n    this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n  \n    this.productService.addMovimiento({\n      tipo: 'Traslado',\n      numero: this.productService.getNextSalidaNumber(),\n      fecha: this.today,\n      detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n      bodegaOrigen: this.selectedBodegaOrigen.name,\n      bodegaDestino: this.selectedBodegaDestino.name,\n      items: this.trasladoItems.map(item => ({\n        code: item.product.code,\n        name: item.product.name,\n        description: item.product.description,\n        cantidad: item.product.stock\n      })),\n      usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n    });\n  \n    this.saveBodegas();\n    this.trasladoItems = [];\n    this.selectedBodegaOrigen = null;\n    this.selectedBodegaDestino = null;\n  \n    const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n    if (trasladoBodegaModalElement) {\n      const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n      if (trasladoBodegaModal) {\n        trasladoBodegaModal.hide();\n        setTimeout(() => trasladoBodegaModal.dispose(), 500);\n      }\n    }\n  }\n\n  onRequestModification() {\n    if (!this.originalProduct) {\n      return;\n    }\n\n    const cambiosSolicitados: any = {};\n\n    if (this.selectedProductToEdit.name !== this.originalProduct.name) {\n      cambiosSolicitados.name = this.selectedProductToEdit.name;\n    }\n    if (this.selectedProductToEdit.description !== this.originalProduct.description) {\n      cambiosSolicitados.description = this.selectedProductToEdit.description;\n    }\n    if (this.selectedProductToEdit.model !== this.originalProduct.model) {\n      cambiosSolicitados.model = this.selectedProductToEdit.model;\n    }\n    if (this.selectedProductToEdit.brand !== this.originalProduct.brand) {\n      cambiosSolicitados.brand = this.selectedProductToEdit.brand;\n    }\n    if (this.selectedProductToEdit.material !== this.originalProduct.material) {\n      cambiosSolicitados.material = this.selectedProductToEdit.material;\n    }\n    if (this.selectedProductToEdit.color !== this.originalProduct.color) {\n      cambiosSolicitados.color = this.selectedProductToEdit.color;\n    }\n    if (this.selectedProductToEdit.family !== this.originalProduct.family) {\n      cambiosSolicitados.family = this.selectedProductToEdit.family;\n    }\n    if (this.selectedProductToEdit.value !== this.originalProduct.value) {\n      cambiosSolicitados.value = this.selectedProductToEdit.value;\n    }\n    if (this.selectedProductToEdit.currency !== this.originalProduct.currency) {\n      cambiosSolicitados.currency = this.selectedProductToEdit.currency;\n    }\n    if (this.selectedProductToEdit.unit !== this.originalProduct.unit) {\n      cambiosSolicitados.unit = this.selectedProductToEdit.unit;\n    }\n    if (this.selectedProductToEdit.location !== this.originalProduct.location) {\n      cambiosSolicitados.location = this.selectedProductToEdit.location;\n    }\n\n    const modificationRequest = {\n      id: new Date().getTime(),\n      status: 'pending',\n      message: 'Solicitud de modificación de producto',\n      solicitadaPor: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`,\n      productoOriginal: this.originalProduct as PartialProduct,\n      cambiosSolicitados: cambiosSolicitados\n    };\n\n    this.productService.addNotification(modificationRequest);\n\n    const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n    editProductModal?.hide();\n  }\n\n\n  onEditProduct(index: number) {\n    this.selectedProductIndexToEdit = index;\n    this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n    this.originalProduct = { ...this.selectedBodega.products[index] }; // Guardar el producto original\n    const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n    editProductModal.show();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bodega-2.html":{"url":"interfaces/Bodega-2.html","title":"interface - Bodega-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Bodega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dashboard.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product, Movimiento } from '../service/product.service';\nimport * as bootstrap from 'bootstrap';\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  role: string;\n  password: string;\n}\n\ninterface Bodega {\n  name: string;\n  products: Product[];\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, CommonModule]\n})\nexport class DashboardComponent implements OnInit {\n  products: Product[] = [];\n  allProducts: Product[] = [];\n  filteredProducts: Product[] = [];\n  historial: Movimiento[] = [];\n  selectedProductIndexToDelete: number = -1;\n  selectedProductIndexToEdit: number = -1;\n  selectedProduct: Product | null = null;\n  selectedProductSalida: Product | null = null;\n  bodegas: Bodega[] = [];\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n  newBodegaName: string = '';\n  searchProductTerm: string = '';\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n  ingresoItems: any[] = [];\n  salidaItems: any[] = [];\n  cantidadIngreso: number = 1;\n  cantidadSalida: number = 1;\n  tipoDocumento: string = '';\n\nnumeroDocumento: string = '';\nmotivoSalida: string = '';\nregistroNumeroIngreso: number = 0;\nregistroNumeroSalida: number = 0;\ntoday: string = '';\nselectedMovimiento: Movimiento | null = null; // Ajuste en el tipo\nselectedProductToEdit: Product = {\n  code: '',\n  name: '',\n  description: '',\n  model: '',\n  brand: '',\n  material: '',\n  color: '',\n  family: '',\n  value: 0,\n  currency: '',\n  unit: '',\n  location: '',\n  stock: 0,\n  bodega: 'Bodega Principal'\n};\n\nproductToDelete: Product | null = null;\nproductCodeExists: boolean = false;\n\nnewUser: User = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\nrepeatPassword: string = '';\nregisterError: string = '';\nregisterSuccess: string = '';\nusers: User[] = [];\nfilteredUsers: User[] = [];\nsearchUserTerm: string = '';\nselectedUser: User = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n\ntrasladoItems: any[] = [];\nselectedBodegaOrigen: Bodega | null = null;\nselectedBodegaDestino: Bodega | null = null;\nselectedProductTraslado: Product | null = null;\n\nconstructor(private productService: ProductService, private authService: AuthService) {}\n\nngOnInit(): void {\n  this.productService.products$.subscribe(products => {\n    this.products = products;\n    this.filteredProducts = this.selectedBodega.products;\n  });\n  this.productService.historial$.subscribe(historial => this.historial = historial);\n  this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n  this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n  this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n  this.loadUsers();\n  this.loadBodegas();\n  this.loadAllProducts();\n\n  if (this.bodegas.length === 0) {\n    this.bodegas.push({ name: 'Bodega Principal', products: [] });\n    this.selectedBodega = this.bodegas[0];\n    this.saveBodegas();\n  } else {\n    this.selectedBodega = this.bodegas[0];\n  }\n  this.filteredProducts = this.selectedBodega.products;\n  this.selectedBodegaOrigen = this.bodegas.length > 0 ? this.bodegas[0] : null;\n  this.selectedBodegaDestino = this.bodegas.length > 0 ? this.bodegas[1] : null;\n}\n\nnormalizeCode(code: string): string {\n  return code.trim().toUpperCase();\n}\n\nproductExists(code: string): boolean {\n  const normalizedCode = this.normalizeCode(code);\n  return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n}\n\ntoUpperCase(event: Event): void {\n  const input = event.target as HTMLInputElement;\n  input.value = input.value.toUpperCase();\n}\n\ncheckProductCode() {\n  this.productCodeExists = this.productExists(this.newProduct.code);\n}\n\nonRegister(form: NgForm) {\n  if (form.valid) {\n    if (this.newUser.password !== this.repeatPassword) {\n      this.registerError = 'Las contraseñas no coinciden.';\n      return;\n    }\n\n    const existingUser = this.users.find(user => user.email === this.newUser.email);\n    if (existingUser) {\n      this.registerError = 'El usuario ya existe. Por favor, intente con otro email.';\n      this.registerSuccess = '';\n      return;\n    }\n\n    this.users.push({ ...this.newUser });\n    localStorage.setItem('users', JSON.stringify(this.users));\n    this.registerSuccess = 'Usuario registrado exitosamente.';\n    this.registerError = '';\n    this.loadUsers();\n    form.resetForm();\n    const userModal = bootstrap.Modal.getInstance(document.getElementById('userModal')!);\n    userModal?.hide();\n  }\n}\n\nloadUsers() {\n  const users = JSON.parse(localStorage.getItem('users') || '[]');\n  this.users = users;\n  this.filteredUsers = users;\n}\n\nonSearchUser() {\n  if (this.searchUserTerm) {\n    this.filteredUsers = this.users.filter(user =>\n      user.firstName.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n      user.lastName.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n      user.email.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n      user.role.toLowerCase().includes(this.searchUserTerm.toLowerCase())\n    );\n  } else {\n    this.filteredUsers = this.users;\n  }\n}\n\n// Métodos de productos deben mantenerse separados\nonSearchProduct(event: any) {\n  this.searchProductTerm = event.target.value.toLowerCase();\n  if (this.searchProductTerm) {\n    this.filteredProducts = this.selectedBodega.products.filter(product =>\n      product.code.toLowerCase().includes(this.searchProductTerm) ||\n      product.description.toLowerCase().includes(this.searchProductTerm) ||\n      product.name.toLowerCase().includes(this.searchProductTerm)\n    );\n  } else {\n    this.filteredProducts = this.selectedBodega.products;\n  }\n}\n\nopenUserModal() {\n  const userModal = new bootstrap.Modal(document.getElementById('userModal')!);\n  userModal.show();\n}\n\nonSaveUser(form: NgForm) {\n  form.form.markAllAsTouched();\n  if (form.valid) {\n    if (this.newUser.password !== this.repeatPassword) {\n      this.registerError = 'Las claves no coinciden.';\n      return;\n    }\n\n    const existingUser = this.users.find(user => user.email === this.newUser.email);\n    if (existingUser) {\n      this.registerError = 'El usuario ya existe. Por favor, intente con otro correo.';\n      this.registerSuccess = '';\n      return;\n    }\n\n    this.users.push({ ...this.newUser });\n    localStorage.setItem('users', JSON.stringify(this.users));\n    this.registerSuccess = 'Usuario registrado exitosamente.';\n    this.registerError = '';\n    this.loadUsers(); // Recargar la lista de usuarios\n    this.resetForm(form, 'user'); // Resetear el formulario\n  } else {\n    this.registerError = 'Por favor complete todos los campos correctamente.';\n    const formElement = document.querySelector('form.needs-validation-user');\n    if (formElement) {\n      formElement.classList.add('was-validated');\n    }\n  }\n}\n\nviewUser(user: User) {\n  this.selectedUser = user;\n  const userInfoModal = new bootstrap.Modal(document.getElementById('userInfoModal')!);\n  userInfoModal.show();\n}\n\neditUser(user: User) {\n  this.selectedUser = { ...user };\n  const editUserModal = new bootstrap.Modal(document.getElementById('editUserModal')!);\n  editUserModal.show();\n}\n\nonSaveEditUser(form: NgForm) {\n  if (form.valid) {\n    const index = this.users.findIndex(u => u.id === this.selectedUser.id);\n    if (index !== -1) {\n      this.users[index] = { ...this.selectedUser };\n      localStorage.setItem('users', JSON.stringify(this.users));\n      this.loadUsers();\n      const editUserModal = bootstrap.Modal.getInstance(document.getElementById('editUserModal')!);\n      editUserModal?.hide();\n    }\n  }\n}\n\ndeleteUser(user: User) {\n  this.selectedUser = user;\n  const confirmDeleteUserModal = new bootstrap.Modal(document.getElementById('confirmDeleteUserModal')!);\n  confirmDeleteUserModal.show();\n}\n\nonConfirmDeleteUser() {\n  const index = this.users.findIndex(u => u.id === this.selectedUser.id);\n  if (index > -1) {\n    this.users.splice(index, 1);\n    localStorage.setItem('users', JSON.stringify(this.users));\n    this.loadUsers();\n    const confirmDeleteUserModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteUserModal')!);\n    confirmDeleteUserModal?.hide();\n  }\n}\n\ntogglePasswordVisibility() {\n  const passwordField = document.getElementById('editPassword') as HTMLInputElement;\n  if (passwordField.type === 'password') {\n    passwordField.type = 'text';\n  } else {\n    passwordField.type = 'password';\n  }\n}\n\nonDeleteProduct(index: number) {\n  this.selectedProductIndexToDelete = index;\n  this.productToDelete = this.selectedBodega.products[index];\n  const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n  confirmDeleteModal.show();\n}\n\nonConfirmDelete() {\n  if (this.selectedProductIndexToDelete !== -1) {\n    this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n    this.saveBodegas();\n    this.selectedProductIndexToDelete = -1;\n    this.productToDelete = null;\n    const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal?.hide();\n  }\n}\n\nonUpdateProduct(index: number, product: Product) {\n  this.selectedBodega.products[index] = product;\n  this.saveBodegas();\n}\n\nonViewProductInfo(index: number) {\n  this.selectedProduct = this.selectedBodega.products[index];\n  const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n  productInfoModal.show();\n}\n\nonEditProduct(index: number) {\n  this.selectedProductIndexToEdit = index;\n  this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n  const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n  editProductModal.show();\n}\n\nloadBodegas() {\n  const bodegas = localStorage.getItem('bodegas');\n  if (bodegas) {\n    this.bodegas = JSON.parse(bodegas);\n  } else {\n    this.bodegas = [];\n  }\n} \n\nsaveBodegas() {\n  localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n}\n\nloadAllProducts() {\n  this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n    return acc.concat(bodega.products);\n  }, []);\n}\n\nselectBodega(bodega: Bodega) {\n  this.selectedBodega = bodega;\n  this.filteredProducts = bodega.products;\n}\n\nonSaveEditProduct() {\n  if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n    this.selectedProductToEdit.bodega = this.selectedBodega.name; // Corregido aquí\n    this.selectedBodega.products[this.selectedProductIndexToEdit] = this.selectedProductToEdit;\n    this.saveBodegas();\n    this.selectedProductToEdit = {\n      code: '',\n      name: '',\n      description: '',\n      model: '',\n      brand: '',\n      material: '',\n      color: '',\n      family: '',\n      value: 0,\n      currency: '',\n      unit: '',\n      location: '',\n      stock: 0,\n      bodega: 'Bodega Principal'\n    };\n    this.selectedProductIndexToEdit = -1;\n    const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n    editProductModal?.hide();\n  }\n}\n\nonAddProduct(form: NgForm) {\n  form.form.markAllAsTouched();\n  if (form.valid) {\n    if (!this.productExists(this.newProduct.code)) {\n      this.newProduct.code = this.normalizeCode(this.newProduct.code);\n      const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n      if (targetBodega) {\n        targetBodega.products.push(this.newProduct);\n        this.saveBodegas();\n      }\n      form.resetForm();\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.remove('was-validated');\n      }\n      this.loadAllProducts(); // Recargar todos los productos después de agregar uno nuevo\n    } else {\n      alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n    }\n  } else {\n    const formElement = document.querySelector('form.needs-validation-product');\n    if (formElement) {\n      formElement.classList.add('was-validated');\n    }\n  }\n}\n\naddBodega(form: NgForm) {\n  if (this.newBodegaName) {\n    this.bodegas.push({ name: this.newBodegaName, products: [] });\n    this.newBodegaName = '';\n    this.saveBodegas();\n    const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n    addBodegaModal?.hide();\n  }\n}  \n\nresetForm(form: NgForm, type: 'user' | 'product') {\n  form.resetForm();\n  if (type === 'user') {\n    this.newUser = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n    this.repeatPassword = '';\n    this.registerError = '';\n    this.registerSuccess = '';\n  } else if (type === 'product') {\n    this.newProduct = {\n      code: '',\n      name: '',\n      description: '',\n      model: '',\n      brand: '',\n      material: '',\n      color: '',\n      family: '',\n      value: 0,\n      currency: '',\n      unit: '',\n      location: '',\n      stock: 0,\n      bodega: 'Bodega Principal'\n    };\n    this.productCodeExists = false;\n  }\n  const formElement = document.querySelector(`form.needs-validation-${type}`);\n  if (formElement) {\n    formElement.classList.remove('was-validated');\n  }\n}\n\nonAddProductoToIngreso() {\n  if (!this.selectedProduct) {\n    alert('Por favor, seleccione un producto.');\n    return;\n  }\n\n  const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n  if (existingItem) {\n    alert('El producto ya se encuentra en la tabla.');\n    return;\n  }\n\n  this.ingresoItems.push({\n    product: this.selectedProduct,\n    cantidad: this.cantidadIngreso\n  });\n  this.cantidadIngreso = 1;\n}\n\nonEliminarItem(index: number) {\n  this.ingresoItems.splice(index, 1);\n}\n\nonConfirmarIngreso() {\n  this.ingresoItems.forEach(item => {\n    const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n    if (product) {\n      product.stock += item.cantidad;\n      this.productService.updateProduct(product.code, product);\n      this.productService.addMovimiento({\n        tipo: 'Ingreso',\n        numero: this.registroNumeroIngreso,\n        fecha: this.today,\n        detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n        items: this.ingresoItems.map(i => ({\n          code: i.product.code,\n          name: i.product.name,\n          description: i.product.description,\n          cantidad: i.cantidad\n        })),\n        usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n      });\n    }\n  });\n  this.ingresoItems = [];\n  this.productService.incrementNextIngresoNumber();\n  this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n  this.saveBodegas();\n\n  const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n  if (ingresoBodegaModalElement) {\n      const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n      if (ingresoBodegaModal) {\n          ingresoBodegaModal.hide();\n          setTimeout(() => ingresoBodegaModal.dispose(), 500);\n      }\n  }\n}\n\nopenAddBodegaModal() {\n  const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n  addBodegaModal.show();\n}  \n\nonAddProductoToSalida() {\n  if (!this.selectedProductSalida) {\n    alert('Por favor, seleccione un producto.');\n    return;\n  }\n\n  const existingItem = this.salidaItems.find(item => item.product.code === this.selectedProductSalida!.code);\n  if (existingItem) {\n    alert('El producto ya se encuentra en la tabla.');\n    return;\n  }\n\n  this.salidaItems.push({\n    product: this.selectedProductSalida,\n    cantidad: this.cantidadSalida,\n    tipoDocumento: this.tipoDocumento,\n    numeroDocumento: this.numeroDocumento\n  });\n  this.cantidadSalida = 1;\n}\n\nonConfirmarSalida() {\n  this.salidaItems.forEach(item => {\n    const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n    if (product) {\n      if (product.stock >= item.cantidad) {\n        product.stock -= item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Salida',\n          numero: this.registroNumeroSalida,\n          fecha: this.today,\n          documento: `${item.tipoDocumento} ${item.numeroDocumento}`,\n          detalles: this.motivoSalida,\n          items: [{\n            code: item.product.code,\n            name: item.product.name,\n            description: item.product.description,\n            cantidad: item.cantidad\n          }],\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      } else {\n        alert(`La cantidad a retirar supera el stock disponible de ${product.name}.`);\n      }\n    }\n  });\n  this.salidaItems = [];\n  this.productService.incrementNextSalidaNumber();\n  this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n  this.saveBodegas();\n\n  const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n  if (salidaBodegaModalElement) {\n      const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n      if (salidaBodegaModal) {\n          salidaBodegaModal.hide();\n          setTimeout(() => salidaBodegaModal.dispose(), 500);\n      }\n  }\n}  \n\nonEliminarItemSalida(index: number): void {\n  this.salidaItems.splice(index, 1);\n}\n\nonAbrirHistorial(): void {\n  const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n  detalleHistorialModal.show();\n}\n\nonVerDetallesMovimiento(movimiento: Movimiento) {\n  this.selectedMovimiento = movimiento;\n  const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n  detalleMovimientoModal.show();\n  const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n  detalleHistorialModal?.hide();\n}\n\nonVolverHistorial(): void {\n  const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n  detalleMovimientoModal?.hide();\n  const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n  detalleHistorialModal.show();\n}\n\nonAddProductoToTraslado() {\n  if (!this.selectedProductTraslado) {\n    alert('Por favor, seleccione un producto.');\n    return;\n  }\n\n  const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n  if (existingItem) {\n    alert('El producto ya se encuentra en la tabla.');\n    return;\n  }\n\n  this.trasladoItems.push({\n    product: this.selectedProductTraslado,\n  });\n  this.selectedProductTraslado = null;\n}\n\nonEliminarItemTraslado(index: number) {\n  this.trasladoItems.splice(index, 1);\n}\n\nonConfirmarTraslado() {\n  if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n    alert('Seleccione bodegas válidas.');\n    return;\n  }\n\n  this.trasladoItems.forEach(item => {\n    const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n    if (productInOrigen) {\n      const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n      if (productInDestino) {\n        productInDestino.stock += productInOrigen.stock;\n      } else {\n        this.selectedBodegaDestino!.products.push({\n          ...item.product,\n          stock: productInOrigen.stock\n        });\n      }\n      productInOrigen.stock = 0;\n    }\n  });\n\n  this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n\n  this.productService.addMovimiento({\n    tipo: 'Traslado',\n    numero: this.productService.getNextSalidaNumber(),\n    fecha: this.today,\n    detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n    bodegaOrigen: this.selectedBodegaOrigen.name,\n    bodegaDestino: this.selectedBodegaDestino.name,\n    items: this.trasladoItems.map(item => ({\n      code: item.product.code,\n      name: item.product.name,\n      description: item.product.description,\n      cantidad: item.product.stock\n    })),\n    usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n  });\n\n  this.saveBodegas();\n  this.trasladoItems = [];\n  this.selectedBodegaOrigen = null;\n  this.selectedBodegaDestino = null;\n\n  const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n  if (trasladoBodegaModalElement) {\n    const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n    if (trasladoBodegaModal) {\n      trasladoBodegaModal.hide();\n      setTimeout(() => trasladoBodegaModal.dispose(), 500);\n    }\n  }\n}  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                loginError\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  loginError: string = '';\n\n  constructor(private authService: AuthService) {}\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      const success = this.authService.login(this.email, this.password);\n      if (!success) {\n        this.loginError = 'Credenciales incorrectas';\n      } else {\n        this.loginError = 'Credenciales inválidas. Por favor, intente de nuevo.';\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          Correo electrónico\n          \n          \n            Por favor, ingrese su correo electrónico.\n          \n        \n        \n          Contraseña\n          \n          \n            Por favor, ingrese su contraseña.\n          \n        \n        Iniciar sesión\n        {{ loginError }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                body {\n  font-family: Arial, sans-serif;\n}\n\n.login-container-wrapper {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(../../assets/img/fondos/Inicio.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n}\n\n.login-container {\n  background-color: #ffffffec;\n  padding: 2rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 50%;\n}\n\n.logo {\n  flex: 1;\n  text-align: center;\n}\n\n.logo img {\n  width: 250px;\n}\n\n.form-container {\n  flex: 2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Correo electrónico                                Por favor, ingrese su correo electrónico.                                    Contraseña                                Por favor, ingrese su contraseña.                          Iniciar sesión        {{ loginError }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Movimiento.html":{"url":"interfaces/Movimiento.html","title":"interface - Movimiento","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Movimiento\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/product.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bodegaDestino\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bodegaOrigen\n                                        \n                                \n                                \n                                        \n                                            detalles\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            documento\n                                        \n                                \n                                \n                                        \n                                            fecha\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                                \n                                        \n                                            usuario\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bodegaDestino\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bodegaDestino:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bodegaOrigen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bodegaOrigen:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        detalles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detalles:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        documento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        documento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usuario\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usuario:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface Product {\n  code: string;\n  name: string;\n  description: string;\n  model: string;\n  brand: string;\n  material: string;\n  color: string;\n  family: string;\n  value: number;\n  currency: string;\n  unit: string;\n  location: string;\n  stock: number;\n  bodega: string;\n}\n\nexport interface Movimiento {\n  tipo: string;\n  numero: number;\n  fecha: string;\n  documento?: string;\n  detalles: string;\n  items: Array;\n  usuario: string;\n  bodegaOrigen?: string;\n  bodegaDestino?: string;\n}\n\nexport type PartialProduct = {\n  [P in keyof Product]?: Product[P];\n} & {\n  [key: string]: any;\n};\n\ninterface Notification {\n  id: number;\n  status: string;\n  message: string;\n  solicitadaPor: string;\n  productoOriginal: PartialProduct;\n  cambiosSolicitados: PartialProduct;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private productsSubject: BehaviorSubject = new BehaviorSubject(this.loadProductsFromLocalStorage());\n  products$ = this.productsSubject.asObservable();\n  private nextIngresoNumber: number = +localStorage.getItem('nextIngresoNumber')! || 1;\n  private nextSalidaNumber: number = +localStorage.getItem('nextSalidaNumber')! || 1;\n  private historial: Movimiento[] = JSON.parse(localStorage.getItem('historial')!) || [];\n  private historialSubject: BehaviorSubject = new BehaviorSubject(this.historial);\n  private notifications: Notification[] = JSON.parse(localStorage.getItem('notifications') || '[]');\n  private notificationsSubject: BehaviorSubject = new BehaviorSubject(this.notifications);\n  historial$ = this.historialSubject.asObservable();\n\n  constructor() {}\n\n  private loadProductsFromLocalStorage(): Product[] {\n    return JSON.parse(localStorage.getItem('products')!) || [];\n  }\n\n  private saveProductsToLocalStorage(products: Product[]): void {\n    localStorage.setItem('products', JSON.stringify(products));\n    this.productsSubject.next(products);\n  }\n\n  addProduct(product: Product) {\n    const currentProducts = this.productsSubject.getValue();\n    currentProducts.push(product);\n    this.saveProductsToLocalStorage(currentProducts);\n  }\n\n  deleteProduct(index: number) {\n    const currentProducts = this.productsSubject.getValue();\n    currentProducts.splice(index, 1);\n    this.saveProductsToLocalStorage(currentProducts);\n  }\n\n  updateProduct(code: string, updatedProduct: PartialProduct) {\n    const currentProducts = this.productsSubject.getValue();\n    const productIndex = currentProducts.findIndex(p => p.code === code);\n    if (productIndex !== -1) {\n      currentProducts[productIndex] = { ...currentProducts[productIndex], ...updatedProduct };\n      this.saveProductsToLocalStorage(currentProducts);\n    }\n  }\n\n  getNextIngresoNumber(): number {\n    return this.nextIngresoNumber;\n  }\n\n  getNextSalidaNumber(): number {\n    return this.nextSalidaNumber;\n  }\n\n  incrementNextIngresoNumber() {\n    this.nextIngresoNumber++;\n    this.saveNextIngresoNumber();\n  }\n\n  incrementNextSalidaNumber() {\n    this.nextSalidaNumber++;\n    this.saveNextSalidaNumber();\n  }\n\n  saveNextIngresoNumber() {\n    localStorage.setItem('nextIngresoNumber', this.nextIngresoNumber.toString());\n  }\n\n  saveNextSalidaNumber() {\n    localStorage.setItem('nextSalidaNumber', this.nextSalidaNumber.toString());\n  }\n\n  addMovimiento(movimiento: Movimiento) {\n    this.historial.push(movimiento);\n    this.updateHistorialLocalStorage();\n  }\n\n  private updateHistorialLocalStorage() {\n    localStorage.setItem('historial', JSON.stringify(this.historial));\n    this.historialSubject.next(this.historial);\n  }\n\n  // Notificaciones\n  addNotification(notification: Notification) {\n    this.notifications.push(notification);\n    this.saveNotificationsToLocalStorage();\n  }\n\n  getNotifications(): Notification[] {\n    return JSON.parse(localStorage.getItem('notifications') || '[]');\n  }\n\n  updateNotificationStatus(notificationId: number, status: string) {\n    const notificationIndex = this.notifications.findIndex(n => n.id === notificationId);\n    if (notificationIndex !== -1) {\n      this.notifications[notificationIndex].status = status;\n      this.saveNotificationsToLocalStorage();\n    }\n  }\n\n  private saveNotificationsToLocalStorage() {\n    localStorage.setItem('notifications', JSON.stringify(this.notifications));\n    this.notificationsSubject.next(this.notifications);\n  }\n\n  // Nuevo método para actualizar las notificaciones\n  updateNotifications(notifications: Notification[]) {\n    this.notifications = notifications;\n    this.saveNotificationsToLocalStorage();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                currentOpenDropdown\n                            \n                            \n                                isSidebarCollapsed\n                            \n                            \n                                pendingNotificationsCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkScreenSize\n                            \n                            \n                                isLoginPage\n                            \n                            \n                                isOnDashboard\n                            \n                            \n                                isRoleAllowed\n                            \n                            \n                                logout\n                            \n                            \n                                navigateToHome\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleDropdown\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \ncheckScreenSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoginPage\n                        \n                    \n                \n            \n            \n                \nisLoginPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOnDashboard\n                        \n                    \n                \n            \n            \n                \nisOnDashboard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRoleAllowed\n                        \n                    \n                \n            \n            \n                \nisRoleAllowed(allowedRoles: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                allowedRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToHome\n                        \n                    \n                \n            \n            \n                \nnavigateToHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown(dropdownId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dropdownId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSidebar\n                        \n                    \n                \n            \n            \n                \ntoggleSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentOpenDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSidebarCollapsed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingNotificationsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Router } from '@angular/router';\nimport { NotificationService } from '../service/notificacion.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  standalone: true,\n  imports: [CommonModule, RouterModule]\n})\nexport class NavbarComponent implements OnInit {\n  pendingNotificationsCount: number = 0;\n  isSidebarCollapsed = false;\n  currentOpenDropdown: string | null = null;\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private notificationService: NotificationService // Inyecta el servicio\n  ) {}\n\n  ngOnInit(): void {\n    // Suscríbete a los cambios en el contador de notificaciones pendientes\n    this.notificationService.pendingCount$.subscribe(count => {\n      this.pendingNotificationsCount = count;\n    });\n\n    // Verifica el tamaño de la pantalla al iniciar\n    this.checkScreenSize();\n    window.addEventListener('resize', this.checkScreenSize.bind(this));\n  }\n\n  checkScreenSize(): void {\n    const screenWidth = window.innerWidth;\n    if (screenWidth \n    \n\n    \n        \n  \n    \n      \n    \n    ERP\n    \n      \n        \n         0\" class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\n          {{ pendingNotificationsCount }}\n          unread messages\n        \n      \n    \n    \n    \n      \n        \n        \n          {{ authService.getCurrentUser()?.firstName }} {{ authService.getCurrentUser()?.lastName }}\n          {{ authService.getCurrentUser()?.role }}\n        \n      \n    \n  \n\n\n\n  \n    \n    PRAXA INGENIERIA SPA\n  \n  \n    \n      \n         Inicio\n      \n    \n    \n      \n         Bodega\n      \n      \n    \n    \n      \n         Crear Producto\n      \n      \n         Ingreso a Bodega\n      \n      \n         Salida de Bodega\n      \n      \n         Traslado de Bodega\n      \n      \n         Historial\n      \n    \n    \n      \n         Compras\n      \n      \n    \n    \n      \n         Órdenes de Compra\n      \n      \n         Recepción de Facturas\n      \n    \n    \n      \n         Cuenta\n      \n    \n    \n      \n         Salir\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .custom-navbar {\n  background-color: #ffffff;\n  border-bottom: 1px solid #e5e5e5;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.navbar-brand {\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.nav-item .nav-link {\n  color: #000;\n}\n\n.nav-item .nav-link .bi-bell {\n  font-size: 1.5rem;\n}\n\n.dropdown-toggle::after {\n  display: none;\n}\n\n.vr {\n  border-left: 1px solid #e5e5e5;\n  height: 40px;\n}\n\n.company-logo {\n  width: 50px;\n  height: auto;\n}\n\n.sidebar-header h4 {\n  margin: 0;\n}\n\n.list-group-item-action {\n  cursor: pointer;\n}\n\n.list-group-item-action i {\n  margin-right: 10px;\n}\n\n#sidebar {\n  width: 60px;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  padding-top: 70px;\n  transition: width 0.3s ease-in-out;\n  overflow-x: hidden;\n  background-color: #f5f7fa; /* Fondo similar al de Chipax */\n}\n\n#sidebar:hover {\n  width: 280px;\n}\n\n#sidebar .sidebar-header {\n  background-color: #354a5f; /* Color del encabezado */\n  color: #ffffff; /* Color del texto en el encabezado */\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#sidebar .sidebar-header img {\n  margin-right: 10px;\n}\n\n#sidebar .sidebar-header h6 {\n  display: none;\n}\n\n#sidebar:hover .sidebar-header h6 {\n  display: block;\n}\n\n#sidebar .list-group-item {\n  text-align: center;\n  padding: 1rem;\n  border: none; /* Quitar líneas divisorias */\n}\n\n#sidebar .list-group-item:hover,\n#sidebar .list-group-item.active {\n  background-color: #e9ecef; /* Fondo similar al de Chipax */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Sombreado */\n  border-radius: 4px; /* Bordes redondeados */\n}\n\n#sidebar:hover .list-group-item {\n  text-align: left;\n}\n\n#sidebar .list-group-item i {\n  font-size: 1.25rem;\n  margin-right: 0;\n}\n\n#sidebar .list-group-item .bi-chevron-down {\n  display: none;\n}\n\n#sidebar:hover .list-group-item i {\n  margin-right: 10px;\n}\n\n#sidebar:hover .list-group-item .bi-chevron-down {\n  display: inline-block;\n}\n\n#sidebar .list-group-item span {\n  display: none;\n}\n\n#sidebar:hover .list-group-item span {\n  display: inline;\n  font-family: 'Roboto', sans-serif; /* Fuente similar a la de Chipax */\n  font-size: 0.9rem;\n  color: #4a4a4a;\n}\n\n.navbar-text {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n}\n\n.navbar-text .text-success {\n  margin-top: -5px;\n}\n\n.dropdown-menu-end {\n  min-width: 200px;\n}\n\n#page-content-wrapper {\n  margin-left: 90px;\n  transition: margin-left 0.3s ease-in-out;\n}\n\n#sidebar:hover ~ #page-content-wrapper {\n  margin-left: 280px;\n}\n\n.sidebar-header {\n  transition: all 0.3s ease-in-out;\n  border-bottom: none;\n}\n\n.sidebar:hover .sidebar-header {\n  display: flex;\n  justify-content: center;\n}\n\n.sidebar-header img {\n  width: 40px;\n  height: auto;\n  margin-left: 5px;\n}\n\n.sidebar:hover .sidebar-header img {\n  width: 50px;\n  height: auto;\n}\n\n.main-content {\n  margin-left: 90px;\n  transition: margin-left 0.3s ease-in-out;\n}\n\n.sidebar:hover ~ .main-content {\n  margin-left: 280px;\n}\n\n#sidebar .list-group-item {\n  position: relative;\n}\n\n#sidebar .list-group-item i {\n  width: 100%;\n  text-align: center;\n}\n\n#sidebar:hover .list-group-item i {\n  width: auto;\n  text-align: left;\n}\n\n#sidebar .list-group-item .bi-chevron-down {\n  position: absolute;\n  right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ERP                           0\" class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">          {{ pendingNotificationsCount }}          unread messages                                                          {{ authService.getCurrentUser()?.firstName }} {{ authService.getCurrentUser()?.lastName }}          {{ authService.getCurrentUser()?.role }}                              PRAXA INGENIERIA SPA                       Inicio                             Bodega                                   Crear Producto                     Ingreso a Bodega                     Salida de Bodega                     Traslado de Bodega                     Historial                             Compras                                   Órdenes de Compra                     Recepción de Facturas                             Cuenta                             Salir            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificacionesComponent.html":{"url":"components/NotificacionesComponent.html","title":"component - NotificacionesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificacionesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notificaciones/notificaciones.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notificaciones\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./notificaciones.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notificaciones.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isBodega\n                            \n                            \n                                notifications\n                            \n                            \n                                pendingNotificationsCount\n                            \n                            \n                                selectedNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptModification\n                            \n                            \n                                closeModal\n                            \n                            \n                                getStatusClass\n                            \n                            \n                                hasChanged\n                            \n                            \n                                loadNotifications\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                rejectModification\n                            \n                            \n                                saveNotifications\n                            \n                            \n                                translateStatus\n                            \n                            \n                                updatePendingNotificationsCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, productService: ProductService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notificaciones/notificaciones.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptModification\n                        \n                    \n                \n            \n            \n                \nacceptModification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatusClass\n                        \n                    \n                \n            \n            \n                \ngetStatusClass(status: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasChanged\n                        \n                    \n                \n            \n            \n                \nhasChanged(field)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNotifications\n                        \n                    \n                \n            \n            \n                \nloadNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(notification: Notification)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notification\n                                            \n                                                            Notification\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rejectModification\n                        \n                    \n                \n            \n            \n                \nrejectModification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveNotifications\n                        \n                    \n                \n            \n            \n                \nsaveNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateStatus\n                        \n                    \n                \n            \n            \n                \ntranslateStatus(status: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePendingNotificationsCount\n                        \n                    \n                \n            \n            \n                \nupdatePendingNotificationsCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/notificaciones/notificaciones.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isBodega\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingNotificationsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/notificaciones/notificaciones.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product } from '../service/product.service';\nimport { NotificationService } from '../service/notificacion.service';\nimport { Modal } from 'bootstrap';\nimport { CommonModule } from '@angular/common';\n\ninterface Notification {\n  id: number;\n  status: string;\n  message: string;\n  solicitadaPor: string;\n  productoOriginal: Partial;\n  cambiosSolicitados: Partial;\n}\n\n@Component({\n  selector: 'app-notificaciones',\n  templateUrl: './notificaciones.component.html',\n  styleUrls: ['./notificaciones.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class NotificacionesComponent implements OnInit {\n  notifications: Notification[] = [];\n  selectedNotification: Notification | null = null;\n  isBodega: boolean = false;\n  pendingNotificationsCount: number = 0;\n\n  constructor(private authService: AuthService, private productService: ProductService, private notificationService: NotificationService) {}\n\n  ngOnInit(): void {\n    this.loadNotifications();\n    this.isBodega = this.authService.isBodega();\n  }\n\n  loadNotifications() {\n    this.notifications = this.productService.getNotifications();\n    this.updatePendingNotificationsCount();\n  }\n\n  updatePendingNotificationsCount() {\n    const count = this.notifications.filter(notification => notification.status === 'pending').length;\n    this.pendingNotificationsCount = count;\n    this.notificationService.setPendingCount(count);\n  }\n  \n  openModal(notification: Notification) {\n    this.selectedNotification = notification;\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = new Modal(modalElement);\n      modal.show();\n    }\n  }\n\n  acceptModification() {\n    if (this.selectedNotification) {\n      const productCode = this.selectedNotification.productoOriginal.code as string;\n      this.productService.updateProduct(productCode, this.selectedNotification.cambiosSolicitados);\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'accepted');\n      this.selectedNotification.status = 'accepted';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  rejectModification() {\n    if (this.selectedNotification) {\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'rejected');\n      this.selectedNotification.status = 'rejected';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  saveNotifications() {\n    this.productService.updateNotifications(this.notifications);\n  }\n\n  hasChanged(field: keyof Product): boolean {\n    if (!this.selectedNotification) return false;\n    return this.selectedNotification.productoOriginal[field] !== this.selectedNotification.cambiosSolicitados[field];\n  }\n\n  closeModal() {\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = Modal.getInstance(modalElement);\n      if (modal) {\n        modal.hide();\n      }\n    }\n  }\n\n  translateStatus(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'Pendiente';\n      case 'accepted':\n        return 'Aceptado';\n      case 'rejected':\n        return 'Rechazado';\n      default:\n        return '';\n    }\n  }\n\n  getStatusClass(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'text-warning';\n      case 'accepted':\n        return 'text-success';\n      case 'rejected':\n        return 'text-danger';\n      default:\n        return '';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Solicitado por\n            Estado\n            Acciones\n          \n        \n        \n          \n            {{ notification.solicitadaPor }}\n            {{ translateStatus(notification.status) }}\n            Ver solicitud\n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n        \n          Solicitado por: {{ selectedNotification?.solicitadaPor }}\n          Estado:  {{ translateStatus(selectedNotification?.status) }}\n\n          Producto original:\n          \n            Código: {{ selectedNotification?.productoOriginal?.code }}\n            Nombre: {{ selectedNotification?.productoOriginal?.name }}\n            Descripción: {{ selectedNotification?.productoOriginal?.description }}\n            Modelo: {{ selectedNotification?.productoOriginal?.model }}\n            Marca: {{ selectedNotification?.productoOriginal?.brand }}\n            Material: {{ selectedNotification?.productoOriginal?.material }}\n            Color: {{ selectedNotification?.productoOriginal?.color }}\n            Familia: {{ selectedNotification?.productoOriginal?.family }}\n            Valor: {{ selectedNotification?.productoOriginal?.value }}\n            Moneda: {{ selectedNotification?.productoOriginal?.currency }}\n            Unidad: {{ selectedNotification?.productoOriginal?.unit }}\n            Ubicación: {{ selectedNotification?.productoOriginal?.location }}\n          \n\n          Cambios solicitados:\n          \n            Nombre: {{ selectedNotification?.cambiosSolicitados?.name }}\n            Descripción: {{ selectedNotification?.cambiosSolicitados?.description }}\n            Modelo: {{ selectedNotification?.cambiosSolicitados?.model }}\n            Marca: {{ selectedNotification?.cambiosSolicitados?.brand }}\n            Material: {{ selectedNotification?.cambiosSolicitados?.material }}\n            Color: {{ selectedNotification?.cambiosSolicitados?.color }}\n            Familia: {{ selectedNotification?.cambiosSolicitados?.family }}\n            Valor: {{ selectedNotification?.cambiosSolicitados?.value }}\n            Moneda: {{ selectedNotification?.cambiosSolicitados?.currency }}\n            Unidad: {{ selectedNotification?.cambiosSolicitados?.unit }}\n            Ubicación: {{ selectedNotification?.cambiosSolicitados?.location }}\n          \n        \n        \n          Aceptar\n          Rechazar\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./notificaciones.component.css\n                \n                @import 'bootstrap-icons/font/bootstrap-icons.css';\n@import 'bootstrap/dist/css/bootstrap.min.css';\n\n/* Estilos generales */\nth, td {\n  text-align: center;\n}\n\n/* Contenedor de la tabla de inventario */\n.inventory-table-container {\n  margin: 80px 15px 15px 15px;\n  padding: 1em;\n  background-color: #ffffff;\n  border: 1px solid #ccc;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  max-height: 850px;\n  overflow-y: auto;\n}\n\n/* Contenedor del título y la barra de búsqueda */\n.caption-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n\n.caption-title {\n  flex: 1;\n}\n\n.search-bar {\n  flex: 2;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.search-bar input {\n  flex: 1;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\n.add-button {\n  flex: 1;\n  text-align: right;\n}\n\n/* Estilos de la tabla */\ntable {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\ntable thead th {\n  background-color: #343a40;\n  color: #ffffff;\n  border-bottom: 2px solid #dee2e6;\n}\n\ntable tbody tr {\n  border-bottom: 1px solid #dee2e6;\n}\n\ntable td {\n  padding: 10px;\n  border-right: 1px solid #dee2e6;\n}\n\ntable td:last-child {\n  border-right: none;\n}\n\ntable tr:last-child td {\n  border-bottom: none;\n}\n\n.table-striped tbody tr:nth-of-type(odd) {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n/* Estilos para el modal */\n#cuentaModal .modal-body {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#cuentaModal .modal-body .d-flex {\n  width: 100%;\n}\n\n#cuentaModal .modal-body .mb-3 h5 {\n  margin-bottom: 0.5rem;\n}\n\n@media (max-width: 576px) {\n  #cuentaModal .modal-body .d-flex {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  #cuentaModal .modal-body .d-flex img {\n    margin-bottom: 1rem;\n  }\n}\n\n/* Ajustes para la barra de título y búsqueda en dispositivos móviles */\n@media (max-width: 768px) {\n  .caption-container {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .add-button {\n    margin-top: 10px;\n    justify-content: flex-start;\n  }\n}\n\n/* Ajustes específicos para dispositivos móviles */\n@media (max-width: 767px) {\n  .caption-container {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .add-button {\n    margin-top: 10px;\n    justify-content: flex-start;\n  }\n\n  .table thead {\n    display: none;\n  }\n\n  .table tbody, .table tr, .table td {\n    display: block;\n    width: 100%;\n  }\n\n  .table tr {\n    margin-bottom: 1rem;\n    border-bottom: 1px solid #dee2e6;\n  }\n\n  .table td {\n    text-align: right;\n    padding-left: 50%;\n    position: relative;\n  }\n\n  .table td::before {\n    content: attr(data-label);\n    position: absolute;\n    left: 0;\n    width: 50%;\n    padding-left: 1rem;\n    font-weight: bold;\n    text-align: left;\n  }\n}\n\n/* Estilos adicionales para la tabla de notificaciones */\n#page-content-wrapper .table {\n  margin-top: 80px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n}\n\n#page-content-wrapper .table th, #page-content-wrapper .table td {\n  border: none;\n  padding: 15px;\n}\n\n#page-content-wrapper .table th {\n  background-color: #ee7712;\n  color: #ecf0f1;\n}\n\n#page-content-wrapper .table tr:nth-child(odd) {\n  background-color: #f2f2f2;\n}\n\n#page-content-wrapper .table tr:hover {\n  background-color: #dcdcdc;\n}\n\n#page-content-wrapper .btn-primary {\n  background-color: #ee7712;\n  border: none;\n}\n\n#page-content-wrapper .btn-primary:hover {\n  background-color: #d3550c;\n}\n\n/* Estilos para el modal de notificaciones */\n#notificationModal .modal-header {\n  border-bottom: none;\n}\n\n#notificationModal .modal-header .btn-close {\n  background-color: transparent;\n}\n\n#notificationModal .modal-body p {\n  margin-bottom: 10px;\n}\n\n#notificationModal .modal-body ul {\n  padding-left: 20px;\n}\n\n#notificationModal .modal-footer {\n  border-top: none;\n}\n\n#notificationModal .btn-success {\n  background-color: #27ae60;\n  border: none;\n}\n\n#notificationModal .btn-danger {\n  background-color: #c0392b;\n  border: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Solicitado por            Estado            Acciones                                                {{ notification.solicitadaPor }}            {{ translateStatus(notification.status) }}            Ver solicitud                                                                                      Solicitado por: {{ selectedNotification?.solicitadaPor }}          Estado:  {{ translateStatus(selectedNotification?.status) }}          Producto original:                      Código: {{ selectedNotification?.productoOriginal?.code }}            Nombre: {{ selectedNotification?.productoOriginal?.name }}            Descripción: {{ selectedNotification?.productoOriginal?.description }}            Modelo: {{ selectedNotification?.productoOriginal?.model }}            Marca: {{ selectedNotification?.productoOriginal?.brand }}            Material: {{ selectedNotification?.productoOriginal?.material }}            Color: {{ selectedNotification?.productoOriginal?.color }}            Familia: {{ selectedNotification?.productoOriginal?.family }}            Valor: {{ selectedNotification?.productoOriginal?.value }}            Moneda: {{ selectedNotification?.productoOriginal?.currency }}            Unidad: {{ selectedNotification?.productoOriginal?.unit }}            Ubicación: {{ selectedNotification?.productoOriginal?.location }}                    Cambios solicitados:                      Nombre: {{ selectedNotification?.cambiosSolicitados?.name }}            Descripción: {{ selectedNotification?.cambiosSolicitados?.description }}            Modelo: {{ selectedNotification?.cambiosSolicitados?.model }}            Marca: {{ selectedNotification?.cambiosSolicitados?.brand }}            Material: {{ selectedNotification?.cambiosSolicitados?.material }}            Color: {{ selectedNotification?.cambiosSolicitados?.color }}            Familia: {{ selectedNotification?.cambiosSolicitados?.family }}            Valor: {{ selectedNotification?.cambiosSolicitados?.value }}            Moneda: {{ selectedNotification?.cambiosSolicitados?.currency }}            Unidad: {{ selectedNotification?.cambiosSolicitados?.unit }}            Ubicación: {{ selectedNotification?.cambiosSolicitados?.location }}                                    Aceptar          Rechazar                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificacionesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cambiosSolicitados\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            productoOriginal\n                                        \n                                \n                                \n                                        \n                                            solicitadaPor\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cambiosSolicitados\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cambiosSolicitados:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productoOriginal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productoOriginal:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solicitadaPor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        solicitadaPor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\ninterface Notification {\n  id: number;\n  status: string;\n  message: string;\n  solicitadaPor: string;\n  productoOriginal: any;\n  cambiosSolicitados: any;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private router: Router) {\n    this.createDefaultAdmin();\n  }\n\n  createDefaultAdmin() {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const adminUser = users.find((u: any) => u.email === 'admin@example.com');\n\n    if (!adminUser) {\n      const defaultAdmin = {\n        id: '1',\n        firstName: 'Admin',\n        lastName: 'User',\n        email: 'admin@example.com',\n        password: 'Admin12345',\n        role: 'Admin'\n      };\n      users.push(defaultAdmin);\n      localStorage.setItem('users', JSON.stringify(users));\n      console.log('Usuario administrador creado:', defaultAdmin);\n    }\n  }\n\n  login(email: string, password: string): boolean {\n    const users = JSON.parse(localStorage.getItem('users')!);\n    const user = users.find((u: any) => u.email === email && u.password === password);\n\n    if (user) {\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      if (user.role === 'Admin') {\n        this.router.navigate(['/admin-dashboard']);\n      } else if (user.role === 'Área') {\n        this.router.navigate(['/area-dashboard']);\n      } else if (user.role === 'Auditor') {\n        this.router.navigate(['/auditor-dashboard']);\n      } else if (user.role === 'Bodega') {\n        this.router.navigate(['/bodega-dashboard']);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  getUserRoles(): string[] {\n    const user = this.getCurrentUser();\n    return user ? user.roles : [];\n  }\n\n  logout(): void {\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['/login']);\n  }\n\n  isAuthenticated(): boolean {\n    return !!localStorage.getItem('currentUser');\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('currentUser')!);\n  }\n\n  isAdmin(): boolean {\n    const user = this.getCurrentUser();\n    return user && user.role === 'Admin';\n  }\n\n  isArea(): boolean {\n    const user = this.getCurrentUser();\n    return user && user.role === 'Área';\n  }\n\n  isAuditor(): boolean {\n    const user = this.getCurrentUser();\n    return user && user.role === 'Auditor';\n  }\n\n  isBodega(): boolean {\n    const user = this.getCurrentUser();\n    return user && user.role === 'Bodega';\n  }\n\n  isRoleAllowed(allowedRoles: string[]): boolean {\n    const user = this.getCurrentUser();\n    return user && allowedRoles.includes(user.role);\n  }\n\n  updateCurrentUser(user: any) {\n    localStorage.setItem('currentUser', JSON.stringify(user));\n  }\n\n  updateUserInList(updatedUser: any) {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const userIndex = users.findIndex((user: any) => user.id === updatedUser.id);\n    if (userIndex !== -1) {\n      users[userIndex] = updatedUser;\n      localStorage.setItem('users', JSON.stringify(users));\n    }\n  }\n\n  getNotifications(): Notification[] {\n    const storedNotifications = localStorage.getItem('notifications');\n    return storedNotifications ? JSON.parse(storedNotifications) : [];\n  }\n\n  updateNotificationStatus(notificationId: number, status: string) {\n    const notifications = this.getNotifications();\n    const notification = notifications.find(n => n.id === notificationId);\n    if (notification) {\n      notification.status = status;\n      localStorage.setItem('notifications', JSON.stringify(notifications));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification-1.html":{"url":"interfaces/Notification-1.html","title":"interface - Notification-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notificaciones/notificaciones.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cambiosSolicitados\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            productoOriginal\n                                        \n                                \n                                \n                                        \n                                            solicitadaPor\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cambiosSolicitados\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cambiosSolicitados:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productoOriginal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productoOriginal:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solicitadaPor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        solicitadaPor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product } from '../service/product.service';\nimport { NotificationService } from '../service/notificacion.service';\nimport { Modal } from 'bootstrap';\nimport { CommonModule } from '@angular/common';\n\ninterface Notification {\n  id: number;\n  status: string;\n  message: string;\n  solicitadaPor: string;\n  productoOriginal: Partial;\n  cambiosSolicitados: Partial;\n}\n\n@Component({\n  selector: 'app-notificaciones',\n  templateUrl: './notificaciones.component.html',\n  styleUrls: ['./notificaciones.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class NotificacionesComponent implements OnInit {\n  notifications: Notification[] = [];\n  selectedNotification: Notification | null = null;\n  isBodega: boolean = false;\n  pendingNotificationsCount: number = 0;\n\n  constructor(private authService: AuthService, private productService: ProductService, private notificationService: NotificationService) {}\n\n  ngOnInit(): void {\n    this.loadNotifications();\n    this.isBodega = this.authService.isBodega();\n  }\n\n  loadNotifications() {\n    this.notifications = this.productService.getNotifications();\n    this.updatePendingNotificationsCount();\n  }\n\n  updatePendingNotificationsCount() {\n    const count = this.notifications.filter(notification => notification.status === 'pending').length;\n    this.pendingNotificationsCount = count;\n    this.notificationService.setPendingCount(count);\n  }\n  \n  openModal(notification: Notification) {\n    this.selectedNotification = notification;\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = new Modal(modalElement);\n      modal.show();\n    }\n  }\n\n  acceptModification() {\n    if (this.selectedNotification) {\n      const productCode = this.selectedNotification.productoOriginal.code as string;\n      this.productService.updateProduct(productCode, this.selectedNotification.cambiosSolicitados);\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'accepted');\n      this.selectedNotification.status = 'accepted';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  rejectModification() {\n    if (this.selectedNotification) {\n      this.productService.updateNotificationStatus(this.selectedNotification.id, 'rejected');\n      this.selectedNotification.status = 'rejected';\n      this.saveNotifications();\n      this.closeModal();\n      this.updatePendingNotificationsCount();\n    }\n  }\n\n  saveNotifications() {\n    this.productService.updateNotifications(this.notifications);\n  }\n\n  hasChanged(field: keyof Product): boolean {\n    if (!this.selectedNotification) return false;\n    return this.selectedNotification.productoOriginal[field] !== this.selectedNotification.cambiosSolicitados[field];\n  }\n\n  closeModal() {\n    const modalElement = document.getElementById('notificationModal');\n    if (modalElement) {\n      const modal = Modal.getInstance(modalElement);\n      if (modal) {\n        modal.hide();\n      }\n    }\n  }\n\n  translateStatus(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'Pendiente';\n      case 'accepted':\n        return 'Aceptado';\n      case 'rejected':\n        return 'Rechazado';\n      default:\n        return '';\n    }\n  }\n\n  getStatusClass(status: string | undefined): string {\n    if (!status) return '';\n    switch (status) {\n      case 'pending':\n        return 'text-warning';\n      case 'accepted':\n        return 'text-success';\n      case 'rejected':\n        return 'text-danger';\n      default:\n        return '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification-2.html":{"url":"interfaces/Notification-2.html","title":"interface - Notification-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/product.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cambiosSolicitados\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            productoOriginal\n                                        \n                                \n                                \n                                        \n                                            solicitadaPor\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cambiosSolicitados\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cambiosSolicitados:         PartialProduct\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PartialProduct\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productoOriginal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productoOriginal:         PartialProduct\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PartialProduct\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solicitadaPor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        solicitadaPor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface Product {\n  code: string;\n  name: string;\n  description: string;\n  model: string;\n  brand: string;\n  material: string;\n  color: string;\n  family: string;\n  value: number;\n  currency: string;\n  unit: string;\n  location: string;\n  stock: number;\n  bodega: string;\n}\n\nexport interface Movimiento {\n  tipo: string;\n  numero: number;\n  fecha: string;\n  documento?: string;\n  detalles: string;\n  items: Array;\n  usuario: string;\n  bodegaOrigen?: string;\n  bodegaDestino?: string;\n}\n\nexport type PartialProduct = {\n  [P in keyof Product]?: Product[P];\n} & {\n  [key: string]: any;\n};\n\ninterface Notification {\n  id: number;\n  status: string;\n  message: string;\n  solicitadaPor: string;\n  productoOriginal: PartialProduct;\n  cambiosSolicitados: PartialProduct;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private productsSubject: BehaviorSubject = new BehaviorSubject(this.loadProductsFromLocalStorage());\n  products$ = this.productsSubject.asObservable();\n  private nextIngresoNumber: number = +localStorage.getItem('nextIngresoNumber')! || 1;\n  private nextSalidaNumber: number = +localStorage.getItem('nextSalidaNumber')! || 1;\n  private historial: Movimiento[] = JSON.parse(localStorage.getItem('historial')!) || [];\n  private historialSubject: BehaviorSubject = new BehaviorSubject(this.historial);\n  private notifications: Notification[] = JSON.parse(localStorage.getItem('notifications') || '[]');\n  private notificationsSubject: BehaviorSubject = new BehaviorSubject(this.notifications);\n  historial$ = this.historialSubject.asObservable();\n\n  constructor() {}\n\n  private loadProductsFromLocalStorage(): Product[] {\n    return JSON.parse(localStorage.getItem('products')!) || [];\n  }\n\n  private saveProductsToLocalStorage(products: Product[]): void {\n    localStorage.setItem('products', JSON.stringify(products));\n    this.productsSubject.next(products);\n  }\n\n  addProduct(product: Product) {\n    const currentProducts = this.productsSubject.getValue();\n    currentProducts.push(product);\n    this.saveProductsToLocalStorage(currentProducts);\n  }\n\n  deleteProduct(index: number) {\n    const currentProducts = this.productsSubject.getValue();\n    currentProducts.splice(index, 1);\n    this.saveProductsToLocalStorage(currentProducts);\n  }\n\n  updateProduct(code: string, updatedProduct: PartialProduct) {\n    const currentProducts = this.productsSubject.getValue();\n    const productIndex = currentProducts.findIndex(p => p.code === code);\n    if (productIndex !== -1) {\n      currentProducts[productIndex] = { ...currentProducts[productIndex], ...updatedProduct };\n      this.saveProductsToLocalStorage(currentProducts);\n    }\n  }\n\n  getNextIngresoNumber(): number {\n    return this.nextIngresoNumber;\n  }\n\n  getNextSalidaNumber(): number {\n    return this.nextSalidaNumber;\n  }\n\n  incrementNextIngresoNumber() {\n    this.nextIngresoNumber++;\n    this.saveNextIngresoNumber();\n  }\n\n  incrementNextSalidaNumber() {\n    this.nextSalidaNumber++;\n    this.saveNextSalidaNumber();\n  }\n\n  saveNextIngresoNumber() {\n    localStorage.setItem('nextIngresoNumber', this.nextIngresoNumber.toString());\n  }\n\n  saveNextSalidaNumber() {\n    localStorage.setItem('nextSalidaNumber', this.nextSalidaNumber.toString());\n  }\n\n  addMovimiento(movimiento: Movimiento) {\n    this.historial.push(movimiento);\n    this.updateHistorialLocalStorage();\n  }\n\n  private updateHistorialLocalStorage() {\n    localStorage.setItem('historial', JSON.stringify(this.historial));\n    this.historialSubject.next(this.historial);\n  }\n\n  // Notificaciones\n  addNotification(notification: Notification) {\n    this.notifications.push(notification);\n    this.saveNotificationsToLocalStorage();\n  }\n\n  getNotifications(): Notification[] {\n    return JSON.parse(localStorage.getItem('notifications') || '[]');\n  }\n\n  updateNotificationStatus(notificationId: number, status: string) {\n    const notificationIndex = this.notifications.findIndex(n => n.id === notificationId);\n    if (notificationIndex !== -1) {\n      this.notifications[notificationIndex].status = status;\n      this.saveNotificationsToLocalStorage();\n    }\n  }\n\n  private saveNotificationsToLocalStorage() {\n    localStorage.setItem('notifications', JSON.stringify(this.notifications));\n    this.notificationsSubject.next(this.notifications);\n  }\n\n  // Nuevo método para actualizar las notificaciones\n  updateNotifications(notifications: Notification[]) {\n    this.notifications = notifications;\n    this.saveNotificationsToLocalStorage();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/notificacion.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pendingCount\n                            \n                            \n                                pendingCount$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setPendingCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setPendingCount\n                        \n                    \n                \n            \n            \n                \nsetPendingCount(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/notificacion.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pendingCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/service/notificacion.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingCount$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.pendingCount.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/notificacion.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  private pendingCount = new BehaviorSubject(0);\n  pendingCount$ = this.pendingCount.asObservable();\n\n  setPendingCount(count: number) {\n    this.pendingCount.next(count);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/product.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bodega\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            family\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            material\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            stock\n                                        \n                                \n                                \n                                        \n                                            unit\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bodega\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bodega:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        material\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        material:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stock\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stock:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface Product {\n  code: string;\n  name: string;\n  description: string;\n  model: string;\n  brand: string;\n  material: string;\n  color: string;\n  family: string;\n  value: number;\n  currency: string;\n  unit: string;\n  location: string;\n  stock: number;\n  bodega: string;\n}\n\nexport interface Movimiento {\n  tipo: string;\n  numero: number;\n  fecha: string;\n  documento?: string;\n  detalles: string;\n  items: Array;\n  usuario: string;\n  bodegaOrigen?: string;\n  bodegaDestino?: string;\n}\n\nexport type PartialProduct = {\n  [P in keyof Product]?: Product[P];\n} & {\n  [key: string]: any;\n};\n\ninterface Notification {\n  id: number;\n  status: string;\n  message: string;\n  solicitadaPor: string;\n  productoOriginal: PartialProduct;\n  cambiosSolicitados: PartialProduct;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private productsSubject: BehaviorSubject = new BehaviorSubject(this.loadProductsFromLocalStorage());\n  products$ = this.productsSubject.asObservable();\n  private nextIngresoNumber: number = +localStorage.getItem('nextIngresoNumber')! || 1;\n  private nextSalidaNumber: number = +localStorage.getItem('nextSalidaNumber')! || 1;\n  private historial: Movimiento[] = JSON.parse(localStorage.getItem('historial')!) || [];\n  private historialSubject: BehaviorSubject = new BehaviorSubject(this.historial);\n  private notifications: Notification[] = JSON.parse(localStorage.getItem('notifications') || '[]');\n  private notificationsSubject: BehaviorSubject = new BehaviorSubject(this.notifications);\n  historial$ = this.historialSubject.asObservable();\n\n  constructor() {}\n\n  private loadProductsFromLocalStorage(): Product[] {\n    return JSON.parse(localStorage.getItem('products')!) || [];\n  }\n\n  private saveProductsToLocalStorage(products: Product[]): void {\n    localStorage.setItem('products', JSON.stringify(products));\n    this.productsSubject.next(products);\n  }\n\n  addProduct(product: Product) {\n    const currentProducts = this.productsSubject.getValue();\n    currentProducts.push(product);\n    this.saveProductsToLocalStorage(currentProducts);\n  }\n\n  deleteProduct(index: number) {\n    const currentProducts = this.productsSubject.getValue();\n    currentProducts.splice(index, 1);\n    this.saveProductsToLocalStorage(currentProducts);\n  }\n\n  updateProduct(code: string, updatedProduct: PartialProduct) {\n    const currentProducts = this.productsSubject.getValue();\n    const productIndex = currentProducts.findIndex(p => p.code === code);\n    if (productIndex !== -1) {\n      currentProducts[productIndex] = { ...currentProducts[productIndex], ...updatedProduct };\n      this.saveProductsToLocalStorage(currentProducts);\n    }\n  }\n\n  getNextIngresoNumber(): number {\n    return this.nextIngresoNumber;\n  }\n\n  getNextSalidaNumber(): number {\n    return this.nextSalidaNumber;\n  }\n\n  incrementNextIngresoNumber() {\n    this.nextIngresoNumber++;\n    this.saveNextIngresoNumber();\n  }\n\n  incrementNextSalidaNumber() {\n    this.nextSalidaNumber++;\n    this.saveNextSalidaNumber();\n  }\n\n  saveNextIngresoNumber() {\n    localStorage.setItem('nextIngresoNumber', this.nextIngresoNumber.toString());\n  }\n\n  saveNextSalidaNumber() {\n    localStorage.setItem('nextSalidaNumber', this.nextSalidaNumber.toString());\n  }\n\n  addMovimiento(movimiento: Movimiento) {\n    this.historial.push(movimiento);\n    this.updateHistorialLocalStorage();\n  }\n\n  private updateHistorialLocalStorage() {\n    localStorage.setItem('historial', JSON.stringify(this.historial));\n    this.historialSubject.next(this.historial);\n  }\n\n  // Notificaciones\n  addNotification(notification: Notification) {\n    this.notifications.push(notification);\n    this.saveNotificationsToLocalStorage();\n  }\n\n  getNotifications(): Notification[] {\n    return JSON.parse(localStorage.getItem('notifications') || '[]');\n  }\n\n  updateNotificationStatus(notificationId: number, status: string) {\n    const notificationIndex = this.notifications.findIndex(n => n.id === notificationId);\n    if (notificationIndex !== -1) {\n      this.notifications[notificationIndex].status = status;\n      this.saveNotificationsToLocalStorage();\n    }\n  }\n\n  private saveNotificationsToLocalStorage() {\n    localStorage.setItem('notifications', JSON.stringify(this.notifications));\n    this.notificationsSubject.next(this.notifications);\n  }\n\n  // Nuevo método para actualizar las notificaciones\n  updateNotifications(notifications: Notification[]) {\n    this.notifications = notifications;\n    this.saveNotificationsToLocalStorage();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                historial\n                            \n                            \n                                historial$\n                            \n                            \n                                    Private\n                                historialSubject\n                            \n                            \n                                    Private\n                                nextIngresoNumber\n                            \n                            \n                                    Private\n                                nextSalidaNumber\n                            \n                            \n                                    Private\n                                notifications\n                            \n                            \n                                    Private\n                                notificationsSubject\n                            \n                            \n                                products$\n                            \n                            \n                                    Private\n                                productsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMovimiento\n                            \n                            \n                                addNotification\n                            \n                            \n                                addProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                getNextIngresoNumber\n                            \n                            \n                                getNextSalidaNumber\n                            \n                            \n                                getNotifications\n                            \n                            \n                                incrementNextIngresoNumber\n                            \n                            \n                                incrementNextSalidaNumber\n                            \n                            \n                                    Private\n                                loadProductsFromLocalStorage\n                            \n                            \n                                saveNextIngresoNumber\n                            \n                            \n                                saveNextSalidaNumber\n                            \n                            \n                                    Private\n                                saveNotificationsToLocalStorage\n                            \n                            \n                                    Private\n                                saveProductsToLocalStorage\n                            \n                            \n                                    Private\n                                updateHistorialLocalStorage\n                            \n                            \n                                updateNotifications\n                            \n                            \n                                updateNotificationStatus\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/product.service.ts:65\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMovimiento\n                        \n                    \n                \n            \n            \n                \naddMovimiento(movimiento: Movimiento)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                movimiento\n                                            \n                                                            Movimiento\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addNotification\n                        \n                    \n                \n            \n            \n                \naddNotification(notification: Notification)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notification\n                                            \n                                                            Notification\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProduct\n                        \n                    \n                \n            \n            \n                \naddProduct(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNextIngresoNumber\n                        \n                    \n                \n            \n            \n                \ngetNextIngresoNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNextSalidaNumber\n                        \n                    \n                \n            \n            \n                \ngetNextSalidaNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotifications\n                        \n                    \n                \n            \n            \n                \ngetNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Notification[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementNextIngresoNumber\n                        \n                    \n                \n            \n            \n                \nincrementNextIngresoNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementNextSalidaNumber\n                        \n                    \n                \n            \n            \n                \nincrementNextSalidaNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadProductsFromLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProductsFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Product[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveNextIngresoNumber\n                        \n                    \n                \n            \n            \n                \nsaveNextIngresoNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveNextSalidaNumber\n                        \n                    \n                \n            \n            \n                \nsaveNextSalidaNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveNotificationsToLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveNotificationsToLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveProductsToLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveProductsToLocalStorage(products: Product[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                products\n                                            \n                                                            Product[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateHistorialLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateHistorialLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNotifications\n                        \n                    \n                \n            \n            \n                \nupdateNotifications(notifications: Notification[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notifications\n                                            \n                                                        Notification[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNotificationStatus\n                        \n                    \n                \n            \n            \n                \nupdateNotificationStatus(notificationId: number, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notificationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(code: string, updatedProduct: PartialProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedProduct\n                                            \n                                                            PartialProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        historial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Movimiento[]\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(localStorage.getItem('historial')!) || []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        historial$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.historialSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        historialSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.historial)\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextIngresoNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : +localStorage.getItem('nextIngresoNumber')! || 1\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextSalidaNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : +localStorage.getItem('nextSalidaNumber')! || 1\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Notification[]\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(localStorage.getItem('notifications') || '[]')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notificationsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.notifications)\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.productsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        productsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.loadProductsFromLocalStorage())\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:57\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface Product {\n  code: string;\n  name: string;\n  description: string;\n  model: string;\n  brand: string;\n  material: string;\n  color: string;\n  family: string;\n  value: number;\n  currency: string;\n  unit: string;\n  location: string;\n  stock: number;\n  bodega: string;\n}\n\nexport interface Movimiento {\n  tipo: string;\n  numero: number;\n  fecha: string;\n  documento?: string;\n  detalles: string;\n  items: Array;\n  usuario: string;\n  bodegaOrigen?: string;\n  bodegaDestino?: string;\n}\n\nexport type PartialProduct = {\n  [P in keyof Product]?: Product[P];\n} & {\n  [key: string]: any;\n};\n\ninterface Notification {\n  id: number;\n  status: string;\n  message: string;\n  solicitadaPor: string;\n  productoOriginal: PartialProduct;\n  cambiosSolicitados: PartialProduct;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private productsSubject: BehaviorSubject = new BehaviorSubject(this.loadProductsFromLocalStorage());\n  products$ = this.productsSubject.asObservable();\n  private nextIngresoNumber: number = +localStorage.getItem('nextIngresoNumber')! || 1;\n  private nextSalidaNumber: number = +localStorage.getItem('nextSalidaNumber')! || 1;\n  private historial: Movimiento[] = JSON.parse(localStorage.getItem('historial')!) || [];\n  private historialSubject: BehaviorSubject = new BehaviorSubject(this.historial);\n  private notifications: Notification[] = JSON.parse(localStorage.getItem('notifications') || '[]');\n  private notificationsSubject: BehaviorSubject = new BehaviorSubject(this.notifications);\n  historial$ = this.historialSubject.asObservable();\n\n  constructor() {}\n\n  private loadProductsFromLocalStorage(): Product[] {\n    return JSON.parse(localStorage.getItem('products')!) || [];\n  }\n\n  private saveProductsToLocalStorage(products: Product[]): void {\n    localStorage.setItem('products', JSON.stringify(products));\n    this.productsSubject.next(products);\n  }\n\n  addProduct(product: Product) {\n    const currentProducts = this.productsSubject.getValue();\n    currentProducts.push(product);\n    this.saveProductsToLocalStorage(currentProducts);\n  }\n\n  deleteProduct(index: number) {\n    const currentProducts = this.productsSubject.getValue();\n    currentProducts.splice(index, 1);\n    this.saveProductsToLocalStorage(currentProducts);\n  }\n\n  updateProduct(code: string, updatedProduct: PartialProduct) {\n    const currentProducts = this.productsSubject.getValue();\n    const productIndex = currentProducts.findIndex(p => p.code === code);\n    if (productIndex !== -1) {\n      currentProducts[productIndex] = { ...currentProducts[productIndex], ...updatedProduct };\n      this.saveProductsToLocalStorage(currentProducts);\n    }\n  }\n\n  getNextIngresoNumber(): number {\n    return this.nextIngresoNumber;\n  }\n\n  getNextSalidaNumber(): number {\n    return this.nextSalidaNumber;\n  }\n\n  incrementNextIngresoNumber() {\n    this.nextIngresoNumber++;\n    this.saveNextIngresoNumber();\n  }\n\n  incrementNextSalidaNumber() {\n    this.nextSalidaNumber++;\n    this.saveNextSalidaNumber();\n  }\n\n  saveNextIngresoNumber() {\n    localStorage.setItem('nextIngresoNumber', this.nextIngresoNumber.toString());\n  }\n\n  saveNextSalidaNumber() {\n    localStorage.setItem('nextSalidaNumber', this.nextSalidaNumber.toString());\n  }\n\n  addMovimiento(movimiento: Movimiento) {\n    this.historial.push(movimiento);\n    this.updateHistorialLocalStorage();\n  }\n\n  private updateHistorialLocalStorage() {\n    localStorage.setItem('historial', JSON.stringify(this.historial));\n    this.historialSubject.next(this.historial);\n  }\n\n  // Notificaciones\n  addNotification(notification: Notification) {\n    this.notifications.push(notification);\n    this.saveNotificationsToLocalStorage();\n  }\n\n  getNotifications(): Notification[] {\n    return JSON.parse(localStorage.getItem('notifications') || '[]');\n  }\n\n  updateNotificationStatus(notificationId: number, status: string) {\n    const notificationIndex = this.notifications.findIndex(n => n.id === notificationId);\n    if (notificationIndex !== -1) {\n      this.notifications[notificationIndex].status = status;\n      this.saveNotificationsToLocalStorage();\n    }\n  }\n\n  private saveNotificationsToLocalStorage() {\n    localStorage.setItem('notifications', JSON.stringify(this.notifications));\n    this.notificationsSubject.next(this.notifications);\n  }\n\n  // Nuevo método para actualizar las notificaciones\n  updateNotifications(notifications: Notification[]) {\n    this.notifications = notifications;\n    this.saveNotificationsToLocalStorage();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dashboard.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\nimport { ProductService, Product, Movimiento } from '../service/product.service';\nimport * as bootstrap from 'bootstrap';\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  role: string;\n  password: string;\n}\n\ninterface Bodega {\n  name: string;\n  products: Product[];\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [FormsModule, CommonModule]\n})\nexport class DashboardComponent implements OnInit {\n  products: Product[] = [];\n  allProducts: Product[] = [];\n  filteredProducts: Product[] = [];\n  historial: Movimiento[] = [];\n  selectedProductIndexToDelete: number = -1;\n  selectedProductIndexToEdit: number = -1;\n  selectedProduct: Product | null = null;\n  selectedProductSalida: Product | null = null;\n  bodegas: Bodega[] = [];\n  selectedBodega: Bodega = { name: 'Bodega Principal', products: [] };\n  newBodegaName: string = '';\n  searchProductTerm: string = '';\n  newProduct: Product = {\n    code: '',\n    name: '',\n    description: '',\n    model: '',\n    brand: '',\n    material: '',\n    color: '',\n    family: '',\n    value: 0,\n    currency: '',\n    unit: '',\n    location: '',\n    stock: 0,\n    bodega: 'Bodega Principal'\n  };\n  ingresoItems: any[] = [];\n  salidaItems: any[] = [];\n  cantidadIngreso: number = 1;\n  cantidadSalida: number = 1;\n  tipoDocumento: string = '';\n\nnumeroDocumento: string = '';\nmotivoSalida: string = '';\nregistroNumeroIngreso: number = 0;\nregistroNumeroSalida: number = 0;\ntoday: string = '';\nselectedMovimiento: Movimiento | null = null; // Ajuste en el tipo\nselectedProductToEdit: Product = {\n  code: '',\n  name: '',\n  description: '',\n  model: '',\n  brand: '',\n  material: '',\n  color: '',\n  family: '',\n  value: 0,\n  currency: '',\n  unit: '',\n  location: '',\n  stock: 0,\n  bodega: 'Bodega Principal'\n};\n\nproductToDelete: Product | null = null;\nproductCodeExists: boolean = false;\n\nnewUser: User = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\nrepeatPassword: string = '';\nregisterError: string = '';\nregisterSuccess: string = '';\nusers: User[] = [];\nfilteredUsers: User[] = [];\nsearchUserTerm: string = '';\nselectedUser: User = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n\ntrasladoItems: any[] = [];\nselectedBodegaOrigen: Bodega | null = null;\nselectedBodegaDestino: Bodega | null = null;\nselectedProductTraslado: Product | null = null;\n\nconstructor(private productService: ProductService, private authService: AuthService) {}\n\nngOnInit(): void {\n  this.productService.products$.subscribe(products => {\n    this.products = products;\n    this.filteredProducts = this.selectedBodega.products;\n  });\n  this.productService.historial$.subscribe(historial => this.historial = historial);\n  this.today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\n  this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n  this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n  this.loadUsers();\n  this.loadBodegas();\n  this.loadAllProducts();\n\n  if (this.bodegas.length === 0) {\n    this.bodegas.push({ name: 'Bodega Principal', products: [] });\n    this.selectedBodega = this.bodegas[0];\n    this.saveBodegas();\n  } else {\n    this.selectedBodega = this.bodegas[0];\n  }\n  this.filteredProducts = this.selectedBodega.products;\n  this.selectedBodegaOrigen = this.bodegas.length > 0 ? this.bodegas[0] : null;\n  this.selectedBodegaDestino = this.bodegas.length > 0 ? this.bodegas[1] : null;\n}\n\nnormalizeCode(code: string): string {\n  return code.trim().toUpperCase();\n}\n\nproductExists(code: string): boolean {\n  const normalizedCode = this.normalizeCode(code);\n  return this.selectedBodega.products.some(product => this.normalizeCode(product.code) === normalizedCode);\n}\n\ntoUpperCase(event: Event): void {\n  const input = event.target as HTMLInputElement;\n  input.value = input.value.toUpperCase();\n}\n\ncheckProductCode() {\n  this.productCodeExists = this.productExists(this.newProduct.code);\n}\n\nonRegister(form: NgForm) {\n  if (form.valid) {\n    if (this.newUser.password !== this.repeatPassword) {\n      this.registerError = 'Las contraseñas no coinciden.';\n      return;\n    }\n\n    const existingUser = this.users.find(user => user.email === this.newUser.email);\n    if (existingUser) {\n      this.registerError = 'El usuario ya existe. Por favor, intente con otro email.';\n      this.registerSuccess = '';\n      return;\n    }\n\n    this.users.push({ ...this.newUser });\n    localStorage.setItem('users', JSON.stringify(this.users));\n    this.registerSuccess = 'Usuario registrado exitosamente.';\n    this.registerError = '';\n    this.loadUsers();\n    form.resetForm();\n    const userModal = bootstrap.Modal.getInstance(document.getElementById('userModal')!);\n    userModal?.hide();\n  }\n}\n\nloadUsers() {\n  const users = JSON.parse(localStorage.getItem('users') || '[]');\n  this.users = users;\n  this.filteredUsers = users;\n}\n\nonSearchUser() {\n  if (this.searchUserTerm) {\n    this.filteredUsers = this.users.filter(user =>\n      user.firstName.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n      user.lastName.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n      user.email.toLowerCase().includes(this.searchUserTerm.toLowerCase()) ||\n      user.role.toLowerCase().includes(this.searchUserTerm.toLowerCase())\n    );\n  } else {\n    this.filteredUsers = this.users;\n  }\n}\n\n// Métodos de productos deben mantenerse separados\nonSearchProduct(event: any) {\n  this.searchProductTerm = event.target.value.toLowerCase();\n  if (this.searchProductTerm) {\n    this.filteredProducts = this.selectedBodega.products.filter(product =>\n      product.code.toLowerCase().includes(this.searchProductTerm) ||\n      product.description.toLowerCase().includes(this.searchProductTerm) ||\n      product.name.toLowerCase().includes(this.searchProductTerm)\n    );\n  } else {\n    this.filteredProducts = this.selectedBodega.products;\n  }\n}\n\nopenUserModal() {\n  const userModal = new bootstrap.Modal(document.getElementById('userModal')!);\n  userModal.show();\n}\n\nonSaveUser(form: NgForm) {\n  form.form.markAllAsTouched();\n  if (form.valid) {\n    if (this.newUser.password !== this.repeatPassword) {\n      this.registerError = 'Las claves no coinciden.';\n      return;\n    }\n\n    const existingUser = this.users.find(user => user.email === this.newUser.email);\n    if (existingUser) {\n      this.registerError = 'El usuario ya existe. Por favor, intente con otro correo.';\n      this.registerSuccess = '';\n      return;\n    }\n\n    this.users.push({ ...this.newUser });\n    localStorage.setItem('users', JSON.stringify(this.users));\n    this.registerSuccess = 'Usuario registrado exitosamente.';\n    this.registerError = '';\n    this.loadUsers(); // Recargar la lista de usuarios\n    this.resetForm(form, 'user'); // Resetear el formulario\n  } else {\n    this.registerError = 'Por favor complete todos los campos correctamente.';\n    const formElement = document.querySelector('form.needs-validation-user');\n    if (formElement) {\n      formElement.classList.add('was-validated');\n    }\n  }\n}\n\nviewUser(user: User) {\n  this.selectedUser = user;\n  const userInfoModal = new bootstrap.Modal(document.getElementById('userInfoModal')!);\n  userInfoModal.show();\n}\n\neditUser(user: User) {\n  this.selectedUser = { ...user };\n  const editUserModal = new bootstrap.Modal(document.getElementById('editUserModal')!);\n  editUserModal.show();\n}\n\nonSaveEditUser(form: NgForm) {\n  if (form.valid) {\n    const index = this.users.findIndex(u => u.id === this.selectedUser.id);\n    if (index !== -1) {\n      this.users[index] = { ...this.selectedUser };\n      localStorage.setItem('users', JSON.stringify(this.users));\n      this.loadUsers();\n      const editUserModal = bootstrap.Modal.getInstance(document.getElementById('editUserModal')!);\n      editUserModal?.hide();\n    }\n  }\n}\n\ndeleteUser(user: User) {\n  this.selectedUser = user;\n  const confirmDeleteUserModal = new bootstrap.Modal(document.getElementById('confirmDeleteUserModal')!);\n  confirmDeleteUserModal.show();\n}\n\nonConfirmDeleteUser() {\n  const index = this.users.findIndex(u => u.id === this.selectedUser.id);\n  if (index > -1) {\n    this.users.splice(index, 1);\n    localStorage.setItem('users', JSON.stringify(this.users));\n    this.loadUsers();\n    const confirmDeleteUserModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteUserModal')!);\n    confirmDeleteUserModal?.hide();\n  }\n}\n\ntogglePasswordVisibility() {\n  const passwordField = document.getElementById('editPassword') as HTMLInputElement;\n  if (passwordField.type === 'password') {\n    passwordField.type = 'text';\n  } else {\n    passwordField.type = 'password';\n  }\n}\n\nonDeleteProduct(index: number) {\n  this.selectedProductIndexToDelete = index;\n  this.productToDelete = this.selectedBodega.products[index];\n  const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal')!);\n  confirmDeleteModal.show();\n}\n\nonConfirmDelete() {\n  if (this.selectedProductIndexToDelete !== -1) {\n    this.selectedBodega.products.splice(this.selectedProductIndexToDelete, 1);\n    this.saveBodegas();\n    this.selectedProductIndexToDelete = -1;\n    this.productToDelete = null;\n    const confirmDeleteModal = bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')!);\n    confirmDeleteModal?.hide();\n  }\n}\n\nonUpdateProduct(index: number, product: Product) {\n  this.selectedBodega.products[index] = product;\n  this.saveBodegas();\n}\n\nonViewProductInfo(index: number) {\n  this.selectedProduct = this.selectedBodega.products[index];\n  const productInfoModal = new bootstrap.Modal(document.getElementById('productInfoModal')!);\n  productInfoModal.show();\n}\n\nonEditProduct(index: number) {\n  this.selectedProductIndexToEdit = index;\n  this.selectedProductToEdit = { ...this.selectedBodega.products[index] };\n  const editProductModal = new bootstrap.Modal(document.getElementById('editProductModal')!);\n  editProductModal.show();\n}\n\nloadBodegas() {\n  const bodegas = localStorage.getItem('bodegas');\n  if (bodegas) {\n    this.bodegas = JSON.parse(bodegas);\n  } else {\n    this.bodegas = [];\n  }\n} \n\nsaveBodegas() {\n  localStorage.setItem('bodegas', JSON.stringify(this.bodegas));\n}\n\nloadAllProducts() {\n  this.allProducts = this.bodegas.reduce((acc: Product[], bodega: Bodega) => {\n    return acc.concat(bodega.products);\n  }, []);\n}\n\nselectBodega(bodega: Bodega) {\n  this.selectedBodega = bodega;\n  this.filteredProducts = bodega.products;\n}\n\nonSaveEditProduct() {\n  if (this.selectedProductToEdit && this.selectedProductIndexToEdit !== -1) {\n    this.selectedProductToEdit.bodega = this.selectedBodega.name; // Corregido aquí\n    this.selectedBodega.products[this.selectedProductIndexToEdit] = this.selectedProductToEdit;\n    this.saveBodegas();\n    this.selectedProductToEdit = {\n      code: '',\n      name: '',\n      description: '',\n      model: '',\n      brand: '',\n      material: '',\n      color: '',\n      family: '',\n      value: 0,\n      currency: '',\n      unit: '',\n      location: '',\n      stock: 0,\n      bodega: 'Bodega Principal'\n    };\n    this.selectedProductIndexToEdit = -1;\n    const editProductModal = bootstrap.Modal.getInstance(document.getElementById('editProductModal')!);\n    editProductModal?.hide();\n  }\n}\n\nonAddProduct(form: NgForm) {\n  form.form.markAllAsTouched();\n  if (form.valid) {\n    if (!this.productExists(this.newProduct.code)) {\n      this.newProduct.code = this.normalizeCode(this.newProduct.code);\n      const targetBodega = this.bodegas.find(b => b.name === this.newProduct.bodega);\n      if (targetBodega) {\n        targetBodega.products.push(this.newProduct);\n        this.saveBodegas();\n      }\n      form.resetForm();\n      this.newProduct = {\n        code: '',\n        name: '',\n        description: '',\n        model: '',\n        brand: '',\n        material: '',\n        color: '',\n        family: '',\n        value: 0,\n        currency: '',\n        unit: '',\n        location: '',\n        stock: 0,\n        bodega: 'Bodega Principal'\n      };\n      const formElement = document.querySelector('form.needs-validation-product');\n      if (formElement) {\n        formElement.classList.remove('was-validated');\n      }\n      this.loadAllProducts(); // Recargar todos los productos después de agregar uno nuevo\n    } else {\n      alert('El código del producto ya existe. Por favor, ingrese un código diferente.');\n    }\n  } else {\n    const formElement = document.querySelector('form.needs-validation-product');\n    if (formElement) {\n      formElement.classList.add('was-validated');\n    }\n  }\n}\n\naddBodega(form: NgForm) {\n  if (this.newBodegaName) {\n    this.bodegas.push({ name: this.newBodegaName, products: [] });\n    this.newBodegaName = '';\n    this.saveBodegas();\n    const addBodegaModal = bootstrap.Modal.getInstance(document.getElementById('addBodegaModal')!);\n    addBodegaModal?.hide();\n  }\n}  \n\nresetForm(form: NgForm, type: 'user' | 'product') {\n  form.resetForm();\n  if (type === 'user') {\n    this.newUser = { id: '', firstName: '', lastName: '', email: '', password: '', role: 'User' };\n    this.repeatPassword = '';\n    this.registerError = '';\n    this.registerSuccess = '';\n  } else if (type === 'product') {\n    this.newProduct = {\n      code: '',\n      name: '',\n      description: '',\n      model: '',\n      brand: '',\n      material: '',\n      color: '',\n      family: '',\n      value: 0,\n      currency: '',\n      unit: '',\n      location: '',\n      stock: 0,\n      bodega: 'Bodega Principal'\n    };\n    this.productCodeExists = false;\n  }\n  const formElement = document.querySelector(`form.needs-validation-${type}`);\n  if (formElement) {\n    formElement.classList.remove('was-validated');\n  }\n}\n\nonAddProductoToIngreso() {\n  if (!this.selectedProduct) {\n    alert('Por favor, seleccione un producto.');\n    return;\n  }\n\n  const existingItem = this.ingresoItems.find(item => item.product.code === this.selectedProduct!.code);\n  if (existingItem) {\n    alert('El producto ya se encuentra en la tabla.');\n    return;\n  }\n\n  this.ingresoItems.push({\n    product: this.selectedProduct,\n    cantidad: this.cantidadIngreso\n  });\n  this.cantidadIngreso = 1;\n}\n\nonEliminarItem(index: number) {\n  this.ingresoItems.splice(index, 1);\n}\n\nonConfirmarIngreso() {\n  this.ingresoItems.forEach(item => {\n    const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n    if (product) {\n      product.stock += item.cantidad;\n      this.productService.updateProduct(product.code, product);\n      this.productService.addMovimiento({\n        tipo: 'Ingreso',\n        numero: this.registroNumeroIngreso,\n        fecha: this.today,\n        detalles: `Ingreso de ${item.cantidad} unidades de ${product.name}`,\n        items: this.ingresoItems.map(i => ({\n          code: i.product.code,\n          name: i.product.name,\n          description: i.product.description,\n          cantidad: i.cantidad\n        })),\n        usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n      });\n    }\n  });\n  this.ingresoItems = [];\n  this.productService.incrementNextIngresoNumber();\n  this.registroNumeroIngreso = this.productService.getNextIngresoNumber();\n  this.saveBodegas();\n\n  const ingresoBodegaModalElement = document.getElementById('ingresoBodegaModal');\n  if (ingresoBodegaModalElement) {\n      const ingresoBodegaModal = bootstrap.Modal.getInstance(ingresoBodegaModalElement);\n      if (ingresoBodegaModal) {\n          ingresoBodegaModal.hide();\n          setTimeout(() => ingresoBodegaModal.dispose(), 500);\n      }\n  }\n}\n\nopenAddBodegaModal() {\n  const addBodegaModal = new bootstrap.Modal(document.getElementById('addBodegaModal')!);\n  addBodegaModal.show();\n}  \n\nonAddProductoToSalida() {\n  if (!this.selectedProductSalida) {\n    alert('Por favor, seleccione un producto.');\n    return;\n  }\n\n  const existingItem = this.salidaItems.find(item => item.product.code === this.selectedProductSalida!.code);\n  if (existingItem) {\n    alert('El producto ya se encuentra en la tabla.');\n    return;\n  }\n\n  this.salidaItems.push({\n    product: this.selectedProductSalida,\n    cantidad: this.cantidadSalida,\n    tipoDocumento: this.tipoDocumento,\n    numeroDocumento: this.numeroDocumento\n  });\n  this.cantidadSalida = 1;\n}\n\nonConfirmarSalida() {\n  this.salidaItems.forEach(item => {\n    const product = this.selectedBodega.products.find(p => p.code === item.product.code);\n    if (product) {\n      if (product.stock >= item.cantidad) {\n        product.stock -= item.cantidad;\n        this.productService.updateProduct(product.code, product);\n        this.productService.addMovimiento({\n          tipo: 'Salida',\n          numero: this.registroNumeroSalida,\n          fecha: this.today,\n          documento: `${item.tipoDocumento} ${item.numeroDocumento}`,\n          detalles: this.motivoSalida,\n          items: [{\n            code: item.product.code,\n            name: item.product.name,\n            description: item.product.description,\n            cantidad: item.cantidad\n          }],\n          usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n        });\n      } else {\n        alert(`La cantidad a retirar supera el stock disponible de ${product.name}.`);\n      }\n    }\n  });\n  this.salidaItems = [];\n  this.productService.incrementNextSalidaNumber();\n  this.registroNumeroSalida = this.productService.getNextSalidaNumber();\n  this.saveBodegas();\n\n  const salidaBodegaModalElement = document.getElementById('salidaBodegaModal');\n  if (salidaBodegaModalElement) {\n      const salidaBodegaModal = bootstrap.Modal.getInstance(salidaBodegaModalElement);\n      if (salidaBodegaModal) {\n          salidaBodegaModal.hide();\n          setTimeout(() => salidaBodegaModal.dispose(), 500);\n      }\n  }\n}  \n\nonEliminarItemSalida(index: number): void {\n  this.salidaItems.splice(index, 1);\n}\n\nonAbrirHistorial(): void {\n  const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n  detalleHistorialModal.show();\n}\n\nonVerDetallesMovimiento(movimiento: Movimiento) {\n  this.selectedMovimiento = movimiento;\n  const detalleMovimientoModal = new bootstrap.Modal(document.getElementById('detalleMovimientoModal')!);\n  detalleMovimientoModal.show();\n  const detalleHistorialModal = bootstrap.Modal.getInstance(document.getElementById('detalleHistorialModal')!);\n  detalleHistorialModal?.hide();\n}\n\nonVolverHistorial(): void {\n  const detalleMovimientoModal = bootstrap.Modal.getInstance(document.getElementById('detalleMovimientoModal')!);\n  detalleMovimientoModal?.hide();\n  const detalleHistorialModal = new bootstrap.Modal(document.getElementById('detalleHistorialModal')!);\n  detalleHistorialModal.show();\n}\n\nonAddProductoToTraslado() {\n  if (!this.selectedProductTraslado) {\n    alert('Por favor, seleccione un producto.');\n    return;\n  }\n\n  const existingItem = this.trasladoItems.find(item => item.product.code === this.selectedProductTraslado!.code);\n  if (existingItem) {\n    alert('El producto ya se encuentra en la tabla.');\n    return;\n  }\n\n  this.trasladoItems.push({\n    product: this.selectedProductTraslado,\n  });\n  this.selectedProductTraslado = null;\n}\n\nonEliminarItemTraslado(index: number) {\n  this.trasladoItems.splice(index, 1);\n}\n\nonConfirmarTraslado() {\n  if (!this.selectedBodegaOrigen || !this.selectedBodegaDestino || this.selectedBodegaOrigen === this.selectedBodegaDestino) {\n    alert('Seleccione bodegas válidas.');\n    return;\n  }\n\n  this.trasladoItems.forEach(item => {\n    const productInOrigen = this.selectedBodegaOrigen!.products.find(p => p.code === item.product.code);\n    if (productInOrigen) {\n      const productInDestino = this.selectedBodegaDestino!.products.find(p => p.code === item.product.code);\n      if (productInDestino) {\n        productInDestino.stock += productInOrigen.stock;\n      } else {\n        this.selectedBodegaDestino!.products.push({\n          ...item.product,\n          stock: productInOrigen.stock\n        });\n      }\n      productInOrigen.stock = 0;\n    }\n  });\n\n  this.selectedBodegaOrigen!.products = this.selectedBodegaOrigen!.products.filter(product => product.stock > 0);\n\n  this.productService.addMovimiento({\n    tipo: 'Traslado',\n    numero: this.productService.getNextSalidaNumber(),\n    fecha: this.today,\n    detalles: `Traslado de productos de ${this.selectedBodegaOrigen.name} a ${this.selectedBodegaDestino.name}`,\n    bodegaOrigen: this.selectedBodegaOrigen.name,\n    bodegaDestino: this.selectedBodegaDestino.name,\n    items: this.trasladoItems.map(item => ({\n      code: item.product.code,\n      name: item.product.name,\n      description: item.product.description,\n      cantidad: item.product.stock\n    })),\n    usuario: `${this.authService.getCurrentUser().firstName} ${this.authService.getCurrentUser().lastName}`\n  });\n\n  this.saveBodegas();\n  this.trasladoItems = [];\n  this.selectedBodegaOrigen = null;\n  this.selectedBodegaDestino = null;\n\n  const trasladoBodegaModalElement = document.getElementById('trasladoBodegaModal');\n  if (trasladoBodegaModalElement) {\n    const trasladoBodegaModal = bootstrap.Modal.getInstance(trasladoBodegaModalElement);\n    if (trasladoBodegaModal) {\n      trasladoBodegaModal.hide();\n      setTimeout(() => trasladoBodegaModal.dispose(), 500);\n    }\n  }\n}  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-1.html":{"url":"interfaces/User-1.html","title":"interface - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-profile-component/user-profile-component.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            profilePicture\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profilePicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePicture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  role: string;\n  password: string;\n  birthday?: string;\n  address?: string;\n  profilePicture?: string;\n}\n\n@Component({\n  selector: 'app-user-profile-component',\n  standalone: true,\n  templateUrl: './user-profile-component.component.html',\n  styleUrl: './user-profile-component.component.css',\n  imports: [FormsModule, CommonModule]\n})\n\nexport class UserProfileComponent implements OnInit {\n  user: User = {\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: '',\n    password: ''\n  };\n  editMode: boolean = false;\n  profilePicturePreview: string = '';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.loadUserData();\n  }\n\n  loadUserData() {\n    const currentUser = this.authService.getCurrentUser();\n    if (currentUser) {\n      this.user = currentUser;\n      this.profilePicturePreview = currentUser.profilePicture || 'assets/img/fondos/profile picture.webp';\n    }\n  }\n\n  toggleEditMode() {\n    this.editMode = !this.editMode;\n  }\n\n  onSaveUserProfile(form: NgForm) {\n    if (form.valid) {\n      this.authService.updateCurrentUser(this.user);\n      this.authService.updateUserInList(this.user);\n      this.toggleEditMode();\n    }\n  }\n\n  onProfilePictureChange(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.profilePicturePreview = reader.result as string;\n        this.user.profilePicture = this.profilePicturePreview;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile-component/user-profile-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile-component\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-profile-component.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                profilePicturePreview\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadUserData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onProfilePictureChange\n                            \n                            \n                                onSaveUserProfile\n                            \n                            \n                                toggleEditMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile-component/user-profile-component.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserData\n                        \n                    \n                \n            \n            \n                \nloadUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile-component/user-profile-component.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile-component/user-profile-component.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProfilePictureChange\n                        \n                    \n                \n            \n            \n                \nonProfilePictureChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile-component/user-profile-component.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSaveUserProfile\n                        \n                    \n                \n            \n            \n                \nonSaveUserProfile(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile-component/user-profile-component.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditMode\n                        \n                    \n                \n            \n            \n                \ntoggleEditMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile-component/user-profile-component.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile-component/user-profile-component.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicturePreview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile-component/user-profile-component.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: '',\n    password: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile-component/user-profile-component.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  role: string;\n  password: string;\n  birthday?: string;\n  address?: string;\n  profilePicture?: string;\n}\n\n@Component({\n  selector: 'app-user-profile-component',\n  standalone: true,\n  templateUrl: './user-profile-component.component.html',\n  styleUrl: './user-profile-component.component.css',\n  imports: [FormsModule, CommonModule]\n})\n\nexport class UserProfileComponent implements OnInit {\n  user: User = {\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: '',\n    password: ''\n  };\n  editMode: boolean = false;\n  profilePicturePreview: string = '';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.loadUserData();\n  }\n\n  loadUserData() {\n    const currentUser = this.authService.getCurrentUser();\n    if (currentUser) {\n      this.user = currentUser;\n      this.profilePicturePreview = currentUser.profilePicture || 'assets/img/fondos/profile picture.webp';\n    }\n  }\n\n  toggleEditMode() {\n    this.editMode = !this.editMode;\n  }\n\n  onSaveUserProfile(form: NgForm) {\n    if (form.valid) {\n      this.authService.updateCurrentUser(this.user);\n      this.authService.updateUserInList(this.user);\n      this.toggleEditMode();\n    }\n  }\n\n  onProfilePictureChange(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.profilePicturePreview = reader.result as string;\n        this.user.profilePicture = this.profilePicturePreview;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n}\n    \n\n    \n        \n    \n      \n        \n          \n          \n          Cambiar Foto\n        \n      \n      \n        \n          \n            Nombres\n            \n          \n          \n            Apellidos\n            \n          \n          \n            Correo\n            \n          \n          \n            Cumpleaños\n            \n          \n          \n            Dirección\n            \n          \n          Editar Perfil\n          \n            Guardar Cambios\n            Cancelar\n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Cambiar Foto                                                  Nombres                                            Apellidos                                            Correo                                            Cumpleaños                                            Dirección                                Editar Perfil                      Guardar Cambios            Cancelar                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AreaDashboardComponent', 'selector': 'app-area-dashboard'},{'name': 'AuditorDashboardComponent', 'selector': 'app-auditor-dashboard'},{'name': 'BodegaDashboardComponent', 'selector': 'app-bodega-dashboard'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticateUser\n                            \n                            \n                                createUser\n                            \n                            \n                                getAuthenticatedUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                    Private\n                                updateLocalStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticateUser\n                        \n                    \n                \n            \n            \n                \nauthenticateUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticatedUser\n                        \n                    \n                \n            \n            \n                \ngetAuthenticatedUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(localStorage.getItem('users')!) || []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/user.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private users: { username: string, password: string }[] = JSON.parse(localStorage.getItem('users')!) || [];\n\n  createUser(username: string, password: string) {\n    this.users.push({ username, password });\n    this.updateLocalStorage();\n  }\n\n  authenticateUser(username: string, password: string): boolean {\n    const user = this.users.find(user => user.username === username && user.password === password);\n    if (user) {\n      localStorage.setItem('authenticatedUser', JSON.stringify(user));\n      return true;\n    }\n    return false;\n  }\n\n  logoutUser() {\n    localStorage.removeItem('authenticatedUser');\n  }\n\n  getAuthenticatedUser() {\n    return JSON.parse(localStorage.getItem('authenticatedUser')!);\n  }\n\n  private updateLocalStorage() {\n    localStorage.setItem('users', JSON.stringify(this.users));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/area-dashboard/area-dashboard.component.ts\n            \n            component\n            AreaDashboardComponent\n            \n                0 %\n                (0/66)\n            \n        \n        \n            \n                \n                src/app/area-dashboard/area-dashboard.component.ts\n            \n            interface\n            Bodega\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auditor-dashboard/auditor-dashboard.component.ts\n            \n            component\n            AuditorDashboardComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            Notification\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/bodega-dashboard/bodega-dashboard.component.ts\n            \n            component\n            BodegaDashboardComponent\n            \n                0 %\n                (0/68)\n            \n        \n        \n            \n                \n                src/app/bodega-dashboard/bodega-dashboard.component.ts\n            \n            interface\n            Bodega\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/84)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            interface\n            Bodega\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/notificaciones/notificaciones.component.ts\n            \n            component\n            NotificacionesComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/notificaciones/notificaciones.component.ts\n            \n            interface\n            Notification\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/service/notificacion.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/service/product.service.ts\n            \n            interface\n            Movimiento\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/service/product.service.ts\n            \n            interface\n            Notification\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/service/product.service.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/user-profile-component/user-profile-component.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/user-profile-component/user-profile-component.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.3\n        \n            bootstrap : ^5.3.3\n        \n            bootstrap-icons : ^1.11.3\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nErpPraxa\nThis project was generated with Angular CLI version 18.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PartialProduct   (src/.../product.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/service/product.service.ts\n    \n    \n        \n            \n                \n                    \n                    PartialProduct\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration()]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
